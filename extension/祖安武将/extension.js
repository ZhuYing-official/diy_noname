game.import("extension",function(lib,game,ui,get,ai,_status){return {name:"祖安武将",editable:false,content:function (config,pack){
        //delete lib.extensionMenu.extension_祖安武将.author;
        //delete lib.extensionMenu.extension_祖安武将.delete;
        //delete lib.extensionMenu.extension_祖安武将.edit;
    // ---------------------------------------开发者模式------------------------------------------//
    if(1==0) {
    lib.config['extension_祖安武将_upspeed']='0';
    lib.config['extension_祖安武将_newui']='4';
    lib.config['extension_祖安武将_helasisy']=true;
    if(1==0) {
    lib.config['extension_祖安武将_bizhi']='3';
    lib.config['extension_祖安武将_wallpaper']='10';
    }
    lib.config['extension_祖安武将_text']=true;
    lib.config['extension_祖安武将_isPC']='1';
    }
    if(lib.config.plays.contains('coin')) {
        if(lib.config.coin!=99999999) game.changeCoin(99999999-lib.config.coin);
    }
    
    // ---------------------------------------手机端检测------------------------------------------//
    // ---------------------------------------手机端检测------------------------------------------//
    // ---------------------------------------错误还原------------------------------------------//
    localStorage.setItem("zuanasset",lib.assetURL);
    if(lib.config['extension_祖安武将_startgame']) {
        var itemd=lib.config['extension_祖安武将_startgame'];
                    if(itemd.indexOf('next_')!=-1) {
                        lib.config['extension_祖安武将_startgame']=itemd.slice(5);
                    }
    localStorage.setItem("zuanstart",lib.config['extension_祖安武将_startgame']);
    }else {
    localStorage.setItem("zuanstart",'off');
    }
    lib.config.yuanqilist=['yuanqi_xuexiang','yuanqi_qianghua','yuanqi_fantan','yuanqi_taoyi','yuanqi_diaoxiang','yuanqi_zhenshang','yuanqi_suji','yuanqi_nengliang','yuanqi_lengque','yuanqi_jinzhan','yuanqi_bingdun','yuanqi_yiwang','yuanqi_shangdian','yuanqi_xuanze','yuanqi_landun','yuanqi_huodun','yuanqi_dudun','yuanqi_cidun','yuanqi_xuedun','yuanqi_hudun','yuanqi_suidun','yuanqi_zishou','yuanqi_yaoshui','yuanqi_xilan','yuanqi_xixue','yuanqi_xuli','yuanqi_xiandan','yuanqi_miaozhun','yuanqi_jiguang','yuanqi_fanshe','yuanqi_yuansu','yuanqi_chuantou','yuanqi_fangyu','yuanqi_xiudun','yuanqi_leidun','yuanqi_shuangwu','yuanqi_chongwu','yuanqi_guidun','yuanqi_shixue','yuanqi_kuangbao','yuanqi_zhadan','yuanqi_jindun'];
    lib.config['extension_祖安武将_informknow']='0';
    lib.config['extension_祖安武将_about3']='1';
    lib.config['extension_祖安武将_falseedit']='0';
    lib.config.zuanboss=1;
    lib.config.zuanusecardTX='none';
    if(parseFloat(lib.config['extension_祖安武将_mode'])!='1'&&parseFloat(lib.config['extension_祖安武将_upspeed'])=='0') {
        game.saveConfig('extension_祖安武将_upspeed','10');
    }
    var wallpaper=parseFloat(lib.config['extension_祖安武将_wallpaper']);
    if(wallpaper=='0'||wallpaper=='2'||wallpaper=='6') lib.config['extension_祖安武将_wallpaper']++;
    var bizhi=parseFloat(lib.config['extension_祖安武将_bizhi']);
    if(bizhi=='0'||bizhi=='2'||bizhi=='5') lib.config['extension_祖安武将_bizhi']++;
    var items=lib.config['extension_祖安武将_zhishixian'];
                    if(items.indexOf('next_')!=-1) {
                        lib.config['extension_祖安武将_zhishixian']=items.slice(5);
                    }
    if(parseFloat(lib.config['extension_祖安武将_zuancoveropacity'])!='NaN') {
    lib.config.zuancoveropacity=parseFloat(lib.config['extension_祖安武将_zuancoveropacity']*0.1);
    }else {
    lib.config.zuancoveropacity='0.8';
    }
    /*
    if(parseFloat(lib.config['extension_祖安武将_isPC'])=='2') {
        if(parseFloat(lib.config['extension_祖安武将_fun'])=='7') {
        lib.config['extension_祖安武将_fun']='1';
        alert('抱歉！   _(´ཀ`」 ∠)__ \n      目前由于特殊字符的原因，为防止出现错误，元气系统 在电脑端暂不能使用！\n      已为您暂时关闭此 娱乐玩法。\n      再次选择 娱乐玩法 的其他选项后将不会再次出现此弹窗。');
        }
    }
    */
    // ---------------------------------------处理dying显示------------------------------------------//
    game.dyingShow=function(player,newui){
            'step 0'
                //alert(player.name);
                var rdying=false;
                if(player.hasSkill('zuan_hudun')) {
                    if(player.hp<=1&&player.countMark('zuan_hudun')<1) rdying=true;
                }else {
                    if(player.maxHp>1) {
                        if(player.hp<=1) rdying=true;
                    }else {
                        if(player.hp<=0) rdying=true;
                    }
                }

                if(rdying&&!player.storage.dyingimgshow) {

                    var translists=['none','tutou','shousha','zhounian'];
                    player.storage.dyingimgshow=true;
                    game.broadcastAll(function(player){
                        player.storage.dying_img = document.createElement('div');
                        if(newui!='0') {   
                            player.storage.dying_img.setBackgroundImage('extension/祖安武将/cover/'+translists[newui]+'_dying.png');
                        }
                        player.storage.dying_img.style.opacity=lib.config.zuancoveropacity;
                        player.storage.dying_img.style.backgroundSize='cover';
                        player.storage.dying_img.style.width='100%';
                        player.storage.dying_img.style.height='100%';
                        player.storage.dying_img.style.transform='translateY(-200px)';
                        player.node.avatar.appendChild(player.storage.dying_img);
                        ui.refresh(player.storage.dying_img);
                        player.storage.dying_img.style.transform='';
                    },player);

                }else if(player.storage.dyingimgshow&&!rdying) {

                    player.storage.dyingimgshow=false;
                    game.broadcastAll(function(player){
                        player.storage.dying_img.style.transform='translateY(-200px)';
                        player.storage.dying_img.delete();
                    },player)

                }
        };
    // ---------------------------------------新播放alive------------------------------------------//
    game.checkWH=function(width,height) {
            var widther=window.innerWidth/width;
            if(height*widther>window.innerHeight) {
                return 'width: 100%';
            }else {
                return 'height: 100%';
            }
    }
    window.newaliveusing=false;
    game.newalive=function(file,time,lawer) {
        if(window.newaliveusing||time<=0.5) return;
        window.newaliveusing=true;
        setTimeout(function () {
            window.newaliveusing=false;
        }, time*1000+250);
        //('extension/祖安武将/mode/mode_hellfire.gif',3); 
            function zuangif(file,opa,click){
            window.zuanalivegif = ui.create.node('img');
            zuanalivegif.src=  lib.assetURL + file;
            //alert(window.innerWidth);
            var zuanwid=game.checkWH(zuanalivegif.width,zuanalivegif.height);
            if(click) {
                zuanalivegif.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: '+opa*0.1*lawer+';display: block;position: absolute;background:none;z-index: 999;'+zuanwid+'!important;left: 0;bottom: 0';
            }else {
                zuanalivegif.style.cssText='text-align: center;margin: auto;opacity: '+opa*0.1*lawer+';display: block;position: absolute;background:none;z-index: 999;'+zuanwid+'!important;left: 0;bottom: 0';
            }
            document.body.appendChild(zuanalivegif);
            }
            function zuanfora(a){
                zuangif(file,a,false);
                setTimeout(function () {
                    if(a<10) {
                        zuanalivegif.remove();
                        zuanfora(a+1);
                    }else {
                        setTimeout(function () {
                            zuanalivegif.remove();
                            zuanforb(a-1);
                        }, time*1000-500);
                    }
                }, 25);
            }
            function zuanforb(b){
                zuangif(file,b,true);
                setTimeout(function () {
                    zuanalivegif.remove();
                    if(b>0) {
                        zuanforb(b-1);
                    }
                }, 25);
            }
            zuanfora(0);
        /*setTimeout(function () {
            zuanalivegif.remove();
        }, time*1000);*/
    };
    window.newaudiousing=false;
    game.newaudio=function(file,time) {
        if(window.newaudiousing) return;
        window.newaudiousing=true;
        setTimeout(function () {
            window.newaudiousing=false;
        }, time*1000+250);
            var mp3 =  lib.assetURL + file;
            var mp3 = new Audio(mp3);
            mp3.volume=lib.config.volumn_audio/8;//mp3 的音量
            mp3.play(); //播放 mp3这个音频对象
            setTimeout(function () {
                zuanaud(10);
            }, time*1000);
            function zuanaud(x){
                if(x<0) {
                    mp3.remove();
                    return;
                }
                mp3.volume=lib.config.volumn_audio*x*0.1/8;
                setTimeout(function () {
                    zuanaud(x-1);
                }, 200);
            }

    };
    game.expRevive=function(dd){
        if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','revive.ogg');
        dd.revive(dd.maxHp);
        game.addVideo('revive',dd);
        dd.draw(Math.ceil(dd.storage._levelskill*0.5));
        dd.storage.relife=Math.ceil(dd.storage._levelskill*0.4+0.1);
        dd.markSkill('_expskill');
        dd.syncStorage('_expskill');   
        dd.markSkill('_levelskill');
        dd.syncStorage('_levelskill');   
        if(dd.hasSkill('zuan_hudun')){
             dd.storage.zuan_hudun=dd.storage.zuan_maxhujia;
             dd.markSkill('zuan_hudun');
             dd.syncStorage('zuan_hudun');   
        }
        dd.update();
        dd.$damagepop('重生');
        game.log(dd,'<span class=\"zuantext\" style=\"color: #7CFC00\">获得了重生</span>');
        return get.translation(dd.name);
    };
    game.zuanExp=function(player,exp){
        if(parseFloat(lib.config['extension_祖安武将_upspeed'])!='0') {
                    var speed=0.1*parseFloat(lib.config['extension_祖安武将_upspeed']);
                    } else {
                    var speed=1;
                    }
        var adds=Math.ceil(exp*speed);
        player.addMark('_expskill',adds,false);
        if(lib.config['extension_祖安武将_levelsay']) player.say('获得了'+adds+'点经验');
        var maxexp=20+2*player.storage._levelskill;
        if(player.storage._expskill>=maxexp&&player.storage._levelskill<10) {
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='4') {
    if(parseFloat(lib.config['extension_祖安武将_audio'])=='4') {
        var versons='shousha';
    }else {
        var versons='ten';
    }
    game.playAudio('..','extension','祖安武将','audio',versons,'level.mp3');
 }else if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','level.ogg');
        player.removeMark('_expskill',maxexp,false);
        player.addMark('_levelskill',1,false);
        game.log(player,'提升了一个<span class=\"zuantext\" style=\"color: #FFFF00\">等级</span>');
        if(!lib.config['extension_祖安武将_balance']) player.draw();
            if(player.storage._levelskill==4) {
                if(parseFloat(lib.config['extension_祖安武将_mode'])=='6') {
                    var skillget=['hongyan','lianhuan','tiandu'].randomGet();
                    if(player.hasSkill('lianhuan')) var skillget=['hongyan','tiandu'].randomGet();
                    if(player.hasSkill('tiandu')) var skillget=['hongyan','lianhuan'].randomGet();
                    if(player.hasSkill('hongyan')) var skillget=['lianhuan','tiandu'].randomGet();
                    player.addSkill(skillget);
                }
            }
            if(player.storage._levelskill==8) {
                if(parseFloat(lib.config['extension_祖安武将_mode'])=='6') {
                    var skillget=['guanxing','kanpo','guicai'].randomGet();
                    if(player.hasSkill('guanxing')) var skillget=['kanpo','guicai'].randomGet();
                    if(player.hasSkill('kanpo')) var skillget=['guanxing','guicai'].randomGet();
                    if(player.hasSkill('guicai')) var skillget=['guanxing','kanpo'].randomGet();
                    player.addSkill(skillget);
                }
            }
        if(lib.config['extension_祖安武将_levelstrong']=='old') {
            if(player.storage._levelskill==4) {
                player.changeHujia();
            }
            //if(player.storage._levelskill==7) player.addSkill('plusdistance');
            if(player.storage._levelskill==8) {
                player.gainMaxHp();
            }
            //if(player.storage._levelskill==10) player.addSkill('maxlevel');
        }else if(lib.config['extension_祖安武将_levelstrong']=='new') {
            if(player.storage._levelskill==8) {
                player.gainMaxHp();
            }
        }
            if(lib.config['extension_祖安武将_levelsay']) player.say('提升了一个等级');
            player.storage.relife=Math.ceil(player.storage._levelskill*0.4+0.1);
        if(parseFloat(lib.config['extension_祖安武将_mode'])=='7'&&player.group!='western'&&Math.ceil(player.storage._levelskill*0.5)!=player.storage._levelskill*0.5) {
        player.logSkill('huanhai');
        var list=[];
        var list2=[];
        var players=game.players.concat(game.dead);
        for(i=0;i<players.length;i++){
            list2.add(players[i].name);
            list2.add(players[i].name1);
            list2.add(players[i].name2);
        }
        for(var i in lib.character){
            if(lib.character[i][1]!=player.group) continue;
            if(lib.character[i][3].length<1) continue;
            if(lib.character[i][4].contains('forbidai')) continue;
            if(lib.character[i][4].contains('boss')) continue;
            if(lib.character[i][4].contains('minskin')) continue;
            if(player.storage.huanhai.contains(i)) continue;
            if(list2.contains(i)) continue;
            list.push(i);
        }
        var name=list.randomGet();
        player.storage.huanhai.push(name);
        player.markSkill('huanhai');
        var skills=lib.character[name][3];
            player.addSkill(skills.randomGet());
        game.delay();
        }
        }
        if(player.storage._levelskill>=10) player.removeMark('_expskill',player.storage._expskill);
        return player.storage._levelskill;
    };
    game.strengthPlayer=function(player){
        'step 0'
        game.sthpla=[];
        game.sthpla.oldhp=player.hp;
        game.sthpla.oldmaxhp=player.maxHp;
        //game.sthpla.oldstorage=player.storage;
        lib.characterPackSsr={
            "mode_extension_祖安武将":lib.characterPack["mode_extension_祖安武将"]
        }
        if(player.name.indexOf('unknown')==-1||player.name==player.name1) {
            game.sthpla.hisname="name";
        }else {
            game.sthpla.hisname="name1";
        }
        game.sthpla.num=1;
        'step 1'
        game.sthpla.changehp=false;
        game.sthpla.namelist=['fazheng','xin_fazheng','yuanshu','re_yuanshu','yiji','xf_yiji','yuanshao','re_yuanshao','yuji','re_yuji','lusu','re_lusu','zhangliang','re_zhangliang','xuhuang','re_xuhuang','xiahouyuan','re_xiahouyuan','xushu','re_xushu'];
        //alert(player.name);
        game.sthpla.myname1=player[game.sthpla.hisname];
        if(player.name2) {
            game.sthpla.myname2=player.name2;
        }else {
            game.sthpla.myname2='none';
        }
        game.sthpla.sklists=[];
        var oldlist=lib.character[game.sthpla.myname1][3];
        if(game.sthpla.myname2!='none') {
            oldlist=oldlist.concat(lib.character[game.sthpla.myname2][3]);
        }
        var sklist=player.skills;
        for(i=0;i<sklist.length;i++) {
            if(!oldlist.contains(sklist[i])) {
                game.sthpla.sklists.push(sklist[i]);
            }
        }
        game.sthpla.changehpnum=0;
        var str=''+lib.character[game.sthpla.myname1][2];
        var index=str.indexOf('/');
        var myhp = str.substr(index + 1,str.length);
        'step 2'
        if(game.sthpla.myname1=='re_sunben') game.sthpla.myname1='re_sunce';
        if(game.sthpla.myname2=='re_sunben') game.sthpla.myname2='re_sunce';
        if(game.sthpla.myname1.indexOf('ssr_')!=-1) {
            var inited=false;
            for(p=0;p*2<game.sthpla.namelist.length;p++) {
                if(game.sthpla.myname1=='ssr_'+game.sthpla.namelist[p*2]) {
                    if(game.sthpla.myname2!='none') {
                        player.init(game.sthpla.namelist[p*2+1]);
                    }else {
                        player.init(game.sthpla.namelist[p*2+1],game.sthpla.myname2);
                    }
                    game.sthpla.changehp=true;
                    inited=true;
                    break;
                }
            }
            if(!inited) {
                    if(game.sthpla.myname2!='none') {
                        player.init(game.sthpla.myname1.slice(4));
                    }else {
                        player.init(game.sthpla.myname1.slice(4),game.sthpla.myname2);
                    }
                game.sthpla.changehp=true;
            }
        }
        if(game.sthpla.myname2!='none'&&game.sthpla.myname2.indexOf('ssr_')!=-1) {
            var inited=false;
            for(p=0;p*2<game.sthpla.namelist.length;p++) {
                if(game.sthpla.myname2=='ssr_'+game.sthpla.namelist[p]) {
                    player.init(player[game.sthpla.hisname],game.sthpla.namelist[p+1]);
                    game.sthpla.changehp=true;
                    inited=true;
                    break;
                }
            }
            if(!inited) {
                player.init(player[game.sthpla.hisname],player.name2.slice(4));
                game.sthpla.changehp=true;
            }
        }
        'step 3'
        game.sthpla.skill='none';
        for(var a in lib.characterPackSsr){
            for(var b in lib.characterPackSsr[a]){
                var role=lib.characterPackSsr[a][b];
                if(game.sthpla.myname1.indexOf(b.slice(4))!=-1&&(!(player[game.sthpla.hisname].indexOf('yujin')!=-1&&b=='ssr_yuji'))&&(!(player[game.sthpla.hisname].indexOf('zhangheng')!=-1&&b=='ssr_zhanghe'))) {
                    var lists=lib.character[player[game.sthpla.hisname]][3];
                    for(i=0;i<lists.length;i++) {
                        if(player.hasSkill(lists[i])) {
                            player.removeSkill(lists[i]);
                        }
                    }
                    player.addSkill(role[3].slice(0));
                }
                if(game.sthpla.myname2.indexOf(b.slice(4))!=-1&&(!(player.name2.indexOf('yujin')!=-1&&b=='ssr_yuji'))&&(!(player.name2.indexOf('zhangheng')!=-1&&b=='ssr_zhanghe'))) {
                    var lists=lib.character[player.name2][3];
                    for(i=0;i<lists.length;i++) {
                        if(player.hasSkill(lists[i])) {
                            player.removeSkill(lists[i]);
                        }
                    }
                    player.addSkill(role[3].slice(0));
                }
                player.update();
            }
        }
        'step 4'
            for(i=0;i<game.sthpla.sklists.length;i++) {
                player.addSkill(game.sthpla.sklists[i]);
            }
            player.hp=game.sthpla.oldhp;
            player.maxHp=game.sthpla.oldmaxhp;
            //player.storage=game.sthpla.oldstorage;
            player.update();
            return 'Finished.';
        };
    // ---------------------------------------节日播报------------------------------------------//
        var datehappen=localStorage.getItem("zuanfestival");
        if(!datehappen) happen=0;
var d = new Date();
var month = d.getMonth()+1;
var date = d.getDate();
var year = d.getFullYear();
var checkhappen=year*10000+month*100+date;
        if(lib.config['extension_祖安武将_festival']&&datehappen!=checkhappen) {
            localStorage.setItem("zuanfestival",checkhappen);
            var birmon=parseFloat(lib.config['extension_祖安武将_birthdaymonth']);
            var birday=parseFloat(lib.config['extension_祖安武将_birthdaydate']);
//month = 5;
//date = 4;
//alert(date);
//生日
if(month==birmon&&date==birday) {
    game.newaudio('extension/祖安武将/effects/Festival/Birthday.mp3',14);
    game.newalive('extension/祖安武将/effects/Festival/Birthday.gif',6,0.8);
}
//新年1天
if(month==1&&date==1) {
    game.newaudio('extension/祖安武将/effects/Festival/Newyear.mp3',14);
    game.newalive('extension/祖安武将/effects/Festival/Newyear.gif',13,0.7);
}
//新春2天
if(month==1&&date<=3&&date>1) {
    game.newaudio('extension/祖安武将/effects/Festival/Spring.mp3',10);
    game.newalive('extension/祖安武将/effects/Festival/Spring.gif',6,0.7);
}
//元宵1天
if(month==1&&date==15) {
    game.newaudio('extension/祖安武将/effects/Festival/Lantern.mp3',8);
    game.newalive('extension/祖安武将/effects/Festival/Lantern.gif',6,0.7);
}
//情人节1天
if(month==2&&date==14) {
    game.newaudio('extension/祖安武将/effects/Festival/Valentine.mp3',7);
    game.newalive('extension/祖安武将/effects/Festival/Valentine.gif',6,0.7);
}
//妇女1天
if(month==3&&date==8) {
    game.newaudio('extension/祖安武将/effects/Festival/Women.mp3',9);
    game.newalive('extension/祖安武将/effects/Festival/Women.gif',6,0.7);
}
//植树1天
if(month==3&&date==12) {
    game.newaudio('extension/祖安武将/effects/Festival/Arbor.mp3',7);
    game.newalive('extension/祖安武将/effects/Festival/Arbor.gif',6,0.7);
}
//愚人1天
if(month==4&&date==1) {
    game.newaudio('extension/祖安武将/effects/Festival/AprilFools.mp3',13);
    game.newalive('extension/祖安武将/effects/Festival/AprilFools.gif',11,0.7);
}
//清明1天
if(month==4&&date==5) {
    game.newaudio('extension/祖安武将/effects/Festival/Qingming.mp3',10);
    game.newalive('extension/祖安武将/effects/Festival/Qingming.gif',8,0.7);
}
//劳动1天
if(month==5&&date==1) {
    game.newaudio('extension/祖安武将/effects/Festival/InternationalLabour.mp3',8);
    game.newalive('extension/祖安武将/effects/Festival/InternationalLabour.gif',6,0.7);
}
//青年1天
if(month==5&&date==4) {
    game.newaudio('extension/祖安武将/effects/Festival/ChineseYouth.mp3',14);
    game.newalive('extension/祖安武将/effects/Festival/ChineseYouth.gif',14,0.7);
}
//儿童1天
if(month==6&&date==1) {
    game.newaudio('extension/祖安武将/effects/Festival/Children.mp3',8);
    game.newalive('extension/祖安武将/effects/Festival/Children.gif',6,0.7);
}
//建军1天
if(month==8&&date==1) {
    game.newaudio('extension/祖安武将/effects/Festival/ArmyDay.mp3',19);
    game.newalive('extension/祖安武将/effects/Festival/ArmyDay.gif',5,0.7);
}
//教师1天
if(month==8&&date==12) {
    game.newaudio('extension/祖安武将/effects/Festival/Teacher.mp3',11);
    game.newalive('extension/祖安武将/effects/Festival/Teacher.gif',8,0.7);
}
//中秋1天
if(month==8&&date==15) {
    game.newaudio('extension/祖安武将/effects/Festival/MidAutumn.mp3',10);
    game.newalive('extension/祖安武将/effects/Festival/MidAutumn.gif',8,0.7);
}
//国庆7天
if(month==10&&date<=7) {
    game.newaudio('extension/祖安武将/effects/Festival/NationalDay.mp3',21);
    game.newalive('extension/祖安武将/effects/Festival/NationalDay.gif',10,0.7);
}
//万圣1天
if(month==10&&date==31) {
    game.newaudio('extension/祖安武将/effects/Festival/Halloween.mp3',12);
    game.newalive('extension/祖安武将/effects/Festival/Halloween.gif',10,0.8);
}
//平安夜1天
if(month==12&&date==24) {
    game.newaudio('extension/祖安武将/effects/Festival/BaiSilent.mp3',9);
    game.newalive('extension/祖安武将/effects/Festival/BaiSilent.gif',8,0.7);
}
//圣诞1天
if(month==12&&date==25) {
    game.newaudio('extension/祖安武将/effects/Festival/MerryChristmas.mp3',11);
    game.newalive('extension/祖安武将/effects/Festival/MerryChristmas.gif',10,0.7);
}
}
    // ---------------------------------------名称命名------------------------------------------//
    lib.translate._levelskill = "等级";
    lib.translate._expskill = "经验";
    lib.translate._seadreammodeskill = "幻海";
    lib.translate._diycharacterskill = "开发工具";
    // ---------------------------------------壁纸栏------------------------------------------//
    // ---------------------------------------前置背景------------------------------------------//
     lib.config.standardbackground=ui.background.style.backgroundImage;
     lib.config.zuanexwallpaper='off';
     var bizhi=parseFloat(lib.config['extension_祖安武将_bizhi']);
     if(bizhi=='3') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/gif_chunri.jpg");
     if(bizhi=='5') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/chunri.jpg");
     if(bizhi=='6') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/xiahe.jpg");
     if(bizhi=='7') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/yueye.jpg");
     if(bizhi=='8') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/qinbing.jpg");
     if(bizhi=='9') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/caojiegarden.jpg");
     if(bizhi=='10') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/shengong.jpg");
     if(bizhi=='11') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/yuanxi.jpg");
     if(bizhi=='12') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/canglong.jpg");
     if(bizhi=='13') game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/menu/posui.jpg");
     if(lib.config['extension_祖安武将_exwallpaper']) {
                            if(lib.config.mode=='boss') {
                                lib.config.zuanexwallpaper='on';
                                game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/boss/menu.jpg");
                            }
                            if(lib.config.mode=='chess'||lib.config.mode=='tafang'||lib.config.mode=='stone') {
                                lib.config.zuanexwallpaper='on';
                                game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/chess/chess.jpg");
                            }
                            if(lib.config.mode=='versus'||lib.config.mode=='single') {
                                lib.config.zuanexwallpaper='on';
                                game.broadcastAll()+ui.background.setBackgroundImage("extension/祖安武将/wallpaper/versus/menu.jpg");
                            }
                        }
if(1==0) {
    alert("最后：\n给你呈现一张壁纸，它是来自作者的广告\n你可以在拓展页面中“前置壁纸”选项中关闭！\n（本弹窗只会弹出一次）");
}





    // ---------------------------------------开始界面------------------------------------------//


    if(typeof(czuanbackground)!='undefined'&&czuanbackground) {
        tlogo.remove();
        backgroundtop.remove();
        var plogo=localStorage.getItem("backgroundlogo");
        if(!(plogo=="5"||plogo=="9")) {
            backgroundpaper.remove();
        }
        forunderlinefinish=true;
        //backunderline.remove();
        czuanbackground=false;
    }
    if(typeof(formovepaperfinish)!='undefined'&&!formovepaperfinish) {
        movepaper.remove();
        movepaperbasic.remove();
        formovepaperfinish=true;
    }



    // ---------------------------------------指示线------------------------------------------//
                    
            var jianqiLineAnim = {
                "time": 1200,
                "position": "screen",
                "width": "256px",
                "height": "128px",
                "backgroundSize": "100% 100%",
                "opacity": 1,
                "show": "none",
                "fade": true,
                "pause": false,
                "rate_zhen": 18,
                "jump_zhen": false,
                "qianzhui": "",
                "liang": false,
                "isLine": true,
                "cycle": true,
                "style": {},
                "skills": [],
                "cards": [],
                "forbid": false,
                "image": "jianqilinexy"
            };
            game.zsPlayLineAnimation=function(name,node,fake,points){
                var animation=jianqiLineAnim;
                animation["image"] = name;
                if(lib.config.zsGuideTime){
                    animation["time"] = parseInt(lib.config.zsGuideTime);
                }
                if(animation==undefined) return;
                if(animation.time<=100000){
                    if(animation.pause!=false&&!_status.paused2&&!_status.nopause){
                        _status.zhx_onAnimationPause=true;
                        game.pause2();
                    };
                    if(_status.zhx_onAnimation==undefined) _status.zhx_onAnimation=0;
                    _status.zhx_onAnimation++;
                };
                var src;
                if(animation.image!=undefined) src='extension/祖安武将/pointer/'+animation.image+'?'+new Date().getTime();
                var finish=function(){
                    var animationID;
                    var timeoutID;
                    var interval;
                    var div=ui.create.div();
                    if(fake==true){
                        ui.window.appendChild(div);
                    }else{
                        if(node==undefined||node==false){
                            ui.window.appendChild(div);
                        }else{
                            node.appendChild(div);
                        };
                    };
                    if(animation.style!=undefined){
                        for(var i in animation.style){
                            if(i=='innerHTML') continue;
                            div.style[i]=animation.style[i];
                        };
                    };
                    var judgeStyle=function(style){
                        if(animation.style==undefined) return false;
                        if(animation.style!=undefined&&animation.style[style]!=undefined) return true;
                        return false;
                    };
                    if(judgeStyle('innerHTML')) div.innerHTML=animation.style.innerHTML;
                    if(judgeStyle('width')==false) div.style.width=animation.width;
                    if(judgeStyle('height')==false) div.style.height=animation.height;
                    if(judgeStyle('backgroundSize')==false&&judgeStyle('background-size')==false) div.style.backgroundSize=animation.backgroundSize;
                    if(judgeStyle('opacity')==false) div.style.opacity=animation.opacity;
                    if(judgeStyle('zIndex')==false&&judgeStyle('z-index')==false) div.style.zIndex=1001;
                    if(judgeStyle('borderRadius')==false&&judgeStyle('border-radius')==false) div.style.borderRadius='5px';
                    if(judgeStyle('pointer-events')==false&&judgeStyle('pointerEvents')==false) div.style['pointer-events']='none';
                    if(src!=undefined){
                        if(animation.image.indexOf('.')!=-1){
                            div.setBackgroundImage(src);
                        }else{
                            var type_frame1=0;
                            var type_frame='.jpg';
                            var num_frame=1;
                            type_frame='.png';
                            num_frame=8;
                            var folder_frame=lib.assetURL+'extension/祖安武将/pointer/'+animation.image+'/';
                            var div1=ui.create.div();
                            div1.style.height='100%';
                            div1.style.width='100%';
                            div1.style.top='0px';
                            div1.style.left='0px';
                            div1.style.opacity='0.7';
                            div.appendChild(div1);
                                var canvas=document.createElement("canvas");
                                canvas.width=div1.offsetWidth;
                                canvas.height=div1.offsetHeight;
                                div1.appendChild(canvas);
                                var context=canvas.getContext("2d");
                                var start;
                                var imgs=[];
                                var imgs_num=0;
                                for(i=0;i<num_frame;i++){
                                    var img=new Image();
                                    img.src=folder_frame+(animation.qianzhui==undefined?'':animation.qianzhui)+
                                    (animation.liang==true?(i<10?'0'+i:i):i)+type_frame;
                                    if(i>=num_frame-1) img.zhx_final=true;
                                    img.onload=function(){
                                        imgs.push(this);
                                        if(this.zhx_final==true) start();
                                    };
                                    img.onerror=function(){
                                        if(this.zhx_final==true) start();
                                    };
                                };
                                start=function(){
                                    var play=function(){
                                        if(imgs_num>=imgs.length) return;
                                        var img=imgs[imgs_num];
                                        context.clearRect(0,0,img.width,img.height);
                                        context.drawImage(img,0,0,img.width,img.height,0,0,div1.offsetWidth,div1.offsetHeight);
                                        imgs_num++;
                                        if(animation.jump_zhen==true&&imgs[imgs_num+1]!=undefined) imgs.remove(imgs_num+1);
                                        if(imgs_num>=imgs.length){
                                            if(animation.cycle==true){
                                                imgs_num=0;
                                            }else{
                                                if(interval!=undefined) clearInterval(interval);
                                                if(timeoutID!=undefined) clearTimeout(timeoutID);
                                                if(animationID!=undefined) cancelAnimationFrame(animationID);
                                            };
                                        };
                                    };
                                    interval=setInterval(play,animation.rate_zhen==undefined?45:(1000/animation.rate_zhen));
                                };
                                
                            
                        };
                    };
                    if(points==undefined){
                        if(fake==true){
                            div.style.top=(top-div.offsetHeight/2)+'px';
                            div.style.left=(left-div.offsetWidth/2)+'px';
                        }else{
                            if(judgeStyle('top')==false) div.style.top='calc(50% - '+(div.offsetHeight/2)+'px)';
                            if(judgeStyle('left')==false) div.style.left='calc(50% - '+(div.offsetWidth/2)+'px)';
                        };
                    }else{
                        div.style.top=(points[0][1]-div.offsetHeight/2)+'px';
                        div.style.left=(points[0][0])+'px';
                    };
                    if(points!=undefined){
                        var timeS=((animation.fade==true?animation.time-450:animation.time-100)/1000)/2;
                        var getAngle=function(x1,y1,x2,y2,bool){
                            var x=x1-x2;
                            var y=y1-y2;
                            var z=Math.sqrt(Math.pow(x,2)+Math.pow(y,2));
                            var cos=y/z;
                            var radina=Math.acos(cos);
                            var angle=180/(Math.PI/radina);
                            if(x2>x1&&y2===y1) angle=0;
                            if(x2>x1&&y2<y1) angle=angle-90;
                            if(x2===x1&&y1>y2) angle=-90;
                            if(x2<x1&&y2<y1) angle=270-angle;
                            if(x2<x1&&y2===y1) angle=180;
                            if(x2<x1&&y2>y1) angle=270-angle;
                            if(x2===x1&&y2>y1) angle=90;
                            if(x2>x1&&y2>y1) angle=angle-90;
                            if(bool==true&&angle>90) angle-=180; 
                            return angle;
                        };
                        var p1=points[0];
                        var p2=points[1];
                        var x0=p1[0];
                        var y0=p1[1];
                        var x1=p2[0];
                        var y1=p2[1];
                        div.style.transition='all 0s';
                        div.style.transform='rotate('+getAngle(x0,y0,x1,y1,true)+'deg)'+(x0>x1?'':' rotateY(180deg)');
                        div.style['transform-origin']='0 50%';
                        var div2=ui.create.div();
                        div2.style.zIndex=1000;
                        div2.style['pointer-events']='none';
                        div2.style.height='20px';
                        div2.style.width=(Math.pow(Math.pow(x1-x0,2)+Math.pow(y1-y0,2),0.5)+2)+'px';
                        div2.style.left=(x0)+'px';
                        div2.style.top=(y0-10)+'px';
                        div2.style.transform='rotate('+getAngle(x0,y0,x1,y1)+'deg) scaleX(0)';
                        div2.style['transform-origin']='0 50%';
                        div2.style.transition='all '+(timeS*4/3)+'s';
                        if(src!=undefined&&animation.image.indexOf('.')==-1){
                            div2.style.backgroundSize='100% 100%';
                            div2.style.opacity='0.7';
                            div2.setBackgroundImage('extension/祖安武将/pointer/'+animation.image+'/line.png');
                        }else{
                            div2.style.background='#ffffff';
                        };
                        setTimeout(function(){
                            div.style.transition='all '+(timeS*4/3)+'s';
                            div.style.transform+=' translateX('+(-(Math.pow(Math.pow(x1-x0,2)+Math.pow(y1-y0,2),0.5)+2))+'px)';
                            div2.style.transform='rotate('+getAngle(x0,y0,x1,y1)+'deg) scaleX(1)';
                        },50);
                        setTimeout(function(){
                            div2.style.transition='all '+(timeS*2/3)+'s';
                            div2.style.transform='rotate('+getAngle(x0,y0,x1,y1)+'deg) translateX('+
                            (Math.pow(Math.pow(x1-x0,2)+Math.pow(y1-y0,2),0.5)+2-
                            Math.pow(Math.pow(div.offsetHeight/2,2)+Math.pow(div.offsetWidth/2,2),0.5))+'px) scaleX(0.01)';
                        },50+timeS*4/3*1000);
                        node.appendChild(div2);
                    };
                    if(animation.time<=100000){
                        if(animation.fade==true){
                            if(div2!=undefined){
                                setTimeout(function(){
                                    div2.hide();
                                },animation.time-350);
                                setTimeout(function(){
                                    div.hide();
                                },animation.time-400);
                            }else{
                                setTimeout(function(){
                                    div.hide();
                                },animation.time-350);
                            };
                        };
                        setTimeout(function(){
                            if(interval!=undefined) clearInterval(interval);
                            if(timeoutID!=undefined) clearTimeout(timeoutID);
                            if(animationID!=undefined) cancelAnimationFrame(animationID);
                            if(fake==true){
                                ui.window.removeChild(div);
                            }else{
                                if(node==undefined||node==false){
                                    ui.window.removeChild(div);
                                }else{
                                    node.removeChild(div);
                                };
                            };
                            if(div2!=undefined ) node.removeChild(div2);
                            _status.zhx_onAnimation--;
                            if(_status.zhx_onAnimationPause==true&&_status.zhx_onAnimation==0){
                                delete _status.zhx_onAnimationPause;
                                game.resume2();
                            };
                        },animation.time);
                    };
                };
                if(animation.delay!=undefined){
                    setTimeout(finish,animation.delay);
                }else{
                    finish();
                };
            };
            game.zsOriginLineXy = game.linexy;
            game.zsShuimoLineXy = function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                var total=typeof arguments[1]==='number'?arguments[1]:lib.config.duration*2;
                var opacity=0.85;
                r = Math.floor(Math.random() * 256); //随机生成256以内r值
                g = Math.floor(Math.random() * 256); //随机生成256以内g值
                b = Math.floor(Math.random() * 256); //随机生成256以内b值
                var color=[r,g,b];
                var dashed=false;
                var drag=false;
                if(typeof arguments[1]=='object'){
                    for(var i in arguments[1]){
                        switch(i){
                            case 'opacity':opacity=arguments[1][i];break;
                            case 'color':color=arguments[1][i];break;
                            case 'dashed':dashed=arguments[1][i];break;
                            case 'duration':total=arguments[1][i];break;
                        }
                    }
                }
                else if(arguments[1]=='fire'||arguments[1]=='thunder'||arguments[1]=='green'){
                    color=arguments[1];
                }
                total *= 2;
                var longtou = ui.create.div('.zhx-longtou');
                ui.create.div('.zhx-longtou-image',longtou);
                color = [r,g,b];
                var node;
                if(arguments[1]=='drag'){
                    color=[r,g,b];
                    drag=true;
                    if(arguments[2]){
                        node=arguments[2]
                    }
                    else{
                        node=ui.create.div('.linexy.drag');
                        ui.create.div('.zhx-shuimo-line',node);
                        node.style.left=from[0]+'px';
                        node.style.top=from[1]+'px';
                        node.style.opacity=0.7;
                        longtou.style.left=from[0]+'px';
                        longtou.style.top=from[1]+'px';
                        longtou.style.opacity=0;
                        node.style.background='linear-gradient(transparent,rgba('+color.toString()+','+opacity+'),rgba('+color.toString()+','+opacity+'))';
                        if(game.chess){
                            ui.chess.appendChild(node);
                            ui.chess.appendChild(longtou);
                        }
                        else{
                            ui.arena.appendChild(node);
                            ui.arena.appendChild(longtou);
                        }
                    }
                }
                else{
                    node=ui.create.div('.linexy.hidden');
                    ui.create.div('.zhx-shuimo-line',node);
                    node.style.left=from[0]+'px';
                    node.style.top=from[1]+'px';
                    node.style.opacity=0.7;
                    node.style.background='linear-gradient(transparent,rgba('+color.toString()+','+opacity+'),rgba('+color.toString()+','+opacity+'))';
                    if(lib.config.zsGuideTime){
                        node.style.transitionDuration=(parseInt(lib.config.zsGuideTime)/1000)+'s';
                    }else{
                        node.style.transitionDuration=(1200/1000)+'s';
                    }
                    longtou.style.left=from[0]+'px';
                    longtou.style.top=from[1]+'px';
                    longtou.style.opacity=0;
                    if(lib.config.zsGuideTime){
                        longtou.style.transitionDuration=(parseInt(lib.config.zsGuideTime)/1000)+'s';
                    }else{
                        longtou.style.transitionDuration=(1200/1000)+'s';
                    }
                }
                var dy=to[1]-from[1];
                var dx=to[0]-from[0];
                var deg=Math.atan(Math.abs(dy)/Math.abs(dx))/Math.PI*180;
                if(dx>=0){
                    if(dy<=0){
                        deg+=90;
                    }
                    else{
                        deg=90-deg;
                    }
                }
                else{
                    if(dy<=0){
                        deg=270-deg;
                    }
                    else{
                        deg+=270;
                    }
                }
                if(drag){
                    node.style.transform='rotate('+(-deg)+'deg)';
                    node.style.height=get.xyDistance(from,to)+'px';
            
                    longtou.style.transform='rotate('+(-deg)+'deg)';
                    longtou.style.opacity=0.7;
                }
                else{
                    node.style.transform='rotate('+(-deg)+'deg) scaleY(0)';
                    node.style.height=get.xyDistance(from,to)+'px';
            
                    longtou.style.transform='rotate('+(-deg)+'deg) translate(0,0)';
                    if(game.chess){
                        ui.chess.appendChild(node);
                        ui.chess.appendChild(longtou);
                    }
                    else{
                        ui.arena.appendChild(node);
                        ui.arena.appendChild(longtou);
                    }
                    ui.refresh(node);
                    node.show();
                    node.style.transform='rotate('+(-deg)+'deg) scaleY(1)';
                    ui.refresh(longtou);
                    longtou.show();
                    longtou.style.transform='rotate('+(-deg)+'deg) translate(0,'+get.xyDistance(from,to)+'px)';
                    longtou.style.opacity=0.7;
                    node.listenTransition(function(){
                        setTimeout(function(){
                            if(node.classList.contains('removing')) return;
                            node.delete();
                        },total/3);
                    });
                    longtou.listenTransition(function(){
                        //setTimeout(function(){
                            if(longtou.classList.contains('removing')) return;
                            longtou.delete();
                        //},total/3);
                    });
                }
                return node;
            };
            //借鉴了极光的扩展OL，以及玄武江湖。
            //先攻指示线
            game.zsXiangongLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('jianqilinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('jianqilinexy',ui.arena,false,[from,to]);
                };
            };
            
            //竹杖指示线
            game.zsZhuzhangLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('zhuzhanglinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('zhuzhanglinexy',ui.arena,false,[from,to]);
                };
            };
            
            //水墨指示线
            game.zsMohuaLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('mohualinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('mohualinexy',ui.arena,false,[from,to]);
                };
            };
            
            //神剑指示线
            game.zsShenjianLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('shenjianlinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('shenjianlinexy',ui.arena,false,[from,to]);
                };
            };
            
            //御剑指示线
            game.zsYujianLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('yujianlinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('yujianlinexy',ui.arena,false,[from,to]);
                };
            };
            
            //暗黑指示线
            game.zsAnheiLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('anheilinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('anheilinexy',ui.arena,false,[from,to]);
                };
            };
            
            //魔爪指示线
            game.zsMozhuaLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('mozhualinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('mozhualinexy',ui.arena,false,[from,to]);
                };
            };
            
            //剑锋指示线
            game.zsJianfengLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('jianfenglinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('jianfenglinexy',ui.arena,false,[from,to]);
                };
            };
            
            //金箭指示线
            game.zsJinjianLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('jinjianlinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('jinjianlinexy',ui.arena,false,[from,to]);
                };
            };
            
            //金龙指示线
            game.zsJinlongLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('jinlonglinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('jinlonglinexy',ui.arena,false,[from,to]);
                };
            };
            
            //落英指示线
            game.zsLuoyingLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('luoyinglinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('luoyinglinexy',ui.arena,false,[from,to]);
                };
            };
            
            //星蝶指示线
            game.zsXingdieLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('xingdielinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('xingdielinexy',ui.arena,false,[from,to]);
                };
            };
            
            //月仙指示线
            game.zsYuexianLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('yuexianlinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('yuexianlinexy',ui.arena,false,[from,to]);
                };
            };
            
            //蛇杖指示线
            game.zsShezhangLineXy=function(path){
                var from=[path[0],path[1]];
                var to=[path[2],path[3]];
                if(game.chess){
                    game.zsPlayLineAnimation('shezhanglinexy',ui.chess,false,[from,to]);
                }else{
                    game.zsPlayLineAnimation('shezhanglinexy',ui.arena,false,[from,to]);
                };
            };
            
            if(lib.config.zuanzhishixian && lib.config.zuanzhishixian !== 'moren'){
                game.saveConfig('extension_十周年UI_playerLineEffect', false);
                if (window.decadeUI) decadeUI.config.playerLineEffect = false;
                game.linexy = game['zs'+lib.config.zuanzhishixian+'LineXy'];
            }
        
          game.saveConfig('zuanzhishixian',lib.config['extension_祖安武将_zhishixian']);
                    game.saveConfig('extension_十周年UI_playerLineEffect', lib.config['extension_祖安武将_zhishixian']);
                    if (window.decadeUI) decadeUI.config.playerLineEffect = lib.config['extension_祖安武将_zhishixian'];
                    if(lib.config['extension_祖安武将_zhishixian'] == 'moren'){
                        game.linexy = game.zsOriginLineXy;
                    }else{
                        game.linexy = game['zs'+lib.config['extension_祖安武将_zhishixian']+'LineXy'];
                    }
    // ---------------------------------------指示线------------------------------------------//








    // ---------------------------------------标包增强------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_ssr'])!='0') {
    if(parseFloat(lib.config['extension_祖安武将_ssr'])=='2') {
        lib.config.ssr_change_strengthen=true;
    }else {
        lib.config.ssr_change_strengthen=false;
    }
    lib.skill._strengthenstandardskill={
    trigger:{
        player:["enterGame","showCharacterAfter"],
        global:["gameDrawBefore","gameDrawAfter"],
    },
    filter:function(event,player){
        //if(player==game.me) alert(event.name);
        var forbidlist=[7];
        var mode=parseFloat(lib.config['extension_祖安武将_mode']);
        if(forbidlist.contains(mode)) return false;
        if(player.group=='shen'||player.group=='jin') return false;
        if(event.name=='showCharacter'){
            return event.toShow.contains(player.name1)||event.toShow.contains(player.name2);
        }else {
            return player.name.indexOf('unknown')==-1||player.name==player.name1;
        }
    },
    priority:10000,
    silent:true,
    forced:true,
    content:function(){
        'step 0'
        lib.characterPackSsr={
            "mode_extension_祖安武将":lib.characterPack["mode_extension_祖安武将"]
        }
        if(player.name.indexOf('unknown')==-1||player.name==player.name1) {
            event.hisname="name";
        }else {
            event.hisname="name1";
        }
        if(trigger.name=='showCharacter') {
            event.showc=true;
            //trigger.num - 0是明置主将，1是副将，2是全部
            event.num=trigger.num;
        }else {
            event.showc=false;
            event.num=1;
        }
        'step 1'
        var mode=get.mode();
        event.changehp=false;
        event.namelist=['fazheng','xin_fazheng','yuanshu','re_yuanshu','yiji','xf_yiji','yuanshao','re_yuanshao','yuji','re_yuji','lusu','re_lusu','zhangliang','re_zhangliang','xuhuang','re_xuhuang','xiahouyuan','re_xiahouyuan','xushu','re_xushu'];
        //alert(player.name);
        event.myname1=player[event.hisname];
        if(player.name2) {
            event.myname2=player.name2;
        }else {
            event.myname2='none';
        }
        event.sklists=[];
        var oldlist=lib.character[event.myname1][3];
        if(event.myname2!='none') {
            oldlist=oldlist.concat(lib.character[event.myname2][3]);
        }
        var sklist=player.skills;
        for(i=0;i<sklist.length;i++) {
            if(!oldlist.contains(sklist[i])) {
                event.sklists.push(sklist[i]);
            }
        }
        event.changehpnum=0;
        var str=''+lib.character[event.myname1][2];
        var index=str.indexOf('/');
        var myhp = str.substr(index + 1,str.length);
        if(player.maxHp>myhp) {
            event.changehpnum=player.maxHp-myhp;
        }
        if((mode=='identity'||mode=='doudizhu')&&event.myname2!='none') {
            if(player.identity=='zhu') {
                event.changehpnum=1;
            }else {
                event.changehpnum=0;
            }
        }
        event.ctrlmaxhp=0;
        event.ctrlhp=0;
        event.ctrlhd=0;
        if(event.hisname=='name'&&event.myname2!='none') {
            var str=''+lib.character[event.myname1][2];
            var index=str.indexOf('/');
            var myhp1 = parseInt(str.substr(0,index));
            var mymaxhp1 = parseInt(str.substr(index+1,str.length));
            if(index==-1) myhp1=mymaxhp1;

            var str=''+lib.character[event.myname2][2];
            var index=str.indexOf('/');
            var myhp2 = parseInt(str.substr(0,index));
            var mymaxhp2 = parseInt(str.substr(index+1,str.length));
            if(index==-1) myhp2=mymaxhp2;
            //if(player==game.me) alert(myhp1+'|'+myhp2+'|'+mymaxhp1+'|'+mymaxhp2);
            //var num=lib.character[event.myname1][2]+lib.character[event.myname2][2];
            event.ctrlhp=Math.floor((myhp1+myhp2)*0.5);
            event.ctrlmaxhp=Math.floor((mymaxhp1+mymaxhp2)*0.5);
            event.ctrlhd=(myhp1+myhp2)%2;
            //if(player==game.me) alert(event.ctrlhp+'|'+event.ctrlmaxhp+'|'+event.ctrlhd);
        }
        'step 2'
        if(!lib.config.ssr_change_strengthen) {
            for(i=0;i*2<event.namelist.length;i++) {
                //alert(i+' | '+player[event.hisname]+'=='+namelist[i*2+1] +' | '+namelist[i*2]);
                if(event.myname1==event.namelist[i*2+1]) {
                    event.myname1=event.namelist[i*2];
                    break;
                }
            }
            if(event.myname2!='none') {
                for(i=0;i*2<event.namelist.length;i++) {
                    if(event.myname2==event.namelist[i*2+1]) {
                        event.myname2=event.namelist[i*2];
                        break;
                    }
                }
            }
        }else {
            if(event.myname1=='re_sunben') event.myname1='re_sunce';
            if(event.myname2=='re_sunben') event.myname2='re_sunce';
        }
        if((trigger.num%2==0||!event.showc)&&(event.myname1.indexOf('ssr_')!=-1)) {
            var inited=false;
            for(p=0;p*2<event.namelist.length;p++) {
                if(event.myname1=='ssr_'+event.namelist[p*2]) {
                    if(event.myname2!='none') {
                        player.init(event.namelist[p*2+1]);
                    }else {
                        player.init(event.namelist[p*2+1],event.myname2);
                    }
                    event.changehp=true;
                    inited=true;
                    break;
                }
            }
            if(!inited) {
                    if(event.myname2!='none') {
                        player.init(event.myname1.slice(4));
                    }else {
                        player.init(event.myname1.slice(4),event.myname2);
                    }
                //player.init(event.myname1.slice(4));
                event.changehp=true;
            }
            //if((mode=='identity'||mode=='doudizhu')&&player.identity=='zhu') {
            //    event.changehp=true;
            //}
        }
        if((trigger.num>=1||!event.showc)&&(event.myname2!='none'&&event.myname2.indexOf('ssr_')!=-1)) {
            var inited=false;
            for(p=0;p*2<event.namelist.length;p++) {
                if(event.myname2=='ssr_'+event.namelist[p]) {
                    player.init(player[event.hisname],event.namelist[p+1]);
                    event.changehp=true;
                    inited=true;
                    break;
                }
            }
            if(!inited) {
                player.init(player[event.hisname],player.name2.slice(4));
                event.changehp=true;
            }
            //if((mode=='identity'||mode=='doudizhu')&&player.identity=='zhu') {
            //    event.changehp=true;
            //}
        }
        'step 3'
        event.skill='none';
        if(event.changehp) {
            if(event.ctrlmaxhp>0) {
                player.maxHp=event.ctrlmaxhp;
            }
            if(event.ctrlhp>0) {
                player.hp=event.ctrlhp;
            }
            if(event.changehpnum>0) {
                player.maxHp+=event.changehpnum;
                player.hp+=event.changehpnum;
            }
            //if(event.ctrlhd>0) player.directgain(get.cards(1));
        }
            //alert(event.changehp);
            //if(player[event.hisname]=='re_sunben') event.myname1='re_sunce';
            //if(player.name2=='re_sunben') event.myname2='re_sunce';
            var name = event.myname1;
            var index= name.lastIndexOf('_');
            var rname1= name.substr(index + 1,name.length);
            var name = event.myname2;
            var index= name.lastIndexOf('_');
            var rname2= name.substr(index + 1,name.length);
        for(var a in lib.characterPackSsr){
          //  if(lib.filter.characterDisabled2(i)||lib.filter.characterDisabled(i)) continue;
            for(var b in lib.characterPackSsr[a]){
            var role=lib.characterPackSsr[a][b];
        if(lib.config.ssr_change_strengthen) {
            //if((trigger.num%2==0||!event.showc)&&event.myname1.indexOf(b.slice(4))!=-1&&(!(player[event.hisname].indexOf('yujin')!=-1&&b=='ssr_yuji'))&&(!(player[event.hisname].indexOf('zhangheng')!=-1&&b=='ssr_zhanghe'))) {
            if((trigger.num%2==0||!event.showc)&&rname1==b.slice(4)) {
                //player.clearSkills();
                //lib.character[game.me.name]
                var lists=lib.character[player[event.hisname]][3];
                for(i=0;i<lists.length;i++) {
                    if(player.hasSkill(lists[i])) {
                        player.removeSkill(lists[i]);
                    }
                }
                player.addSkill(role[3].slice(0));
            }
            //if((trigger.num>=1||!event.showc)&&event.myname2.indexOf(b.slice(4))!=-1&&(!(player.name2.indexOf('yujin')!=-1&&b=='ssr_yuji'))&&(!(player.name2.indexOf('zhangheng')!=-1&&b=='ssr_zhanghe'))) {
            if((trigger.num>=1||!event.showc)&&rname2==b.slice(4)) {
                var lists=lib.character[player.name2][3];
                for(i=0;i<lists.length;i++) {
                    if(player.hasSkill(lists[i])) {
                        player.removeSkill(lists[i]);
                    }
                }
                player.addSkill(role[3].slice(0));
            }
            player.update();
        }else {
            if((trigger.num%2==0||!event.showc)&&b=='ssr_'+event.myname1) {
                //player.clearSkills();
                var lists=lib.character[player[event.hisname]][3];
                for(i=0;i<lists.length;i++) {
                    if(player.hasSkill(lists[i])) {
                        player.removeSkill(lists[i]);
                    }
                }
                player.addSkill(role[3].slice(0));
                }
            }
            if((trigger.num>=1||!event.showc)&&b=='ssr_'+event.myname2) {
                var lists=lib.character[player.name2][3];
                for(i=0;i<lists.length;i++) {
                    if(player.hasSkill(lists[i])) {
                        player.removeSkill(lists[i]);
                    }
                }
                player.addSkill(role[3].slice(0));
            }
                player.update();
        }
        }
        'step 4'
            for(i=0;i<event.sklists.length;i++) {
                player.addSkill(event.sklists[i]);
            }
        },
    }
    lib.skill._ssrnohuahensskill={
        trigger:{
            player:['huashen2Before'],
        },
        filter:function(event,player){
            return (player.group!='shen'&&player.group!='jin');
        },
        priority:100,
        silent:true,
        forced:true,
        content:function(){
            trigger.cancel();
        },
    }
    lib.skill._ssrchangehpskill={
    trigger:{
        player:["enterGame"],
        global:["gameDrawAfter"],
    },
    priority:9000,
    silent:true,
    forced:true,
    content:function(){
                var lose=0;
                var hcard=player.countCards('h');
                if(player.name.indexOf('unknown')==-1||player.name==player.name1) {
                    event.hisname="name";
                }else {
                    event.hisname="name1";
                }
                if(lib.config.ssr_change_strengthen) {
                if(player[event.hisname].indexOf('huaxiong')!=-1) {
                    lose+=2;
                }
                if(player[event.hisname].indexOf('lvmeng')!=-1) {
                    lose+=1;
                }
                if(player[event.hisname].indexOf('zhurong')!=-1) {
                    lose+=1;
                }
                if(player[event.hisname].indexOf('zhangliang')!=-1) {
                    lose+=1;
                }
                if(player.name2) {
                if(player.name2.indexOf('huaxiong')!=-1) {
                    lose+=2;
                }
                if(player.name2.indexOf('lvmeng')!=-1) {
                    lose+=1;
                }
                if(player.name2.indexOf('zhurong')!=-1) {
                    lose+=1;
                }
                if(player.name2.indexOf('zhangliang')!=-1) {
                    lose+=1;
                }
                }
                //体力补偿
                if(player[event.hisname]=='sp_dongzhuo') {
                    lose-=3;
                }
                if(player.name2=='sp_dongzhuo') {
                    lose-=3;
                }
                if(player[event.hisname]=='jsp_zhaoyun') {
                    lose-=1;
                }
                if(player.name2=='jsp_zhaoyun') {
                    lose-=1;
                }
                if(player[event.hisname]=='sp_zhaoyun') {
                    lose-=1;
                }
                if(player.name2=='sp_zhaoyun') {
                    lose-=1;
                }
                if(player[event.hisname]=='sp_lvmeng') {
                    lose-=1;
                }
                if(player.name2=='sp_lvmeng') {
                    lose-=1;
                }
                if(player[event.hisname]=='gz_sp_dongzhuo') {
                    lose-=4;
                }
                if(player.name2=='gz_sp_dongzhuo') {
                    lose-=4;
                }
                if(player[event.hisname]=='re_lvbu') {
                    lose+=1;
                }
                if(player.name2=='re_lvbu') {
                    lose+=1;
                }
                        }else {
                if(player[event.hisname]=='huaxiong') {
                    lose+=2;
                }
                if(player[event.hisname]=='lvmeng') {
                    lose+=1;
                }
                if(player[event.hisname]=='zhurong') {
                    lose+=1;
                }
                if(player[event.hisname]=='re_zhangliang') {
                    lose+=1;
                }
                if(player.name2) {
                if(player.name2=='huaxiong') {
                    lose+=2;
                }
                if(player.name2=='lvmeng') {
                    lose+=1;
                }
                if(player.name2=='re_zhangliang') {
                    lose+=1;
                }
                }
                            }
                //if(player==game.me) alert(lose);
                if(lose>0) {
                if(player.name2) {
                if(lose%2>0) {
                    /*player.discard(player.getCards('h'));
                    player.draw(5);
                    var hs=player.getCards('h');
                    game.addVideo('lose',player,[get.cardsInfo(hs),[],[],[]]);
                    for(i=0;i<hs.length;i++){
                        hs[i].discard(false);
                    }
                    player.directgain(get.cards(5));*/
                    player.directgain(get.cards(1));
                }
                dis=Math.ceil(lose/2);
                }else {
                dis=lose;
                }
                if(dis>0) {
                    player.maxHp-=dis;
                    player.hp-=dis;
                }
                }else if(lose<0) {
                lose=0-lose;
                if(player.name2) {
                if(lose%2>0&&false) {
                    /*player.discard(player.getCards('h'));
                    player.draw(5);
                    var hs=player.getCards('h');
                    game.addVideo('lose',player,[get.cardsInfo(hs),[],[],[]]);
                    for(i=0;i<hs.length;i++){
                        hs[i].discard(false);
                    }
                    player.directgain(get.cards(5));*/
                    player.directgain(get.cards(1));
                }
                dis=Math.floor(lose/2);
                }else {
                dis=lose;
                }
                if(dis>0) {
                    player.maxHp+=dis;
                    player.hp+=dis;
                }
                }
                player.update();
        },
        }

    }







    // ---------------------------------------自定义工具------------------------------------------//
     if(lib.config['extension_祖安武将_text']) {
    lib.skill._diycharacterskill={
                //priority:1000,
                priority:Infinity,
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawEnd",
                },
                //enable:'phaseUse',
                silent:true,
                direct:true,
                forced:true,
                filter:function(event,player){
                return (player==game.me);
                    },
                content:function(){
        'step 0'
        event.item='[自定义全场角色]<li>此功能支持所有武将的更换<li>此功能支持武将包分类选择<li>此功能包含测试专用的工具<li>供拓展制作和AI测试勿作弊';
        event.tool='[自定义全场角色]<li>此工具支持观看武将的身份<li>此工具支持武将的位置更换<li>此工具支持更换武将的手牌<li>目前可能存在漏洞慎重操作';
        event.back=false;
        player.chooseControl('选择角色','工具','结束',function(){
            return '结束';
        }).set('prompt',event.item+'<br><br>◈是否选择角色以更换？');
        /*if(1==0) {
            lib.characterPack={
                "mode_extension_权御天下":lib.characterPack["mode_extension_权御天下"];
            }
        }*/
        'step 1'
        event.back=false;
        if(result.control=='结束') {
            event.finish();
        }else {
            if(result.control=='选择角色') {
                player.chooseTarget(1,'◈请选择更换武将牌的角色',function(card,player,target){
                    return true;
                }).set('prompt2',event.item);
                event.goto(2);
            }else {
                player.chooseControl('显示身份','交换位置','更换手牌','返回',function(){
                    return '返回';
                }).set('prompt',event.tool+'<br><br>◈请选择工具功能');
                event.goto(5);
            }
        }
        'step 2'
        //选择角色
        if(result.bool) {
            if(!event.back) event.targets=result.targets[0];
            event.back=false;
            var list=[];
            var ranlist=[];
            for(var a in lib.characterPack){
                list.push([lib.translate[a+'_character_config'],'',lib.translate[a+'_character_config']]);
                ranlist.push(a);
                var finish=0;
                var shift=[];
                for(var c in lib.characterPack[a]){
                    shift.push(c);
                }
                var b=shift.randomGet();
                if(a=='mode_extension_boss') {
                    lib.card[lib.translate[a+'_character_config']]={
                        enable:true,
                        type:a,
                        image:'mode/boss/character/'+b,
                        color:'white',
                        opacity:1,
                        textShadow:'black 0 0 2px',
                        chongzhu:true,
                    };
                }else if(a=='mode_extension_jiange') {
                    lib.card[lib.translate[a+'_character_config']]={
                        enable:true,
                        type:a,
                        image:'mode/versus/character/'+b,
                        color:'white',
                        opacity:1,
                        textShadow:'black 0 0 2px',
                        chongzhu:true,
                    };
                }else if(a.indexOf('mode_')!=-1) {
                    lib.card[lib.translate[a+'_character_config']]={
                        enable:true,
                        type:a,
                        image:'ext:'+lib.translate[a+'_character_config']+'/'+b+'.jpg',
                        color:'white',
                        opacity:1,
                        textShadow:'black 0 0 2px',
                        chongzhu:true,
                    };
                }else {
                    lib.card[lib.translate[a+'_character_config']]={
                        enable:true,
                        type:a,
                        image:'character/'+b,
                        color:'white',
                        opacity:1,
                        textShadow:'black 0 0 2px',
                        chongzhu:true,
                    };
                }
            }
            //div style="border:1px solid #CCCCCC; width:200px; height:200px; background:#66FFFF; margin-bottom:10px;" class="websjy1">32423</div>
            if(list.length){
                player.chooseButton(['◈请选择来源武将包<br>[已指定：'+get.translation(event.targets)+']',[list,'vcard']]).set('ai',function(button){
                    return -1;
                });
                event.goto(3);
            }else {
                event.goto(0);
            }
        }else {
            event.goto(0);
        }
        'step 3'
        //选择了来源武将包
        if(result.bool) {
            var a=get.type(result.links[0][2]);
            event.pack=lib.characterPack[a];
            packname=lib.translate[a+'_character_config'];
            var list=[];
            var ranlist=[];
            //var group=['shen','wei','shu','wu','qun','jin'];
            var group=lib.group;
            for(i=0;i<group.length;i++){
                for(var b in event.pack){
                    var role=event.pack[b];
                    if(role[1]==group[i]) {
                        lib.character[b]=role;
                        var describe=get.translation(role[1])+role[2];
                        //var describe='武将';
                        list.push(['◈'+describe,'',b]);
                        ranlist.push(b);
                        if(a=='mode_extension_boss') {
                            lib.card[b]={
                                enable:true,
                                type:'character',
                                image:'mode/boss/character/'+b,
                                color:'white',
                                opacity:1,
                                //borderRadius: '20px',
                                textShadow:'black 0 0 2px',
                                chongzhu:true,
                            };
                        }else if(a=='mode_extension_jiange') {
                            lib.card[b]={
                                enable:true,
                                type:'character',
                                image:'mode/versus/character/'+b,
                                color:'white',
                                opacity:1,
                                //borderRadius: '20px',
                                textShadow:'black 0 0 2px',
                                chongzhu:true,
                            };
                        }else if(a.indexOf('mode_')!=-1) {
                            lib.card[b]={
                                enable:true,
                                type:'character',
                                image:'ext:'+lib.translate[a+'_character_config']+'/'+b+'.jpg',
                                color:'white',
                                opacity:1,
                                //borderRadius: '20px',
                                textShadow:'black 0 0 2px',
                                chongzhu:true,
                            };
                        }else {
                            lib.card[b]={
                                enable:true,
                                type:'character',
                                image:'character/'+b,
                                color:'white',
                                opacity:1,
                                //borderRadius: '20px',
                                textShadow:'black 0 0 2px',
                                chongzhu:true,
                            };
                        }
                        //lib.card[b].addRule('.websjy2', '5px', true);
                    }
                }
            }
            var choose=ranlist.randomGet();
            player.chooseButton(['◈请选择更换的武将<br>[已选择：'+lib.translate[a+'_character_config']+']',[list,'vcard']]).ai=function(button){
                var name=button.link[2];
                return name==choose;
            }
            event.goto(4);
        }else {
            //event.back=true;
            //result.bool=true;
            event.goto(0);
        }
            /*
            if(role[1]=='shen') {
                var describe='<span class=\"shentext\" style=\"color:#ffe14c\">神话</span>';
            }else if(role[1]=='wei') {
                var describe='<span class=\"weitext\" style=\"color:#b0d0e2\">曹魏</span>';
            }else if(role[1]=='shu') {
                var describe='<span class=\"shutext\" style=\"color:#ffddb9\">蜀汉</span>';
            }else if(role[1]=='wu') {
                var describe='<span class=\"wutext\" style=\"color:#b2d9a9\">东吴</span>';
            }else if(role[1]=='qun') {
                var describe='<span class=\"quntext\" style=\"color:#f6f6f6\">群雄</span>';
            }else if(role[1]=='jin') {
                var describe='<span class=\"jintext\" style=\"color:#ffe14c\">晋朝</span>';
            }else var describe='武将';
            */
            /*
            if(role[1]=='shen') {
                var describe='神话';
            }else if(role[1]=='wei') {
                var describe='曹魏';
            }else if(role[1]=='shu') {
                var describe='蜀汉';
            }else if(role[1]=='wu') {
                var describe='东吴';
            }else if(role[1]=='qun') {
                var describe='群雄';
            }else if(role[1]=='jin') {
                var describe='晋朝';
            }else {
                var describe=get.translation(role[1])+'将';
            }
            */
        'step 4'
        //选择了更换的武将
        if(result.bool&&result.links) {
            event.back=false;
            if(event.targets.name2) {
                event.changejiang=result.links[0][2];
                player.chooseControl('更换主将','更换副将',function(){
                    return '更换主将';
                }).set('prompt','◈请选择更换主将或副将');
                event.goto(9);
            }else {
                event.targets.init(result.links[0][2]);
                if(event.targets.identity=='zhu') {
                    event.targets.maxHp++;
                    event.targets.hp++;
                    event.targets.update();
                }
                game.delay(0.5);
                event.goto(0);
            }
        }else {
            event.back=true;
            result.bool=true;
            event.goto(2);
        }
        'step 5'
        //工具
        if(result.control=='显示身份') {
            for(i=0;i<game.players.length;i++){
                game.players[i].setIdentity(get.translation(game.players[i].identity));
                game.players[i].say(get.translation(game.players[i].identity));
                //game.players[i].say(get.translation(game.players[i].identity));
            }
            result.control='工具';
            event.back=true;
            event.goto(1);
        }else if(result.control=='交换位置') {
            player.chooseTarget('◈请选择交换位置的两名角色',2,function(card,player,target){
                return true;
            }).set('prompt2',event.item);
            event.goto(6);
        }else if(result.control=='更换手牌') {
            player.chooseTarget('◈请选择更换手牌的角色',1,function(card,player,target){
                return true;
            }).set('prompt2',event.item);
            event.goto(7);
        }else event.goto(0);
        'step 6'
        //交换位置
        if(result.bool) {
            event.targets=result.targets;
            game.swapSeat(event.targets[0],event.targets[1],false);
            result.control='工具';
            event.back=true;
            event.goto(1);
        }else {
            result.control='工具';
            event.back=true;
            event.goto(1);
        }
        'step 7'
        //更换手牌
        if(result.bool) {
            if(!event.back) event.target=result.targets[0];
            event.back=false;
            var content=[get.translation(event.target)+'的手牌<br>◈是否更换其手牌？',event.target.getCards('h')];
            player.chooseControl('替换','随机','取消',function(){
                return '取消';
            }).set('dialog',content);
            event.goto(8);
        }else {
            result.control='工具';
            event.back=true;
            event.goto(1);
        }
        'step 8'
        //选择了更换
        if(result.control=='替换') {
            event.back=false;
            event.goto(10);
        }else if(result.control=='随机') {
            var hs=event.target.getCards('h');
			game.addVideo('lose',event.target,[get.cardsInfo(hs),[],[],[]]);
				for(i=0;i<hs.length;i++){
					hs[i].discard(false);
				}
			event.target.directgain(get.cards(hs.length));
            /*}else {
        var num=event.target.countCards('h');
        event.target.discard(event.target.getCards('h'));
        event.target.update();
        event.target.draw(num);
                }*/
            event.back=true;
            result.bool=true;
            event.goto(7);
        }else {
            //if(event.dialog) event.dialog.close();
            result.control='工具';
            event.back=true;
            event.goto(1);
        }
        'step 9'
        //主将副将
            var hp=event.targets.hp;
            var maxhp=event.targets.maxHp;
            if(result.control=='更换主将') {
                event.targets.init(event.changejiang,event.targets.name2);
            }else {
                if(event.targets.name.indexOf('unknown')==-1) {
                    var name="name";
                }else {
                    var name="name1"
                }
                event.targets.init(event.targets.name,event.changejiang);
            }
            event.targets.update();
            event.targets.maxHp=Math.ceil((event.targets.maxHp+maxhp)/2);
            event.targets.hp=Math.ceil((event.targets.hp+hp)/2);
            if(event.targets.identity=='zhu') {
                event.targets.maxHp++;
                event.targets.hp++;
            }
            event.targets.update();
            game.delay(0.5);
            event.back=true;
            event.goto(0);
        'step 10'
        //替换手牌
            result.bool=false;
            event.videoId=lib.status.videoId++;
            var cards=event.target.getCards('h');
            event.dialogs=ui.create.dialog(get.translation(event.target)+'的手牌<br>◈请选择要替换的牌',cards);
            event.dialogs.videoId=event.videoId;
            if(!event.isMine()){
                event.dialogs.style.display='none';
            }
            player.chooseButton(1,function(card,player){
                return false;
            }).set('dialog',event.videoId);
        'step 11'
        //展开替换列表
            event.dialogs.close();
            if(result.bool) {
                result.bool=false;
                event.changecard=result.links[0];
                event.cardlist=[];
                for(var i=0;i<lib.inpile.length;i++){
                    var name=lib.inpile[i];
                    var info=lib.card[name];
                    if(!event.cardlist[info.type]){
                        event.cardlist[info.type]=[];
                    }
                    if(name=='sha'){
                    event.cardlist.push([get.translation(lib.card[name].type),'','sha','']);
                    event.cardlist.push([get.translation(lib.card[name].type),'','sha','fire']);
                    event.cardlist.push([get.translation(lib.card[name].type),'','sha','thunder']);
                    event.cardlist.push([get.translation(lib.card[name].type),'','sha','ice']);
                    event.cardlist.push([get.translation(lib.card[name].type),'','sha','stab']);
                    }else event.cardlist.push([get.translation(lib.card[name].type),'',name,'']);
                }
                event.dialog=ui.create.dialog('◈请选择要替换成的牌',[event.cardlist,'vcard']);
                player.chooseButton(event.dialog).ai=function(button){
                    return false;
                };
                event.goto(12);
            }else {
                event.back=true;
                result.bool=true;
                event.goto(7);
            }
        'step 12'
        //替换完成
        if(result.bool){
            //game.addVideo('lose',event.target,[get.cardsInfo(hs),[],[],[]]);
            event.changecard.discard(false);
            //var card=game.createCard(get.inpile(result.links[0][2]).randomGet());
            event.target.gain(game.createCard({name:result.links[0][2],nature:result.links[0][3]}));
            //player.chooseUseTarget(result.links[0][2],true,false);
        }
        event.back=true;
        result.bool=true;
        if(event.dialog) event.dialog.close();
        event.goto(10);
        'step 13'
        event.goto(0);
    },
            }
            }   
    
    
    
    // ---------------------------------------砸花送蛋------------------------------------------//
    lib.skill._zuan_damageSendEgg = {
        forced:true,
        popup:false,
        priority:-98,
        trigger:{
            global:'damageEnd',
        },
        filter:function(event,player){
            var evt = event.getParent();
            return lib.config['extension_祖安武将_zuanemotion'] && !player.isUnderControl(true) && player.throwEmotion && get.attitude(player,event.player) > 0 && game.xwGetPhasePlayer() == event.player;
        },
        content:function(){
            'step 0'
            if(Math.random() >= 0.8){
                player.throwEmotion(trigger.player,['egg','shoe'].randomGet());
            }
        }
    };
    lib.element.player.zuanLikeMe = function(tar,rate){
        if(!rate){
            rate = 1;
        }
        if(!lib.config['extension_祖安武将_zuanemotion']){
            return;
        }
        if(!this.throwEmotion){
            return;
        }
        if(tar === 'friend'){
            tar = game.filterPlayer(function(current){
                return current != this && get.attitude(current,this) > 0 && get.attitude(this,current) > 0;
            });
        }else if(tar === 'enemy'){
            tar = game.filterPlayer(function(current){
                return current != this && get.attitude(current,this) < 0 && get.attitude(this,current) < 0;
            });
        }else if(!Array.isArray(tar)){
            tar = [tar];
        }
        tar.randomSort();
        for(var p of tar){
            if(Math.random() <= rate){
                p.throwEmotion(this,'flower');
            }
        }
    };

    lib.element.player.zuanHateMe = function(tar,rate){
        if(!rate){
            rate = 1;
        }
        if(!lib.config['extension_祖安武将_zuanemotion']){
            return;
        }
        if(!this.throwEmotion){
            return;
        }
        if(tar === 'friend'){
            tar = game.filterPlayer(function(current){
                return current != this && get.attitude(current,this) > 0 && get.attitude(this,current) > 0;
            });
        }else if(tar === 'enemy'){
            tar = game.filterPlayer(function(current){
                return current != this && get.attitude(current,this) < 0 && get.attitude(this,current) < 0;
            });
        }else if(!Array.isArray(tar)){
            tar = [tar];
        }
        tar.randomSort();
        for(var p of tar){
            if(Math.random() <= rate){
                p.throwEmotion(this,['egg','shoe'].randomGet());
            }
        }
    };
    lib.skill._zuan_sendWine = {
        forced:true,
        popup:false,
        priority:-45,
        trigger:{
            global:['phaseUseBegin','useCard'],
        },
        filter:function(event,player){
            if(event.name == 'useCard'){
                if(event.card.name != 'jiu')return false;
                if(event.player.hp == 1)return false;
                if(event.player == player)return false;
                if(player.isUnderControl(true))return false;
                if(event.player.hp <= 0)return false;
                return lib.config['extension_祖安武将_zuanemotion'] && get.attitude(player,event.player) > 0 && get.attitude(event.player,player) > 0;
            }
            return get.attitude(player,event.player) > 0 && get.attitude(event.player,player) > 0 && event.player.countCards('h') > 5 && lib.config['extension_祖安武将_zuanemotion'] && !player.isUnderControl(true) && player.throwEmotion;
        },
        content:function(){
            if(trigger.name == 'useCard'){
                if(Math.random() > 0.3){
                    player.throwEmotion(trigger.player,'wine');
                }
                return;
            }
            if(Math.random() < trigger.player.countCards('h') / 15 && trigger.player != player){
                player.throwEmotion(trigger.player,'wine');
            }
        }
    };
    lib.skill._zuan_damageSendEgg = {
        forced:true,
        popup:false,
        priority:-998,
        trigger:{
            player:'damageSource',
        },
        filter:function(event,player){
            return !player.hasSkillTag('maixie') && !player.hasSkillTag('maixie_hp') && event.source && get.attitude(player,event.source) > 0 && lib.config['extension_祖安武将_zuanemotion'] && !player.isUnderControl(true) && player.throwEmotion;
        },
        content:function(){
            'step 0'
            if(Math.random() > 0.5){
                player.throwEmotion(trigger.source,['shoe','egg'].randomGet());
            }
        }
    };
    lib.skill._zuan_damageSendFlower = {
        forced:true,
        popup:false,
        priority:-3,
        trigger:{
            global:'damageSource',
        },
        filter:function(event,player){
            return event.source && event.num > 1 && get.attitude(player,event.player) < 0&& get.attitude(player,event.source) >0 && lib.config['extension_祖安武将_zuanemotion'] && !player.isUnderControl(true) && player.throwEmotion;
        },
        content:function(){
            'step 0'
            if(Math.random() > 1/trigger.num && trigger.source != player){
                player.throwEmotion(trigger.source,'flower');
            }
        }
    };
    lib.skill._zuan_killSendFlower = {
        forced:true,
        popup:false,
        priority:-23,
        trigger:{
            global:'dieBegin',
        },
        filter:function(event,player){
            return get.attitude(player,event.player) < 0 && lib.config['extension_祖安武将_zuanemotion'] && !player.isUnderControl(true) && player.throwEmotion;
        },
        content:function(){
            'step 0'
            event.killer = event.source;
            if(!event.killer || get.attitude(player,event.killer) <= 0){
                var evt = trigger.getParent(3);
                event.killer = evt.player;
            }
            if(event.killer&& event.killer != player && get.attitude(player,event.killer) > 0){
                if(Math.random() > 0.2){
                    player.throwEmotion(event.killer,'flower');
                }
            }
        }
    };
    
    
    
    
    // ---------------------------------------游戏音效------------------------------------------//
    //if(false) {
    lib.skill._extraphaseskill={//回合开始音效//
                trigger:{
                    player:["phaseBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'phase.mp3');
                },
        }
    lib.skill._extradieskill={//死亡音效//
                trigger:{
                    player:["die"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'die.mp3');
                },
        }
    lib.skill._extraturnoverskill={//翻面音效//
                trigger:{
                    player:["trunOverBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'turnover.mp3');
                },
        }
    lib.skill._extradamageskill={//伤害音效//
                trigger:{
                    player:["damageBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                    if(!trigger.nature) {
                        var nature='_basic';
                    }else {
                        var nature='_'+trigger.nature;
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'damage'+nature+'.mp3');
                },
        }
    lib.skill._extradlosehpskill={//流失音效//
                trigger:{
                    player:["loseHpBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'damage_water.mp3');
                },
        }
    lib.skill._extraloseskill={//移出游戏音效//
            trigger:{
                global:["loseAfter","addCardToStorage","loseAsyncAfter"],
            },
            filter:function(event,player,name){
                if(name!='addCardToStorage') return event.toStorage==true;
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                forced:true,
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'common.mp3');
                },
        }
    lib.skill._extragainskill={//获得牌音效//
                trigger:{
                    player:["gainBefore","loseBefore"],
                },
                forced:true,
                filter:function(event){
                    if(name=='addCardToStorage'||event.toStorage==true) return false;
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'draw.mp3');
                },
        }
    lib.skill._extracompareskill={//拼点音效//
                trigger:{
                    player:["chooseToCompareBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
        var verson='_ten';            var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') game.playAudio('..','extension','祖安武将','audio','shousha','compare.mp3');
                    if(cho=='5') game.playAudio('..','extension','祖安武将','audio','ten','compare.mp3');
                },
        }
    lib.skill._extrauseskill={//用牌音效//
                trigger:{
                    player:["useCardBefore","respondBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'use.mp3');
                },
        }
    lib.skill._extrajudgeskill={//判定音效//
                trigger:{
                    player:["judgeBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'judge.mp3');
                },
        }
    lib.skill._extralinkskill={//横置音效//
                trigger:{
                    player:["linkBefore"],
                },
                forced:true,
                filter:function(event){
                    return (parseFloat(lib.config['extension_祖安武将_audio'])>='4'); 
                },
                content:function(){
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                    if(player.isLinked) {
                        var during='_false';
                    }else {
                        var during='_true';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'link'+during+'.mp3');
                },
        }
    //}
    // ---------------------------------------游戏音效------------------------------------------//
    if (parseFloat(lib.config['extension_祖安武将_audio'])<='3') {
	lib.skill._comparesayskill={
                trigger:{
                    player:["chooseToCompareBefore"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='2'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','compare.ogg');
    },
        }
	lib.skill._equipuseskill={
                trigger:{
                    player:["useCard"],
                },
                forced:true,
                filter:function(event){
        return (get.type(event.card)=='equip'&&parseFloat(lib.config['extension_祖安武将_audio'])>='3'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','pdd_equip.mp3');
    },
        }
	lib.skill._damsayskill={
                trigger:{
                    player:["damageBegin"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='3'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','lbw_damage.mp3');
    },
        }
	lib.skill._saveskill={
                trigger:{
                    player:["dying"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='3'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','pdd_save.mp3');
    },
        }
        lib.skill._dieskill={
                trigger:{
                    player:["die"],
                },
                forced:true,
                filter:function(event){
        return (get.type(event.card)=='equip'&&parseFloat(lib.config['extension_祖安武将_audio'])>='3'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','lyl_die.mp3');
    },
        }
        lib.skill._shanskill={
                trigger:{
                    player:["respond"],
                },
                forced:true,
                filter:function(event){
        return (event.card.name=='equip'&&parseFloat(lib.config['extension_祖安武将_audio'])>='3'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','pdd_shan.mp3');
    },
        }
        lib.skill._useCardsayskill={
                trigger:{
                    player:["useCard"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='2'); 
    },
                content:function(){
        if (parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','use.mp3');
        if (parseFloat(lib.config['extension_祖安武将_audio'])>='3') {
        if(get.name(trigger.card)=='sha') {
 game.playAudio('..','extension','祖安武将','audio','lyl_sha.mp3');
            }
        if(get.name(trigger.card)=='juedou') {
 game.playAudio('..','extension','祖安武将','audio','pdd_sha.mp3');
            }
        if(get.name(trigger.card)=='guohe') {
 game.playAudio('..','extension','祖安武将','audio','pdd_guohe.mp3');
            }
        if(get.name(trigger.card)=='wuxie') {
 game.playAudio('..','extension','祖安武将','audio','lyl_wuxie.mp3');
            }
        if(get.name(trigger.card)=='nanman') {
 game.playAudio('..','extension','祖安武将','audio','pdd_wanjian.mp3');
            }
        if(get.name(trigger.card)=='wanjian') {
 game.playAudio('..','extension','祖安武将','audio','lbw_wanjian.mp3');
            }
        if(get.name(trigger.card)=='tao') {
 game.playAudio('..','extension','祖安武将','audio','pdd_tao.mp3');
            }
        if(get.name(trigger.card)=='jiedao') {
 game.playAudio('..','extension','祖安武将','audio','lbw_jiedao.mp3');
            }
        if(get.name(trigger.card)=='shunshou') {
 game.playAudio('..','extension','祖安武将','audio','pdd_shunshou.mp3');
            }
        if(get.name(trigger.card)=='taoyuan') {
 game.playAudio('..','extension','祖安武将','audio','lbw_wugu.mp3');
            }
        if(get.name(trigger.card)=='wugu') {
 game.playAudio('..','extension','祖安武将','audio','lyl_wugu.mp3');
            }
        if(get.name(trigger.card)=='wuzhong') {
 game.playAudio('..','extension','祖安武将','audio','lbw_draw.mp3');
            }
        if(get.name(trigger.card)=='jiu') {
 game.playAudio('..','extension','祖安武将','audio','lyl_jiu.mp3');
            }
        if(get.name(trigger.card)=='huogong') {
 game.playAudio('..','extension','祖安武将','audio','lbw_jiu.mp3');
            }
        if(get.name(trigger.card)=='tiesuo') {
 game.playAudio('..','extension','祖安武将','audio','lbw_jiu.mp3');
            }
            }
    },
        }
	lib.skill._phasebeginskill={
                trigger:{
                    player:["phaseBegin"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='2'); 
    },
                content:function(){
                	if(parseFloat(lib.config['extension_祖安武将_audio'])>='3') {
 game.playAudio('..','extension','祖安武将','audio','lbw_phase.mp3');
                	}else {
 game.playAudio('..','extension','祖安武将','audio','phase.mp3');
                	}
    },
        }
	lib.skill._phaseendskill={
                trigger:{
                    player:["phaseEnd"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='2'); 
    },
                content:function(){
                	if(parseFloat(lib.config['extension_祖安武将_audio'])>='3') {
 game.playAudio('..','extension','祖安武将','audio','lbw_end.mp3');
                	}else {
 game.playAudio('..','extension','祖安武将','audio','end.ogg');
                	}
    },
        }
        lib.skill._judgeskill={
                trigger:{
                    player:["judgeBegin"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='2'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','judge.ogg');
    },
        }
	lib.skill._linkskill={
                trigger:{
                    player:["linkAfter"],
                },
                forced:true,
                filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_audio'])>='2'); 
    },
                content:function(){
 game.playAudio('..','extension','祖安武将','audio','link.ogg');
    },
        }
}
    // ---------------------------------------指示线确认------------------------------------------//
            lib.skill._zuanattacklinecheck={
                            trigger:{
                                global:['gameDrawBefore'],
                                player:"enterGame",
                            },
                            direct:true,
                            priority:105,
                            filter:function(event,player){
                                 return player==game.me;
                            },
                            content:function(){
game.saveConfig('zuanzhishixian',lib.config['extension_祖安武将_zhishixian']);
                    game.saveConfig('extension_十周年UI_playerLineEffect', lib.config['extension_祖安武将_zhishixian']);
                    if (window.decadeUI) decadeUI.config.playerLineEffect = lib.config['extension_祖安武将_zhishixian'];
                    if(lib.config['extension_祖安武将_zhishixian'] == 'moren'){
                        game.linexy = game.zsOriginLineXy;
                    }else{
                        game.linexy = game['zs'+lib.config['extension_祖安武将_zhishixian']+'LineXy'];
                    }
                            },
            }




    // ---------------------------------------整理手牌------------------------------------------//
            if (lib.config.extension_祖安武将_washhandcard) {
                var choice= lib.config.extension_祖安武将_washhandcard;
                if (choice!= "close") {
                    var con = function() {
                        "step 0"
                        /*var cards = player.getCards("h");
                        game.addVideo('lose', player, [get.cardsInfo(cards), [],
                            []
                        ]);
                        for (var i = 0; i < cards.length; i++) {
                            cards[i].goto(ui.special);
                        }
                        cards.sort(function(a, b) {
                            return -lib.sort[player.useCard2 ? "rd_duel" : "card2"](a, b);
                        });
                        player.directgain(cards, false);*/
var cards = game.me.getCards("hs");
var sort2 = function(b, a) {
    if (a.name != b.name) return lib.sort.card(a.name, b.name);
    else if (a.suit != b.suit) return lib.suit.indexOf(a) - lib.suit.indexOf(b);
    else return a.number - b.number;
};
if (cards.length > 1) {
    cards.sort(sort2);
    cards.forEach(function(i, j) {
        game.me.node.handcards1.insertBefore(cards[j], game.me.node.handcards1.firstChild);
    });
    if(typeof(dui)!='undefined') {
        dui.queueNextFrameTick(dui.layoutHand, dui);
    }else {
        var hs=game.me.getCards('h');
        game.addVideo('lose',event.target,[get.cardsInfo(hs),[],[],[]]);
        for(i=0;i<hs.length;i++){
            hs[i].discard(false);
        }
        game.me.directgain(cards);
    }
}
                    };
                    var fil = function(event, player) {
                        if (player == game.me && player.countCards("hs")) {
                            /*
                            var j = function(a, b) {
                                var n1 = a.length;
                                var n2 = b.length;
                                if (n1 != n2) return 0;
                                for (var i = 0; i < n1; i++) {
                                    if (a[i] != b[i]) return 0;
                                }
                                return 1;
                            };
                            var cards = player.getCards("h");
                            var ca = cards.slice(0);
                            ca.sort(function(a, b) {
                                return lib.sort[player.useCard2 ? "rd_duel" : "card2"](a, b);
                            });
                            return j(ca, cards) != 1;
                            */

var cards = game.me.getCards("hs");
var sort2 = function(b, a) {
    if (a.name != b.name) return lib.sort.card(a.name, b.name);
    else if (a.suit != b.suit) return lib.suit.indexOf(a) - lib.suit.indexOf(b);
    else return a.number - b.number;
};
if (cards.length > 1) {
    if(cards==sort2) return false;
    return true;
}
return false;
                        }
                    };
                    lib.sort.card2 = function(a, b) {
                        if (a.name != b.name) return lib.sort.card(a.name, b.name);
                        else if (a.suit != b.suit) return lib.suit.indexOf(a.suit) - lib.suit.indexOf(b.suit);
                        else if (a.number != b.number) return a.number - b.number;
                        else if (a.nature != b.nature) return a.nature - b.nature;
                        else return parseInt(a.cardid) - parseInt(b.cardid);
                    };
                    lib.skill._zuanwashhandcard = {
                        direct: true,
                        charlotte: true,
                        firstDo: true,
                        priority: Infinity,
                        content: con,
                        filter: fil,
                    };
                    if (choice== "auto") lib.skill._zuanwashhandcard.trigger = { player: ["gainAfter", "loseAfter"] };
                    else if (choice== "user") lib.skill._zuanwashhandcard.enable = "phaseUse";
                    lib.translate._zuanwashhandcard = "整理";
                };
            }



    // ---------------------------------------边框美化------------------------------------------//
        if (parseFloat(lib.config['extension_祖安武将_biankuang'])!='0'||parseFloat(lib.config['extension_祖安武将_qiankuang'])!='0') {
lib.skill._newbiankuang={
                            trigger:{
                                global:['gameDrawBefore'],
                                player:"enterGame",
                            },
                            direct:true,
                            priority:15,
                            filter:function(event,player){
                                 return player==game.me;
                            },
                            content:function(){
                                'step 0'
    // ---------------------------------------背景------------------------------------------//
                                event.count=0;
                                event.background='none';
                                if(parseFloat(lib.config['extension_祖安武将_biankuang'])=='1') {
                                    event.back='guozhan';
                                    if(player.group=='wei'||player.group=='jin') event.back='xuanwu';
                                    if(player.group=='shu') event.back='zhuque';
                                    if(player.group=='wu') event.back='qinglong';
                                    if(player.group=='qun'||player.group=='xi') event.back='baihu';
                                } 
                                if(parseFloat(lib.config['extension_祖安武将_biankuang'])=='2') event.back=['qinglong','baihu','zhuque','xuanwu'].randomGet();
                                if(parseFloat(lib.config['extension_祖安武将_biankuang'])=='3') event.back='zhulu';
                                if(parseFloat(lib.config['extension_祖安武将_biankuang'])=='4') event.back='guozhan';
                                event.biankuang="extension/祖安武将/handcard/Handcard_background_"+event.back+'.png';
                                //event.biankuang='extension/祖安武将/handcard/Handcard_background.png';

    // ---------------------------------------前景------------------------------------------//
                                event.cover='none';
                                if(parseFloat(lib.config['extension_祖安武将_qiankuang'])=='1') event.cover=['donghai','beimo','tianshan'].randomGet();
                                if(parseFloat(lib.config['extension_祖安武将_qiankuang'])=='2') event.cover='donghai';
                                if(parseFloat(lib.config['extension_祖安武将_qiankuang'])=='3') event.cover='beimo';
                                if(parseFloat(lib.config['extension_祖安武将_qiankuang'])=='4') event.cover='tianshan';
                                event.qiankuang="extension/祖安武将/handcard/Handcard_cover_"+event.cover+'.png';
        
        if (parseFloat(lib.config['extension_祖安武将_isPC'])=='1') {
            event.width=617;
            event.height=128;
            event.top=380;
            event.left=165;
            event.lefts=event.width*0.5+40;
            event.bottom=6;
        }
        if (parseFloat(lib.config['extension_祖安武将_isPC'])=='2') {
            event.width=582;
            event.height=120;
            event.top=490;
            event.left=160;
            event.lefts=event.width*0.5+20;
            event.bottom=8;
        }
        if (parseFloat(lib.config['extension_祖安武将_isPC'])=='3') {
            event.width=882;
            event.height=128;
            event.top=500;
            event.left=160;
            event.lefts=event.width*0.5+30;
            event.bottom=8;
        }

            'step 1'
            event.count++;
            var windows=localStorage.getItem("zuanwindow");
            if (parseFloat(lib.config['extension_祖安武将_isPC'])=='1') {
            //手机 95%
            //卡牌背景
            if (parseFloat(lib.config['extension_祖安武将_biankuang'])!='0') {
            if(event.biankuangs) event.biankuangs.remove();
            event.biankuangs = ui.create.node('img');
            event.biankuangs.src= lib.assetURL + event.biankuang;
            event.biankuangs.style.cssText='pointer-events: none;opacity: '+0.08*event.count+';display: block;width: 75.5%;height: 29%;position: absolute;bottom: 0.5%;left: 8.3%;background:none;z-index:-1;margin: 0 0 0 0';
            document.body.appendChild(event.biankuangs);
        }
            //卡牌层景
            if (parseFloat(lib.config['extension_祖安武将_qiankuang'])!='0') {
            if(event.qiankuangs) event.qiankuangs.remove();
            event.qiankuangs = ui.create.node('img');
            event.qiankuangs.src= lib.assetURL + event.qiankuang;
            event.qiankuangs.style.cssText='pointer-events: none;opacity: '+0.08*event.count+';display: block;width: 75.5%;height: 29%;position: absolute;bottom: 0.5%;left: 8.3%;background:none;z-index:4;margin: 0 0 0 0';
            document.body.appendChild(event.qiankuangs);
        }
    }else if (parseFloat(lib.config['extension_祖安武将_isPC'])=='2') {
            //手机 模拟 80%
            //卡牌背景
            if (parseFloat(lib.config['extension_祖安武将_biankuang'])!='0') {
            if(event.biankuangs) event.biankuangs.remove();
            event.biankuangs = ui.create.node('img');
            event.biankuangs.src= lib.assetURL + event.biankuang;
            event.biankuangs.style.cssText='pointer-events: none;opacity: '+0.08*event.count+';display: block;width: 73.5%;height: 24%;position: absolute;bottom: 0.5%;left: 6%;background:none;z-index:-1;margin: 0 0 0 0';
            document.body.appendChild(event.biankuangs);
        }
            //卡牌层景
            if (parseFloat(lib.config['extension_祖安武将_qiankuang'])!='0') {
            if(event.qiankuangs) event.qiankuangs.remove();
            event.qiankuangs = ui.create.node('img');
            event.qiankuangs.src= lib.assetURL + event.qiankuang;
            event.qiankuangs.style.cssText='pointer-events: none;opacity: '+0.08*event.count+';display: block;width: 73.5%;height: 24%;position: absolute;bottom: 0.5%;left: 6%;background:none;z-index:4;margin: 0 0 0 0';
            document.body.appendChild(event.qiankuangs);
        }
    }else {
            //电脑 大 120%
            //卡牌背景
            if (parseFloat(lib.config['extension_祖安武将_biankuang'])!='0') {
            if(event.biankuangs) event.biankuangs.remove();
            event.biankuangs = ui.create.node('img');
            event.biankuangs.src= lib.assetURL + event.biankuang;
            event.biankuangs.style.cssText='pointer-events: none;opacity: '+0.08*event.count+';display: block;width: 73.5%;height: 24%;position: absolute;bottom: 0.5%;left: 7%;background:none;z-index:-1;margin: 0 0 0 0';
            document.body.appendChild(event.biankuangs);
        }
            //卡牌层景
            if (parseFloat(lib.config['extension_祖安武将_qiankuang'])!='0') {
            if(event.qiankuangs) event.qiankuangs.remove();
            event.qiankuangs = ui.create.node('img');
            event.qiankuangs.src= lib.assetURL + event.qiankuang;
            event.qiankuangs.style.cssText='pointer-events: none;opacity: '+0.08*event.count+';display: block;width: 73.5%;height: 24%;position: absolute;bottom: 0.5%;left: 7%;background:none;z-index:4;margin: 0 0 0 0';
            document.body.appendChild(event.qiankuangs);
        }
    }
                                'step 2'
                                if(event.count<10) {
                                    game.delay(0.07);
                                    event.goto(1);
                                }
                                },
                            }
                        }
    // ---------------------------------------清空背景------------------------------------------//
    /*已经不需要
    if(parseFloat(lib.config['extension_祖安武将_bizhi'])!='1'&&parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'&&!lib.config['extension_祖安武将_exwallpaper']) {
    lib.skill._clearBackground={
							trigger:{
                                global:['gameDrawAfter'],
                                player:"enterGame",
                            },
							direct:true,
							priority:25,
                filter:function(event,player){
                var off=lib.config['extension_祖安武将_helasisy'];
                    if(off&&lib.config.coin&&lib.config.coin>=20) {
                return parseFloat(lib.config['extension_祖安武将_bizhi'])!='1';
                        }
                },
							content:function(){
    ui.background.style.backgroundImage=lib.config.standardbackground;
                                },
						}
                    }
    */
    // ---------------------------------------动态背景------------------------------------------//  
    if(parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||lib.config['extension_祖安武将_exwallpaper']) {
lib.skill._newBackground={
							trigger:{
                                player:['phaseBefore','judgeAfter','dieAfter'],
                            },
							direct:true,
							priority:20,
                            filter:function(event,player){
                                if(lib.config.zuanchoose=='none') return false;
                                if(lib.config['extension_祖安武将_texiao']) {
                                 if(parseFloat(lib.config['extension_祖安武将_wallpaper'])=='1'&&!lib.config['extension_祖安武将_exwallpaper']) return false;
                                 return (player==game.me&&event.card&&event.card.name);
                             }
                            },
							content:function(){
                                'step 0'
                            //ui.background.style.backgroundImage=lib.config.standardbackground;
        if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            if(trigger.card.name=='shandian') game.delay(1);
            if(trigger.card.name=='huoshan') game.delay(2.5);
            if(trigger.card.name=='hongshui') game.delay(2.5);
            if(trigger.card.name=='fulei') game.delay(1);
            }
    // ---------------------------------------动态壁纸刷新
                                'step 1'
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
   				},
						}
                        /*已经不需要
lib.skill._newBackgroundUse={
							trigger:{
                                player:['useCardToAfter'],
                            },
							direct:true,
							priority:-50,
                            filter:function(event,player){
                                return false;
                                if(lib.config.zuanchoose=='none') return false;
                var tex=lib.config['extension_祖安武将_texiao']; 
                if(tex) {
                                 if(parseFloat(lib.config['extension_祖安武将_isPC'])>='2') return false;
                                 if(parseFloat(lib.config['extension_祖安武将_wallpaper'])=='1'&&!lib.config['extension_祖安武将_exwallpaper']) return false;
                                 return event.card&&(event.card.name=='shandian'||event.card.name=='huoshan'||event.card.name=='hongshui'||event.card.name=='fulei');
                    }
                            },
							content:function(){
                                'step 0'
                            ui.background.style.backgroundImage=lib.config.standardbackground;
    // ---------------------------------------动态壁纸刷新
                                'step 1'
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
   				},
						}
                        */
lib.skill._newBackgroundAtart={
							trigger:{
                                global:['gameDrawAfter'],
                                player:"enterGame",
                            },
							direct:true,
							priority:120,
                            filter:function(event,player){
                                 if(parseFloat(lib.config['extension_祖安武将_wallpaper'])=='1'&&!lib.config['extension_祖安武将_exwallpaper']) return false;
                                 return player==game.me;
                            },
							content:function(){
                                'step 0'
            var off=lib.config['extension_祖安武将_helasisy']; 
                if(!off) {
                    game.delay(2.5);
                }
    // ---------------------------------------壁纸栏------------------------------------------//
                                'step 1'
                            //ui.background.style.backgroundImage=lib.config.standardbackground;
    // ---------------------------------------动态壁纸刷新
                                'step 2'
    // ---------------------------------------动态背景·选定------------------------------------------//
                            var backnum=parseFloat(lib.config['extension_祖安武将_wallpaper']);
                            lib.config.zuanchoose='none';
                            if(backnum=='3') {
    // ---------------------------------------势力风貌·动态
                                event.pack='gif_shili';
                                event.groups=['wei','shu','wu','qun'];
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='1') {
                                for(i=0;i<game.players.length;i++) {
                                if(game.players[i].identity=='zhu') {
                                    var group=game.players[i].group;
                                    if(event.groups.includes(group)) lib.config.zuanchoose=group;
                                        }
                                    }
                                }
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='2') {
                                    var group=player.group;
                                    if(event.groups.includes(group)) lib.config.zuanchoose=group;
                                }
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='3') {
                                    lib.config.zuanchoose=event.groups.randomGet();
                                }
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='4') {
    // ---------------------------------------霓裳羽衣
                                event.pack='gif_nichang';
                                event.list=[];
                                for(var i=1;i<18;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='5') {
    // ---------------------------------------海棠依旧
                                event.pack='gif_haitang';
                                event.list=[];
                                for(var i=1;i<10;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='7') {
    // ---------------------------------------世海壁纸
                                event.pack='shihai';
                                event.list=['bailu','chushu','dahan','dashu','guyu','hanlu','jingzhe','lichun','lidong','liqiu','lixia','mangzhong','qiufen','shuangjiang','xiaohan','xiaoman','xiaoshu','xiaoxue','xiazhi','yushui'];
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='8') {
    // ---------------------------------------梦幻壁纸
                                event.pack='menghuan';
                                event.list=[];
                                for(var i=1;i<98;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='9') {
    // ---------------------------------------势力风貌
                                event.pack='shili';
                                event.groups=['wei','shu','wu','qun','shen'];
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='1') {
                                for(i=0;i<game.players.length;i++) {
                                if(game.players[i].identity=='zhu') {
                                    var group=game.players[i].group;
                                    if(event.groups.includes(group)) lib.config.zuanchoose=group;
                                        }
                                    }
                                }
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='2') {
                                    var group=player.group;
                                    if(event.groups.includes(group)) lib.config.zuanchoose=group;
                                }
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='3') {
                                    lib.config.zuanchoose=event.groups.randomGet();
                                }
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='10') {
    // ---------------------------------------三分天下
                                event.pack='sanfen';
                                event.groups=['wei','shu','wu','qun','jin','shen'];
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='1') {
                                for(i=0;i<game.players.length;i++) {
                                if(game.players[i].identity=='zhu') {
                                    var group=game.players[i].group;
                                    if(event.groups.includes(group)) lib.config.zuanchoose=group;
                                        }
                                    }
                                }
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='2') {
                                    var group=player.group;
                                    if(event.groups.includes(group)) lib.config.zuanchoose=group;
                                }
                                if(parseFloat(lib.config['extension_祖安武将_paperchoose'])=='3') {
                                    lib.config.zuanchoose=event.groups.randomGet();
                                }
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='11') {
    // ---------------------------------------锦绣山河
                                event.pack='jinxiu';
                                event.list=[];
                                for(var i=1;i<58;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='12') {
    // ---------------------------------------羊皮画卷
                                event.pack='yangpi';
                                event.list=[];
                                for(var i=1;i<16;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='13') {
    // ---------------------------------------OL背景
                                event.pack='ol';
                                event.list=[];
                                for(var i=1;i<26;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            if(backnum=='14') {
    // ---------------------------------------决战京城
                                event.pack='juezhan';
                                event.list=[];
                                for(var i=1;i<17;i++) {
                                     event.list.push(i);
                                }
                                    lib.config.zuanchoose=event.list.randomGet();
    // ---------------------------------------壁纸结束
                            }
                            lib.config.zuanbackground="extension/祖安武将/wallpaper/background/"+event.pack+"/"+lib.config.zuanchoose+".jpg";
                            if(lib.config['extension_祖安武将_exwallpaper']) {
                            if(lib.config.mode=='boss') {
                                var gui=['boss_hundun','boss_qiongqi','boss_taotie','boss_taowu','boss_xiangliu','boss_zhuyan','boss_bifang','boss_yingzhao','boss_nianshou'];
                                var god=['boss_lvbu1','boss_lvbu2','boss_lvbu3','boss_caocao','boss_guojia','boss_zhangchunhua','boss_zhenji','boss_liubei','boss_zhugeliang','boss_huangyueying','boss_pangtong','boss_zhouyu','boss_caiwenji','boss_zhangjiao','boss_zuoci','boss_diaochan','boss_huatuo','boss_dongzhuo','boss_sunce'];
                                for(i=0;i<game.players.length;i++) {
                                    game.log(game.players[i],game.players[i].identity);
                                    if(game.players[i].identity=='zhu') {
                                        if(gui.includes(game.players[i].name)) {
                                            lib.config.zuanboss="gui";
                                        }
                                        if(god.includes(game.players[i].name)) {
                                            lib.config.zuanboss="god";
                                        }
                                    }
                                }
                                lib.config.zuanchoose='boss'; 
                                lib.config.zuanbackground="extension/祖安武将/wallpaper/boss/"+lib.config.zuanboss+".jpg";
                            }
                            if(lib.config.mode=='chess'||lib.config.mode=='tafang'||lib.config.mode=='stone') {
                                lib.config.zuanchoose='chess'; 
                                lib.config.zuanbackground="extension/祖安武将/wallpaper/chess/chess.jpg";
                            }
                            if(lib.config.mode=='single') {
                                lib.config.zuanchoose='versus'; 
                                lib.config.zuanbackground="extension/祖安武将/wallpaper/versus/versus.jpg";
                            }
                            if(lib.config.mode=='versus') {
                                lib.config.zuanchoose='versus'; 
                                lib.config.zuanbackground="extension/祖安武将/wallpaper/versus/versus2.jpg";
                            }
                        }
                            if(lib.config.zuanchoose!='none') game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
   				},
						}
lib.skill._zuanboss={
                            trigger:{
                                player:['dieBegin'],
                            },
                            direct:true,
                            priority:15,
                            filter:function(event,player){
                                if(lib.config['extension_祖安武将_exwallpaper']) {
                                 return (lib.config.mode=='boss'&&player.identity=='zhu');
                             }
                            },
                            content:function(){
                                'step 0'
                            //ui.background.style.backgroundImage=lib.config.standardbackground;
                            if(lib.config.zuanboss!='god'&&lib.config.zuanboss!='gui'&&parseFloat(lib.config.zuanboss)<3) lib.config.zuanboss++;
                                'step 1'
                            lib.config.zuanbackground="extension/祖安武将/wallpaper/boss/"+lib.config.zuanboss+".jpg";
    // ---------------------------------------动态壁纸刷新
                                'step 2'
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
                },
                        }
                    }
    // ---------------------------------------回合特效------------------------------------------//  
    if(parseFloat(lib.config['extension_祖安武将_huihe'])!='0') {
    lib.skill._zuanphaseTX={
                            trigger:{
                                player:"phaseBegin",
                            },
                            direct:true,
                            priority:35,
                filter:function(event,player){
            return player.name.indexOf('unknown')==-1;
                },
                            content:function(){
            'step 0'
            if(lib.config.zuanusecardTX!='none') {
            lib.config.zuanusecardTX.remove();
            }
            if(parseFloat(lib.config['extension_祖安武将_isPC'])=='1') {
                var present=0.7;
            }else {
                var present=0.9;
            }
            event.num=0;
            event.add=1;
            var img='extension/祖安武将/character/'+player.name+'.jpg';
            event.width=270*present*(img.width*present/img.height*present);
            event.height=270*present;
            event.head = ui.create.node('img');
            event.head.src= lib.assetURL + 'extension/祖安武将/character/'+player.name+'.jpg';
            'step 1'
            if(event.head) event.head.remove();
            if(event.add==1) {
            event.num++;
            }else {
            event.num--;
            }
            var width=event.width*2;
            var height=event.height*2;
            var wwid=window.innerWidth;
            var whig=window.innerHeight;
            if(parseFloat(lib.config['extension_祖安武将_isPC'])=='1') {
                var sp=2;
            }else {
                var sp=1;
            }
            if(parseFloat(lib.config['extension_祖安武将_huiheopa'])=='NaN') {
                event.zuanspeed=1;
            }else {
                event.zuanspeed=parseFloat(lib.config['extension_祖安武将_huiheopa'])*0.1;
            }
            if(event.add==1) {
                var left=wwid*0.25*sp-(10*event.zuanspeed-event.num)*(10*event.zuanspeed-event.num)*wwid*0.0025*sp/event.zuanspeed;
            }else {
                var left=wwid*0.25*sp+(10*event.zuanspeed-event.num)*(10*event.zuanspeed-event.num)*wwid*0.0025*sp/event.zuanspeed;
            }
            /*
            if(parseFloat(lib.config['extension_祖安武将_isPC'])=='1') {
            if(event.add==1) {
                var left=320-(10-event.num)*(10-event.num)*3.2;
            }else {
                var left=320+(10-event.num)*(10-event.num)*3.2;
                }
            }
            if(parseFloat(lib.config['extension_祖安武将_isPC'])=='2') {
                if(event.add==1) {
                var left=270-(10-event.num)*(10-event.num)*2.7;
            }else {
                var left=270+(10-event.num)*(10-event.num)*2.7;
                }
            }
            if(parseFloat(lib.config['extension_祖安武将_isPC'])=='3') {
                if(event.add==1) {
                var left=390-(10-event.num)*(10-event.num)*3.9;
            }else {
                var left=390+(10-event.num)*(10-event.num)*3.9;
                }
            }*/
            event.head.style.cssText='text-align: center;margin: auto;pointer-events: none;opacity: '+event.num*0.01*parseFloat(lib.config['extension_祖安武将_huihe'])/event.zuanspeed+';display: block;width: '+width+'px;height: '+height+'px;position: absolute;top: 0;left: '+left+'px;bottom: 0;background:none;z-index:6';
            document.body.appendChild(event.head);
    // ---------------------------------------图片加载失败处理------------------------------------------//  
            document.addEventListener("error", function (event) {
           var asset=localStorage.getItem("zuanasset");
           var ev = event ? event : window.event;
           var elem = ev.target;
           if (elem.tagName.toLowerCase() == 'img') { 
             // 图片加载失败  --替换为默认 
             elem.src = asset + 'extension/祖安武将/effects/unknow.jpg';
           }
           }, true);
            'step 2'
            if(event.add==1) {
            if(event.num<10*event.zuanspeed) {
                game.delay(0.02);
                event.goto(1);
            }else {
                event.add=0;
                game.delay(1);
                event.goto(1);
            }
            }else {
            if(event.num>0) {
                game.delay(0.02);
                event.goto(1);
            }
            }
            //event.head.remove();
            'step 3'
            lib.config.zuanusecardTX=event.head;
            event.head.remove();
            'step 4'
            if(1==0) {
            setTimeout(function () {
            if(lib.config.zuanusecardTX!='none') {
            lib.config.zuanusecardTX.remove();
            }
            }, 1000);
            }
                                },
                        }
                    }
    // ---------------------------------------开局动画------------------------------------------//  
lib.skill._helasisyskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawBefore",
                },
                priority:-15,
                forced:true,
                filter:function(event,player){
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                    if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','gamestart.mp3');
                        var off=lib.config['extension_祖安武将_helasisy']; 
                        if(!off) {
                            game.newalive('extension/祖安武将/effects/Helasisy.gif',2,0.8);
                        }
                    },
                }
if(parseFloat(lib.config['extension_祖安武将_mode'])!='1') {
            lib.skill._keepideskill={
                trigger:{
                    player:["gainAfter","loseAfter","phaseBegin","phaseEnd"],
                },
                silent:true,
                forced:true,
                priority:-66,
                filter:function(event,player){
                    return typeof(player.storage.zuan_identity)!='undefined'&&player.storage.zuan_identity.length>0;
                },
                content:function(){
        //player.storage.zuan_identity=['主','zhu'];
        //if(player.storage.zuan_identity) {
            var idesum=player.storage.zuan_identity;
            player.setIdentity(idesum[0]);
            player.node.identity.dataset.color=idesum[1];
            player.identityShown=true;
        //}
    }
}
}
// ---------------------------------------元气系统------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_fun'])=='7') {
            lib.skill._yuanqiskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                forced:true,
                priority:2,
                content:function(){
        'step 0'
        player.addSkill('zuan_hudun');
        'step 1'
        if (player.maxHp!=Infinity) {
        var list=[];
        for (var i=1;i<=player.maxHp;i++) {
        if(i<=9) list.push(i*0.1);
        }
        var rana=list.randomGet();
        var ranb=1-rana;
        event.hujia=Math.ceil(player.maxHp*rana);
        event.maxhp=Math.max(1,player.maxHp-event.hujia);
        event.hp=Math.ceil(player.hp*ranb);
        }else {
        event.hujia=1;
        event.maxhp=player.maxHp;
        event.hp=player.hp;
        }
        player.storage.zuan_maxhujia=event.hujia;
        'step 2'
        var add=0;
        if(lib.config['extension_祖安武将_balance']) add++;
        player.hp=event.hp+add;
        player.maxHp=event.maxhp+add;
        player.addMark('zuan_hudun',event.hujia,false);
        game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
        player.update();
    },
            }
        }
// ---------------------------------------暗夜鬼城------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_fun'])=='6') {
            lib.skill._anyeskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                    player.addSkill('anyezhu');
                },
            }
        }
// ---------------------------------------同将之争------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_fun'])=='5') {
			lib.skill._taohuaskill={
                trigger:{
                    player:["enterGame"],
                    global:["gameDrawAfter"],
                },
                filter:function(event,player,game){
                    if(get.mode()!='identity') return false;
                    return player!=game.me;
                },
                silent:true,
                firstDo:true,
                priority:999,
                direct:true,
                forced:true,
                content:function(){
                    if(game.me.name2) {
                        player.init(game.me.name,game.me.name2);
                    }else {
                        player.init(game.me.name);
                    }
                    if(player.identity=='zhu') {
                        player.maxHp++;
                        player.hp++;
                        player.update();
                    }
                },
			}
			}
// ---------------------------------------桃花落尽------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_fun'])=='4') {
			lib.skill._taohuaskill={
                trigger:{
                    player:["enterGame",'phaseBegin'],
                    global:["gameDrawAfter"],
                },
                filter:function(event,player){
                    return !player.hasSkill('taozhu');
                },
                direct:true,
                forced:true,
                content:function(){
                    player.addSkill('taoluo');
                },
				mod:{
					cardSavable:function(card,player){
							if(card.name=='tao'&&!player.isDying()) return false;
					},
					cardEnabled:function(card,player){
							if(card.name=='tao'&&!player.isDying()) return false;
					},
				},
			}
			}
// ---------------------------------------群侠论武------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_fun'])=='3') {
    lib.skill._lunjianskill={
    trigger:{
        target:"shaBegin",
    },
    direct:true,
    logTarget:"target",
    content:function(){
        'step 0'
        player.addSkill('jiwuskill');
        'step 1'
                var triggers=_status.event.getTrigger();
        player.chooseToUse('是否使用一张【杀】？',{name:'sha'});
        'step 2'
        if(player.hasSkill('jiwuskill')){
            player.removeSkill('jiwuskill');
        }else {
            trigger.cancel();
        }
    },
						ai:{
							skillTagFilter:function(player){
								if(!player.countCards('h','sha')) return false;
							},
							effect:{
								target:function(card,player,target,current){
									if(get.tag(card,'respondShan')&&current<0) return 0.6
								}
							},
							order:4,
							useful:-1,
							value:-1
						},
            }
            }
// ---------------------------------------大将英魂------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_fun'])=='2') {
    lib.skill._jianghunskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                usable:1,
                direct:true,
                forced:true,
                filter:function(event,player,game){
                    if(player.name2) return false;
                    return true;
                },
                content:function(){
        'step 0'
        //jjhun
        if(!game.jianhunsklist) game.jianhunsklist=[];
        if(!game.jianoldsklist) game.jianoldsklist=[];
        if(!game.equipjh) game.equipjh={};
        if(!game.oldequipjh) game.oldequipjh={};
        if(!game.storage) game.storage={};
        if(!game.oldstorage) game.oldstorage={};
        //标包增强
        lib.characterPackHun={
            "standard":lib.characterPack["standard"]
        }
        var list=[];
        var ranlist=[];
        for(var a in lib.characterPackHun){
        for(var b in lib.characterPackHun[a]){
        var role=lib.characterPackHun[a][b];
        lib.character[b]=role;
        list.push(['将魂','',b]);
        ranlist.push(b);
        lib.card[b]={
                enable:true,
                type:'character',
                image:'character/'+b,
                color:'white',
                opacity:1,
                textShadow:'black 0 0 2px',
                chongzhu:true,
                }
            }
        }
        var choose=ranlist.randomGet();
        player.chooseButton(["请选择一张将魂",[list,'vcard']],true).ai=function(button){
        var name=button.link[2];
        return name==choose;
        }
        'step 1'
        if(result.bool&&result.links) {
            player.addSkill('jianghun');
            player.storage.hunskill=result.links[0][2];
            player.markSkill('hunskill');
            player.syncStorage('hunskill');   
        }
        player.storage.eq1=0;
        player.storage.eq2=0;
        player.storage.eq3=0;
        player.storage.eq4=0;
        player.storage.eq5=0;
    },
            }
            }
if(lib.config.mode!='guozhan') {
// ---------------------------------------暗杀行动------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_mode'])=='8') {
    lib.skill._dietime={
                //marktext:"夜",
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_anye.png>",
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                player.storage.zhudie=0;
                player.addMark('_dietime',2,false);
						for(i=0;i<game.players.length;i++){
                         if(game.players[i].identity=='nei') {
                         if (lib.config['extension_祖安武将_balance']) {
                         game.players[i].identity='zhong';
                         } else {
                         game.players[i].identity='nei';
                         }
                         	game.players[i].addSkill('ansha_nei');
                         }
                         if(!game.players[i].hasSkill('ansha_nei')&&game.players[i].identity!='zhu') {
                         if (lib.config['extension_祖安武将_balance']) {
                         game.players[i].identity='zhong';
                         } else {
                         game.players[i].identity='nei';
                         }
                         	game.players[i].addSkill('ansha_zhong');
                         }
                         }
        },
                intro:{
                    name:"夜幕倒计时",
                    content:function (storage,player,skill){
                        var str='<li>距离夜幕降临还剩 '+player.storage._dietime+' 回合';
                        return str;
                    }
                },
        }
    lib.skill._anshaskill={
                trigger:{
                    player:["phaseEnd"],
                },
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                if(player.countMark('_dietime')>1) {
                player.removeMark('_dietime');
                   } else {
        var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
            game.newalive('extension/祖安武将/mode/mode_yemu.gif',2,lib.config.zuancoveropacity);
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 2500);
        }*/
}
                   player.storage._dietime=0;
                   player.unmarkSkill('_dietime');
                var list=[];
                event.num=0;
						for(i=0;i<game.players.length;i++){
                         if(game.players[i].hasSkill('ansha_zhong')) {
                         list.push(game.players[i]);
                         event.num++;
                         }
                         }
                         if(event.num>=1) {
                         var zhong=list.randomGet();
                         if (lib.config['extension_祖安武将_balance']) {
                         for(i=0;i<game.players.length;i++){
                         if(game.players[i].hasSkill('ansha_zhong')&&game.players[i]!=player) game.players[i].identity='nei';
                         }
                         }
                         zhong.identity='zhong';
                         zhong.die();
                         }
                         if(event.num<=1) {
                         if(player.storage.zhudie==0) {
                         for(i=0;i<game.players.length;i++){
                         if(game.players[i].hasSkill('ansha_nei')) {
                         var fan=game.players[i];
        fan.identity='fan';
        fan.node.identity.dataset.color='nei';
        fan.setIdentity('刺');
        fan.identityShown=true;
        fan.storage.zuan_identity=['刺','nei'];
                         }
                         }
                         player.addMark('_dietime',3);
                         player.storage.zhudie=1;
                         } else {
        var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
            game.newalive('extension/祖安武将/mode/mode_yemu.gif',2,lib.config.zuancoveropacity);
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 2500);
        }*/
}
                         player.die();
                         }
                         }
                         }
                    },
}
}
// ---------------------------------------幻海之诗------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_mode'])=='7') {
    lib.skill._huanhaiskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                silent:true,
                forced:true,
                filter:function(event,player){
                    if(player.name2) return false;
                    if(get.mode()!='identity') return false;
                    return player.group!='western';
                },
                content:function(){
                'step 0'
                    player.showCharacter(2);
                    var skills=player.getSkills(true,false);
						for(i=0;i<skills.length;i++){
							var info=get.info(skills[i]);
							if(skills[i]!='zuan_hudun'&&skills[i]!='hpunshow'&&skills[i]!='hongshuiunshow'&&skills[i]!='huoshanunshow'&&skills[i]!='thunderunshow'&&skills[i]!='jingcheng'&&skills[i]!='bazhu'&&skills[i]!='guanfu'&&!info.charlotte){
						    player.removeSkill(skills[i]);
						}
					}
                    if(1==1) {
                        player.maxHp=4;
                        player.hp=4;
                        player.update();
                    }else {
					var hpnum=4;
					if(player.identity=='zhu'&&(get.mode()=='identity'||get.mode()=='doudizhu')) var hpnum=4;
                    if(player.maxHp<hpnum) player.gainMaxHp(hpnum-player.maxHp);
                    if(player.maxHp>hpnum) player.loseMaxHp(player.maxHp-hpnum);
                    player.recover(player.maxHp);
                    }
                    player.addSkill('huanhai');
                    'step 1'
        player.logSkill('huanhai');
        var list=[];
        var list2=[];
        var players=game.players.concat(game.dead);
        for(i=0;i<players.length;i++){
            list2.add(players[i].name);
            list2.add(players[i].name1);
            list2.add(players[i].name2);
        }
        for(var i in lib.character){
            if(lib.character[i][1]!=player.group) continue;
            if(lib.character[i][3].length<1) continue;
            if(lib.character[i][4].contains('forbidai')) continue;
            if(lib.character[i][4].contains('boss')) continue;
            if(lib.character[i][4].contains('minskin')) continue;
            if(player.storage.huanhai.contains(i)) continue;
            if(list2.contains(i)) continue;
            list.push(i);
        }
        var name=list.randomGet();
        player.storage.huanhai.push(name);
        player.markSkill('huanhai');
        var skills=lib.character[name][3];
        player.addSkill(skills.randomGet());
        event.dialog=ui.create.dialog('<div class="text center">'+get.translation(player.name)+'获得了技能',[[name],'character']);
        game.delay(2);
        'step 2'
        event.dialog.close();
        },
    }
    lib.skill._seadreammodeskill={
                trigger:{
                    player:["phaseBegin"],
                    //global:'roundStart',
                },
                priority:985,
                silent:true,
                forced:true,
                filter:function(event,player){
                    if(player.name2) return false;
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
               content:function(){
               	'step 0'
                   var tex=lib.config['extension_祖安武将_texiao']; 
                   if(tex) {
                       game.newalive('extension/祖安武将/mode/mode_canghai.gif',2,lib.config.zuancoveropacity);
                   /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
                       setTimeout(function () {
                       game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
                // ---------------------------------------动态壁纸刷新
                     }, 2300);
                }*///幻海之诗
                }
                    for(i=0;i<game.players.length;i++) {
                    var tar=game.players[i];
                    var swap=game.players.randomGet();
                    game.swapSeat(tar,swap,false);
                    }
                    'step 1'
                    if(lib.config['extension_祖安武将_balance']) {
                        player.draw();
                        player.throwDice();
                    }else {
                        player.judge();
                    }
                    'step 2'
                    if(lib.config['extension_祖安武将_balance']) {
                        if(event.num) {
                            for(i=0;i<game.players.length;i++) {
                                var him=game.players[i];
                                var cards=game.players[i].getCards('hej');
                                var dis=[];
                                for(j=0;j<cards.length;j++) {
                                    if(get.number(cards[j])==event.num) dis.push(cards[j]);
                                }
                                him.discard(dis);
                            }
                            if(event.num!=6) event.finish();
                        }
                    }else {
                        if(result.suit&&result.suit!='diamond') event.finish();
                    }
                    'step 3'
                    for(o=0;o<game.players.length;o++) {
                    	game.players[o].addSkill('huanhaicls');
                    }
                }, 
            }
        }
// ---------------------------------------雷鸣山谷------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_mode'])=='6') {
lib.skill._thunderjudgemodeskill={
                trigger:{
                    player:["phaseBefore"],
                },
                forced:true,
                filter:function(event,player){
                    //if(player.identity!='zhu') return false;
                    return player.canAddJudge('shandian');
                },
                content:function(){
                    event.card=game.createCard('shandian');
                    //player.gain(event.card,'draw');
                    player.line(player,'thunder');
                    player.addJudge(event.card);
                    },
                }
    lib.skill._thundermodeskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                priority:5,
                forced:true,
                filter:function(event,player){
                    return true;
                },
                content:function(){
                    player.maxHp+=player.maxHp;
                    player.hp+=player.hp;
                    player.update();
                    if (player.hasSkill('guidao')) {
                    player.removeSkill('guidao');
                    player.addSkill('tiandu');
                    }
                    if (player.hasSkill('xinguidao')) {
                    player.removeSkill('xinguidao');
                    player.addSkill('tiandu');
                    }
                    if (player.hasSkill('guicai')) {
                    player.removeSkill('guicai');
                    player.addSkill('tiandu');
                    }
                },
            }
        }
    // ---------------------------------------天下归心------------------------------------------//
if(parseFloat(lib.config['extension_祖安武将_mode'])=='5') {
    lib.skill._guixinmodeskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                    if (!lib.config['extension_祖安武将_balance']) {
                    player.addTempSkill('wushuang');
                    player.changeHujia(2);
                    }
                    player.maxHp++;
                    player.hp++;
                    player.update();
        player.identity='zhu';
        player.setIdentity('祖');
        player.node.identity.dataset.color='zhu';
        player.identityShown=true;
        player.storage.zuan_identity=['祖','zhu'];
        player.addSkill('renxin_dam');
                    for(i=0;i<game.players.length;i++) {
                    if(game.players[i]!=player) {
                            game.players[i].identity='fan';
                            game.players[i].setIdentity('楚');
        game.players[i].node.identity.dataset.color='nei';
        game.players[i].identityShown=true;
        player.storage.zuan_identity=['楚','nei'];
}
                    }
                    },
}
}
    // ---------------------------------------讨伐叛军------------------------------------------//  
            if(parseFloat(lib.config['extension_祖安武将_mode'])=='4') {
    lib.skill._guanmodeskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                    player.addSkill('guanfu');
                    player.storage.zhumaxhp=player.maxHp;
                    player.storage.tamaxhp=Infinity;
                    player.storage.tahp=0;
        player.identity='zhu';
        player.setIdentity('府');
        player.node.identity.dataset.color='nei';
        player.identityShown=true;
        player.storage.zuan_identity=['府','nei'];
                    for(i=0;i<game.players.length;i++) {
                        if(game.players[i].identity=='fan') {
                            game.players[i].setIdentity('叛');
        game.players[i].node.identity.dataset.color='fan';
        game.players[i].identityShown=true;
        game.players[i].storage.zuan_identity=['叛','fan'];
                        } else {
                        if(game.players[i].identity=='zhu') {
                            game.players[i].setIdentity('府');
        game.players[i].node.identity.dataset.color='nei';
        game.players[i].identityShown=true;
        game.players[i].storage.zuan_identity=['府','nei'];
                        } else {
                            if(game.players[i].identity=='nei') game.players[i].addSkill('guifu_nei');
if (game.players[i]!=player) {
        game.players[i].setIdentity('官');
        game.players[i].node.identity.dataset.color='zhong';
        game.players[i].identityShown=true;
        game.players[i].storage.zuan_identity=['官','zhong'];
}
}
}
                    }
                    player.storage.tahp=player.storage.tamaxhp;
                    },
                        }
    lib.skill._guandieskill={
                trigger:{
                    player:["dieBefore"],
                },
                priority:-99,
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.hasSkill('jingcheng')) return false;
                    if(player.identity!='zhu') return false;
                    return true; 
                },
                content:function(){
                    'step 0'
                    if(trigger.source) game.zuanExp(trigger.source,25);
						var skills=player.getSkills(true,false);
						for(i=0;i<skills.length;i++){
							var info=get.info(skills[i]);
							if(skills[i]=='thundershow'||skills[i]=='jingcheng'||skills[i]=='bazhu'||skills[i]=='guanfu'||info.charlotte){
								skills.splice(i--,1);
							}
					    }
						player.disableSkill('lockskill',skills);
                    'step 1'
                    player.addMark('zuan_panjun',2,false);
                    if(player.storage.zuan_guanbing>=10){
            for(i=0;i<game.players.length;i++){
            if(game.players[i].identity=='fan'||game.players[i].identity=='nei'){
                game.players[i].die();
            }
            }
        }
            if(player.storage.zuan_panjun>=10){
                player.die();
            }
                    trigger.cancel();
                    player.storage.zhumaxhp=player.maxHp;
                    player.maxHp=player.storage.tamaxhp;
                    player.hp=player.storage.tahp;
                    player.addSkill('jingcheng');
                    player.update();
                    'step 2'
                    player.link(false);
                    player.turnOver(false);
                    player.discard(player.getCards('hej'));
                    'step 3'
                if(parseFloat(lib.config['extension_祖安武将_newui'])!=0){
                    if(player.storage.dyingimgshow) {
                        player.storage.dyingimgshow=false;
                        game.broadcastAll(function(player){
                            player.storage.dying_img.style.transform='translateY(-200px)';
                            player.storage.dying_img.delete();
                        },player);
                    }
                    event.newui=parseFloat(lib.config['extension_祖安武将_newui']);
                    var translists=['none','tutou','shousha','zhounian'];
                    player.storage.jingchengimgshow=true;
                    game.broadcastAll(function(player){
                        player.storage.jingcheng_img = document.createElement('div');
                        if(event.newui!='0') {   
                            player.storage.jingcheng_img.setBackgroundImage('extension/祖安武将/cover/'+translists[event.newui]+'_guanfu.png');
                        }
                        //player.storage.jingcheng_img.style.opacity=lib.config.zuancoveropacity;
                        player.storage.jingcheng_img.style.opacity=lib.config.zuancoveropacity;
                        player.storage.jingcheng_img.style.backgroundSize='cover';
                        player.storage.jingcheng_img.style.width='100%';
                        player.storage.jingcheng_img.style.height='100%';
                        player.storage.jingcheng_img.style.transform='translateY(-200px)';
                        player.node.avatar.appendChild(player.storage.jingcheng_img);
                        ui.refresh(player.storage.jingcheng_img);
                        player.storage.jingcheng_img.style.transform='';
                    },player);
                }
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
            game.newalive('extension/祖安武将/mode/mode_guanfu.gif',3.5,lib.config.zuancoveropacity);
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 3500);
        }*/
}
                    player.addSkill('notarget');
                    player.identity='zhu';
        player.setIdentity('亡');
        player.node.identity.dataset.color='zhu';
        player.identityShown=true;
        player.storage.zuan_identity=['亡','zhu'];
                    },
        }
        }
    // ---------------------------------------群雄争霸------------------------------------------//  
            if(parseFloat(lib.config['extension_祖安武将_mode'])=='3') {
    lib.skill._qunxiongzhengbaskill={
    trigger:{
        player:["enterGame"],
        global:"gameDrawAfter",
    },
    forced:true,
    filter:function(event,player){
    if(get.mode()!='identity') return false;
    if(player.identity!='zhu') return false;
        return true;
    },
    priority:100,
    content:function () {
        "step 0"
        player.addSkill('qunxiongkill');
    },
}
}
    // ---------------------------------------攻守京城------------------------------------------//  
            if(parseFloat(lib.config['extension_祖安武将_mode'])=='2') {
            if(lib.config['extension_祖安武将_balance']) {
                lib.skill._zhongzhubuff={
                    mod:{
                        cardSavable:function(card,player){
                            if(get.mode()!='identity') return;
                            if(!_status.currentPhase) return;
                            if(_status.currentPhase.isAlive()&&(_status.currentPhase.identity=='zhu'||_status.currentPhase.identity=='zhong')&&_status.currentPhase!=player){
                                if(card.name=='tao'&&!player.isDying()&&(player.identity=='fan')) return false;
                            }
                        },
                        cardEnabled:function(card,player){
                            if(get.mode()!='identity') return;
                            if(!_status.currentPhase) return;
                            if(_status.currentPhase.isAlive()&&(_status.currentPhase.identity=='zhu'||_status.currentPhase.identity=='zhong')&&_status.currentPhase!=player){
                                if(card.name=='tao'&&!player.isDying()&&(player.identity=='fan')) return false;
                            }
                        },
                    },
                }
                lib.skill._jingchengadddie={
                    trigger:{
                        player:"die",
                    },
                    priority:99,
                    silent:true,
                    forceDie:true,
                    filter:function(event,player){
                        if(get.mode()!='identity') return false;
                        return player.storage.relife_plus<10;
                    },
                    content:function(){
                        'step 0'
                        player.storage.relife_plus++;
                        'step 1'
                        var num=player.storage.relife_plus;
                        if(num%2==0) game.log(player,'延长了<span class=\"zuantext\" style=\"color: #A9A9A9\">一回合的复活时间</span>');
                        player.storage.relife+=Math.floor(num/2);
                    },
                }
            }
            lib.skill._zhongfandieskill={
                trigger:{
                    player:"die",
                },
                priority:97,
                silent:true,
                forceDie:true,
                direct:true,
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity=='zhu') return false;
                    return lib.config['extension_祖安武将_balance'];
                },
                content:function(){
                    var ide=player.identity;
                    if(ide=='fan') {
                        if(game.dead.length>0) {
                            var fan=[];
                            for (var i=0;i<game.dead.length;i++){
                                var dd=game.dead[i];
                                if(dd.identity=='fan'&&dd!=player) {
                                    fan.push(dd);
                                }
                            }
                            if(fan.length>0) {
                                var lucky=fan.randomGet();
                                lucky.storage.relife++;
                                game.log(lucky,'延长了<span class=\"zuantext\" style=\"color: #A9A9A9\">一回合的复活时间</span>');
                            }
                        }
                    }else if(ide=='zhong') {
                        var zhu=game.filterPlayer(function(current){
                            return current.identity=='zhu';
                        })[0];
                        if(!zhu.hasSkill('jingcheng')) zhu.loseHp();
                    }
                },
            }
            lib.skill._tamodeskill={
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    return true;
                },
                content:function(){
                    player.storage.zhumaxhp=player.maxHp;
                    player.storage.tamaxhp=0;
                    player.storage.tahp=0;
                    player.storage.zhongnum=0;
                    var nei=0;
                    var balance=lib.config['extension_祖安武将_balance'];
                    if(game.players.length==8||game.players.length==6) var nei=1;
                            if(balance){
                                player.setIdentity('主');
                                player.node.identity.dataset.color='zhu';
                                player.identityShown=true;
                            }
                    for(i=0;i<game.players.length;i++) {
                        if(balance) game.players[i].storage.relife_plus=0;
                        if(game.players[i].identity=='zhong'&&balance) {
                            if(game.players[i]==game.me)  game.players[i].setIdentity('忠');
                            if(game.players[i]==game.me) game.players[i].node.identity.dataset.color='zhong';
                            player.storage.zhongnum++;
                        }
                        if(game.players[i].identity=='fan') {
                            if(game.players[i]==game.me&&balance)  game.players[i].setIdentity('反');
                            if(game.players[i]==game.me&&balance) game.players[i].node.identity.dataset.color='fan';
                            player.storage.tamaxhp+=8;
                        }
                        if(game.players[i].identity=='nei'&&balance) {
                        if(nei==0){
                            game.players[i].identity='fan';
                            if(game.players[i]==game.me)  game.players[i].setIdentity('反');
                            if(game.players[i]==game.me) game.players[i].node.identity.dataset.color='fan';
                            var nei=1;
                            player.storage.tamaxhp+=8;
                            } else {
                            game.players[i].identity='zhong';
                            if(game.players[i]==game.me) game.players[i].setIdentity('忠');
                            if(game.players[i]==game.me) game.players[i].node.identity.dataset.color='zhong';
                            var nei=0;
                            }
                        }
                    }
                    player.storage.tahp=player.storage.tamaxhp;
                    },
                        }
             lib.skill._zhudieskill={
                trigger:{
                    player:["dieBefore"],
                },
                priority:-99,
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.hasSkill('jingcheng')) return false;
                    if(player.identity!='zhu') return false;
                    return true; 
                },
                content:function(){
                    'step 0'
                        if(trigger.source&&trigger.source.isIn()&&trigger.source!=player) {
                            game.zuanExp(trigger.source,25);
                            if(trigger.source.identity=='fan') trigger.source.draw(3);
                        }
                        if(player.storage.relife_plus<10) player.storage.relife_plus++;
                        var num=player.storage.relife_plus;
                        if(num%2==0) game.log(player,'延长了<span class=\"zuantext\" style=\"color: #A9A9A9\">一回合的复活时间</span>');
                        player.storage.relife+=Math.floor(num/2);
						var skills=player.getSkills(true,false);
						for(i=0;i<skills.length;i++){
							var info=get.info(skills[i]);
                            if(skills[i].indexOf('yuanqi_')) continue;
							if(skills[i]=='thundershow'||skills[i]=='jingcheng'||skills[i]=='bazhu'||skills[i]=='guanfu'||info.charlotte){
								skills.splice(i--,1);
							}
					    }
						player.disableSkill('lockskill',skills);
                    'step 1'
                    trigger.cancel();
                    player.storage.zhumaxhp=player.maxHp;
                    player.maxHp=player.storage.tamaxhp;
                    player.hp=player.storage.tahp;
                    player.addSkill('jingcheng');
                    player.update();
                    'step 2'
                    player.link(false);
                    player.turnOver(false);
                    player.discard(player.getCards('hej'));
                    'step 3'
                if(parseFloat(lib.config['extension_祖安武将_newui'])!=0){
                    if(player.storage.dyingimgshow) {
                        player.storage.dyingimgshow=false;
                        game.broadcastAll(function(player){
                            player.storage.dying_img.style.transform='translateY(-200px)';
                            player.storage.dying_img.delete();
                        },player);
                    }
                    event.newui=parseFloat(lib.config['extension_祖安武将_newui']);
                    var translists=['none','tutou','shousha','zhounian'];
                    player.storage.jingchengimgshow=true;
                    game.broadcastAll(function(player){
                        player.storage.jingcheng_img = document.createElement('div');
                        if(event.newui!='0') {   
                            player.storage.jingcheng_img.setBackgroundImage('extension/祖安武将/cover/'+translists[event.newui]+'_jingcheng.png');
                        }
                        //player.storage.jingcheng_img.style.opacity=lib.config.zuancoveropacity;
                        player.storage.jingcheng_img.style.opacity=lib.config.zuancoveropacity;
                        player.storage.jingcheng_img.style.backgroundSize='cover';
                        player.storage.jingcheng_img.style.width='100%';
                        player.storage.jingcheng_img.style.height='100%';
                        player.storage.jingcheng_img.style.transform='translateY(-200px)';
                        player.node.avatar.appendChild(player.storage.jingcheng_img);
                        ui.refresh(player.storage.jingcheng_img);
                        player.storage.jingcheng_img.style.transform='';
                    },player);
                }
                var tex=lib.config['extension_祖安武将_texiao'];
        if(tex) {
        game.newalive('extension/祖安武将/mode/mode_jingcheng.gif',2,lib.config.zuancoveropacity);
        game.delay(2);
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 3500);
        }*/
        }
                    player.identity='zhu';
        player.setIdentity('京');
        player.node.identity.dataset.color='zhu';
        player.identityShown=true;
        player.storage.zuan_identity=['京','zhu'];
                    },
        }
        }
    // ---------------------------------------复活板块------------------------------------------//  
            if(parseFloat(lib.config['extension_祖安武将_mode'])=='2'||parseFloat(lib.config['extension_祖安武将_mode'])=='4') {
    lib.skill._relifeskill={
                trigger:{
                    //player:["phaseBegin",'turnOverAfter'],
                    global:'roundStart',
                },
                silent:true,
                forced:true,
                filter:function(event,player){
                    if(get.mode()!='identity') return false;
                    if(player.identity!='zhu') return false;
                    //if(player.isTurnedOver()) return false;
                    return true; 
                },
                content:function(){
                    if(game.dead.length) {
                    for (var i=0;i<game.dead.length;i++){
                        var dd=game.dead[i];
                        var dds=dd.storage.relife;
                            dd.storage.relife--;
                        if(dd.storage.relife<1) {
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','revive.ogg');
                            dd.revive(dd.maxHp);
                            game.addVideo('revive',dd);
                            event.dead=dd;
                            dd.draw(Math.ceil(dd.storage._levelskill*0.5));
                            dd.storage.relife=Math.ceil(dd.storage._levelskill*0.4+0.1);
                            dd.markSkill('_expskill');
                            dd.syncStorage('_expskill');   
                            dd.markSkill('_levelskill');
                            dd.syncStorage('_levelskill');   
                            if(dd.hasSkill('zuan_hudun')){
                            dd.storage.zuan_hudun=dd.storage.zuan_maxhujia;
                            dd.markSkill('zuan_hudun');
                            dd.syncStorage('zuan_hudun');   
                            }
                            dd.update();
                            dd.$damagepop('重生');
                            game.log(dd,'<span class=\"zuantext\" style=\"color: #7CFC00\">获得了重生</span>');
                        }else {
                            dd.$damagepop(get.cnNumber(dd.storage.relife)+'回合');
                            game.log(dd,'复活还剩<span class=\"zuantext\" style=\"color: #228B22\">',get.cnNumber(dd.storage.relife),'回合</span>');
                        }
                    }
                    }
                    },
        }
        }
        }
    // ---------------------------------------等级模式------------------------------------------//   
            if(parseFloat(lib.config['extension_祖安武将_upspeed'])!='0'||parseFloat(lib.config['extension_祖安武将_mode'])!='1'){
            lib.translate._levelskill_maxlevel = "号令";
            lib.skill._levelskill={
                group:['_levelskill_maxlevel','_levelskill_mode','_levelskill_draw'],
                subSkill:{
                    draw:{
                        trigger:{
                            player:"phaseDrawBegin2",
                        },
                        silent:true,
                        forced:true,
                        filter:function(event,player){
                            if(lib.config['extension_祖安武将_levelstrong']=='off') return false;
                            return !event.numFixed&&player.storage._levelskill>=9;
                        },
                        content:function(){
                            trigger.num++;
                        },
                        sub:true,
                    },
                    mode:{
                        mod:{
                            maxHandcard:function (player,num,storage){
                                if(lib.config['extension_祖安武将_levelstrong']=='off') return;
                                var plus=0;
                                if(player.storage._levelskill>=3) plus++;
                                if(player.storage._levelskill>=6&&lib.config['extension_祖安武将_levelstrong']=='old') plus++;
                                if(plus>0) return num+plus;
                            },
                            cardUsable:function (card,player,num,storage){
                                if(lib.config['extension_祖安武将_levelstrong']=='off') return;
                                if(player.storage._levelskill>=5&&card.name=='sha') return num+1;
                            },
                            attackFrom:function(from,to,distance){
                                if(lib.config['extension_祖安武将_levelstrong']=='new'&&from.storage._levelskill>=4) return distance-1;
                            },
                            globalFrom:function(from,to,distance){
                                if(lib.config['extension_祖安武将_levelstrong']=='off') return;
                                if(from.storage._levelskill>=7) return distance-1;
                            },
                            globalTo:function(from,to,distance){
                                if(lib.config['extension_祖安武将_levelstrong']!='new') return;
                                if(to.storage._levelskill>=6) return distance+1;
                            },
                        },
                        sub:true,
                    },
                    maxlevel:{
                        enable:"phaseUse",
                        usable:2,
                        filter:function (event,player){
                            if(lib.config['extension_祖安武将_levelstrong']=='off'||player.storage._levelskill<10) return false;
                            return player.countCards('hs')>=2;
                        },
                        position:"hs",
                        chooseButton:{
                            dialog:function (player){
                                var list=[];
                                for(i=0;i<lib.inpile.length;i++){
                                    if(get.type(lib.inpile[i])=='basic') list.push(['基本','',lib.inpile[i]]);
                                }
                                return ui.create.dialog('号令群雄',[list,'vcard']);
                            },
                            filter:function (button,player){
                                return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
                            },
                            check:function (button){
                                var player=_status.event.player;
                                var recover=0,lose=1,players=game.filterPlayer();
                                for(i=0;i<players.length;i++){
                                    if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
                                        return (button.link[2]=='sha')?2:-1;
                                    }
                                    if(!players[i].isOut()){
                                        if(players[i].hp<players[i].maxHp){
                                            if(get.attitude(player,players[i])>0){
                                                if(players[i].hp<2){
                                                    lose--;
                                                    recover+=0.5;
                                                }
                                                lose--;
                                                recover++;
                                            }else if(get.attitude(player,players[i])<0){
                                                if(players[i].hp<2){
                                                    lose++;
                                                    recover-=0.5;
                                                }
                                                lose++;
                                                recover--;
                                            }
                                        }else {
                                            if(get.attitude(player,players[i])>0){
                                                lose--;
                                            }else if(get.attitude(player,players[i])<0){
                                                lose++;
                                            }
                                        }
                                    }
                                }
                                if(lose>recover&&lose>0) return (button.link[2]=='sha')?1:-1;
                                if(lose<recover&&recover>0) return (button.link[2]=='tao')?1:-1;
                                return (button.link[2]=='tao')?1:-1;
                            },
                            backup:function (links,player){
                                return {
                                    filterCard:true,
                                    selectCard:2,
                                    audio:2,
                                    popname:true,
                                    viewAs:{name:links[0][2]},
                                }
                            },
                            prompt:function (links,player){
                                return '将两张手牌当作'+get.translation(links[0][2])+'使用';
                            },
                        },
                        ai:{
                            order:2,
                            result:{
                                player:function (player){
                                    var num=0;
                                    var cards=player.getCards('hs');
                                    if(cards.length>=3&&player.hp>=3) return 0;
                                    for(i=0;i<cards.length;i++){
                                        num+=Math.max(0,get.value(cards[i],player,'raw'));
                                    }
                                    num/=cards.length;
                                    num*=Math.min(cards.length,player.hp);
                                    return 12-num;
                                },
                            },
                        },
                    },
                },
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/zuan_level.png>",
                //marktext:"级",
                trigger:{
                    player:["enterGame"],
                    global:"gameDrawAfter",
                },
                priority:987,
                silent:true,
                forced:true,
                filter:function(event){
                    return true;
                },
                content:function(){
                    player.addMark('_levelskill',1,false);
                    player.storage.relife=Math.ceil(player.storage._levelskill*0.4+0.1);
                    var chat=['游戏已开始，请赶快获得经验以提升等级哦~','欢迎来到战局！祝我们游戏顺利~','游戏已开始，请放心游玩呢'].randomGet()  
                    if(player==game.me) player.say(chat);
                    //if(lib.config['extension_祖安武将_levelstrong']) player.addSkill('levelcard');
                },
                intro:{
                    name:"等级",
                    content:function (storage,player,skill){
                        var level=player.storage._levelskill;
                        var str='◈当前等级 '+level+'/10级';
                        if(lib.config['extension_祖安武将_levelstrong']=='old') {
                        if(level<3) var str=str+'<li>尚未获得任何强化';
                        if(level>=3) var str=str+'<li>手牌上限+1';
                        if(level>=4) var str=str+'<li>获得一点护甲';
                        if(level>=5) var str=str+'<li>【杀】的使用次数+1';
                        if(level>=6) var str=str+'<li>手牌上限+1';
                        if(level>=7) var str=str+'<li>攻击距离+1';
                        if(level>=8) var str=str+'<li>获得一点体力上限';
                        if(level>=9) var str=str+'<li>摸牌阶段额外摸一张牌';
                        if(level>=10) var str=str+'<li>出牌阶段限两次，可将两张手牌当一张基本牌使用';
                    }else if(lib.config['extension_祖安武将_levelstrong']=='new') {
                        if(level<3) var str=str+'<li>尚未获得任何强化';
                        if(level>=3) var str=str+'<li>手牌上限+1';
                        if(level>=4) var str=str+'<li>【杀】的使用范围+1';
                        if(level>=5) var str=str+'<li>【杀】的使用次数+1';
                        if(level>=6) var str=str+'<li>防御距离+1';
                        if(level>=7) var str=str+'<li>进攻距离+1';
                        if(level>=8) var str=str+'<li>体力上限+1';
                        if(level>=9) var str=str+'<li>摸牌阶段摸牌数+1';
                        if(level>=10) var str=str+'<li>出牌阶段限两次，可将两张手牌当一张基本牌使用';
                    }else {
                        if(!lib.config['extension_祖安武将_balance']) var str=str+'<li>每提升一个等级可以摸一张牌';
                    }
                        return str;
                    }
                },
        }
    lib.skill._expskill={
                marktext:"经",
                trigger:{
                    player:["phaseBegin"],
                    source:"damageSource",
                },
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/zuan_exp.png>",
                priority:200,
                silent:true,
                forced:true,
                filter:function(event,player){
                    return !player.hasSkill('jingcheng'); 
                },
                content:function(){
                    var adds=trigger.name=='damage'?trigger.num*7:3;
                    game.zuanExp(player,adds);
                },
                intro:{
                    name:"经验",
                    content:function (storage,player,skill){
                        var maxexp=20+2*player.storage._levelskill;
                        var str='<li>距离下一级已有 '+player.storage._expskill+'/'+maxexp+'经验'
                        return str;
                    }
                },
        }

    lib.skill._exp2skill={
                trigger:{
                    player:["recoverEnd"],
                },
                priority:200,
                silent:true,
                forced:true,
                filter:function(event,player){
                    return !player.hasSkill('jingcheng'); 
                },
                content:function(){
                    var add=trigger.num*(player.maxHp-player.hp+1)*2;
                    game.zuanExp(player,add);
                },
        }

    lib.skill._useskill={
                usable:3,
                trigger:{
                    player:["useCard"],
                },
                priority:200,
                silent:true,
                forced:true,
                filter:function(event){
                    return true; 
                },
                content:function(){
                    game.zuanExp(player,2);
                },
        }

    lib.skill._killskill={
                trigger:{
                    source:["dieBegin"],
                },
                priority:200,
                silent:true,
                forced:true,
                filter:function(event,player){
                    return !player.hasSkill('jingcheng'); 
                },
                content:function(){
                    game.zuanExp(player,25);
                },
        }
    }
    // ---------------------------------------祖安对话------------------------------------------//   
            if(parseFloat(lib.config['extension_祖安武将_zuan'])!='1'){        
    // ---------------------------------------回血播报------------------------------------------//   
    lib.skill._recoversay={
    trigger:{
        global:"recoverEnd",
    },
    filter:function(event,player){
        return true;
    },
    forced:true,
    silent:true,
    content:function(){
        "step 0"
        var say=0;
        if(get.attitude(player,trigger.player)>0){
        if(trigger.player==player){
        if(trigger.player.hp<=1||trigger.num>=2) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['好险吖O.O','呼呼..还好T.T','TwT','耶QvQ','好耶~','太棒啦！OvO'].randomGet()  
           }else {
               var chat=['快哉！快哉！','岂不美哉？','赞啊~赞啊~','先吃先吃！','爽啊','真香~唉','好险...还好没死','大难不死必有后福','濒死挣扎一番！','我还没那么容易死！','不屈','桃一下'].randomGet()  
           }
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['棒棒哒~','*v*回来啦','开心~','OvO','好耶','嘿嘿^w^'].randomGet()  
           }else {
              var chat=['干饭干饭~','真香','恢复一下元气。','养精蓄锐','舒服了！','桃一下','死不了~','就这？','九折？'].randomGet()  
           }
            var say=1;  
            }
            }else if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3'){
            if(trigger.player.hp<=1||trigger.num>=2) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['哇@v@好厉害~','耶~好棒好棒！','QuQ哈哈'].randomGet()  
           }else {
               var chat=['八月正午的阳光都没你耀眼','岂不美哉？','这个彬彬就是逊啦~','极限回血，强啊','我们三个真是太强了','我们队友是杀不死的哦！','Nice'].randomGet()  
           }
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['欧耶~','（^v^）','0v0仙女表扬~','了不起！','哇~','wow'].randomGet()  
           }else {
                var chat=['滴滴清纯的蒸馏水','岂不美哉？','That’s good♂','我们队友真强','哈哈对面是不是输不起','来来来，砍我们','高，实在是高'].randomGet()  
        }
            var say=1;  
            }
            }
            }else if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3'&&trigger.player!=player){
            if(trigger.player.hp<=1||trigger.num>=2) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['<_<这都可以..','（V_V）可恶~','哎...','可惜啦。。','#吐血#吐血'].randomGet()  
           }else {
               var chat=['这个彬彬真的太逊了！','靠，狗货','你给凉企氪金了？','这老不死的。','狗屎。。','这。。'].randomGet()
               }  
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['>_>啊这..','不好..~_~','哎.','可惜x_x','#吐血'].randomGet()  
           }else {
                var chat=['我从未见过，有如此厚颜无耻之人！','一只王八','一只兲','好烦，对面老是回血','没事，很快把他们打到残血','就不信你们还能再回？','切！','靠，有桃'].randomGet()  
            }
            var say=1;  
            }
        }
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1) {
     player.say(chat);
     }
    },
}
    // ---------------------------------------受伤播报------------------------------------------//   
    lib.skill._damagesay={
    trigger:{
        global:["damageEnd","loseHpEnd"],
    },
    filter:function(event,player){
        return true;
    },
    forced:true,
    silent:true,
    content:function(){
        "step 0"
        var say=0;
        if(get.attitude(player,trigger.player)>0){
        if(trigger.player==player){
        if(trigger.player.hp<=1||trigger.num>=2) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['呜呜..快死了','QAQ疼疼','TwT哭哭','放过我叭...','哭哭~不行了','(;w;)哇~'].randomGet()  
           }else {
               var chat=['阿伟，我面包还你','阿伟，阿伟，你干嘛！','杰哥~不要啦~','饼将军救我...','54320','痛啊','我一定会回来的！！！','我还能挺一会。。','快死啦~快死啦~','好痛'].randomGet() 
           }
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['>_<讨厌..','疼疼','55555','讨厌你..','#生气','不要不要','T_T','TwT','不喜欢你O_O','可怕~'].randomGet()  
           }else {
              var chat=['你只王八','你只兲','小几把还挺会玩','来来来，继续？','我血厚着呢。','继续砍我！来！！','哎哟，不错哟','这点伤痛算得了什么~','Tnnd，跟我玩音的是吧！','焯！'].randomGet()  
            }
            var say=1;  
            }
            }else if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3'){
        if(trigger.player.hp<=1||trigger.num>=2) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['>_<..心疼','555...别死啊TwT','好可怕啊XwX','不要啊TwT','放过TA可以嘛QwQ','别打TA呀QwQ','可怜~~~'].randomGet()  
           }else {
               var chat=['吔屎啦，梁非凡~','年轻人不要太气盛！','是个狼灭','是个狼人','噢...心疼','坚持住啊~~~','挺住！！','对面过分了！','药丸药丸','狗屎','顶得住吗？'].randomGet()
           }
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['>_<心疼','疼不疼~QwQ','不要！O_O','不~X^X','不要这样~','别打TA呀。。'].randomGet()  
           }else {
                var chat=['吔屎啦，梁非凡~','年轻人不要太气盛！','你是来找茬是吧','What’s up','wtf','我会替TA报仇的！','难过QAQ','我有桃放心','您妈买菜必涨价。','小心被集火哦','不哭不哭'].randomGet()  
           }
            var say=1;  
            }
                }
            }else if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3'&&trigger.player!=player){
        if(trigger.player.hp<=1||trigger.num>=2) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['>_<哇，不忍心看下去耶','好棒好棒','好暴力吖QvQ','太残忍啦~QvQ','O_O这么厉害'].randomGet()  
           }else {
               var chat=['不气盛叫年轻人吗？','我的很大♂，你忍一下~','华强，爱华强！','另外你说的，这瓜要是生的你自己吞进去啊','你瓜没拿','吸铁石','杀爆TA！','谁来补最后一刀？','加油，我们能赢','对面的你们药丸','搞TA！','高，实在是高！','快死了快死了！爽','直接来..吧！'].randomGet()  
            }
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
               var chat=['对面疼不疼？>v<','好耶好耶','QvQ','耶QvQ','欺负TA欺负TA~'].randomGet()  
           }else {
                var chat=['年轻人不要太年轻！','不气盛叫年轻人吗','我的很大♂，你忍一下~','另外你说的，这瓜要是生的你自己吞进去啊','吸铁石','大快人心！','砍TA','干得漂亮','可以可以','继续继续','痛快！'].randomGet()  
            }
            var say=1;  
            }
            }
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1) {
     player.say(chat);
     }
    },
}
    // ---------------------------------------全场死亡播报------------------------------------------//   
     lib.skill._diesay={
    trigger:{
        global:"die",
    },
    silent:true,
    silent:true,
    frequent:true,
    filter:function(event){
        return (parseFloat(lib.config['extension_祖安武将_zuan'])=='3');
    },
    content:function(){
        if(get.attitude(player,trigger.player)>0) {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
            var chat=['呜呜呜呜呜TTwTT','别走啊...XwX','我的队友。。。V^V','桑心透了Q_Q','#擦眼泪','#哭#哭#哭','怎么可以这样？！Q^Q'].randomGet()
            }else {
            var chat=['是不是说，没有做完的梦最痛~','在一起叫梦，分开了叫痛','就算这次做错也只是怕错过','如果早知道，我就不会去他那里了..','都是你害的啦~','死了啦，拜托~','外卖杀人啊','杀人啦~杀人啦~','章鱼哥~章鱼哥~','萨日朗！萨日朗！！','其实我是怕你吃太多桃噎着。','小几把还挺会玩。','玩游戏之前能不能带点脑子','彻底玩蛋了...','怎么没有投翔按钮？','完蛋。。。','下局再来','十八年后。。。又是一条好汉','你却让我输得，这么彻底~','我好不容易心动一次','不要停下来啊啊啊啊'].randomGet()
            }
            var say=1;
            }else {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
                var chat=['对面好可怜QvQ','献上花环QvQ','我会缅怀您的！嘻嘻','再见啦~#告别','安息叭。。','哎呀QvQ一不小心就886'].randomGet()
            }else {
                var chat=['小盆友你是否有很多问号？','分开了叫痛~','我晒干了沉默~','这个彬彬就是逊啦','这个彬彬真的太逊了~','我只希望你能够好好用功读书','来来来，继续口嗨啊？！#阴险','我们的游戏正在蒸蒸日上哦~#微笑','对面投翔吧！！！','对面没了，我们快赢了','对面好菜鸡啊，快输了吧？！','菜，哈哈哈哈','TA是谁啊？','让TA自己说去','我滴任务...完成辣！','我的任务..完成啦！','啊哈哈哈哈！'].randomGet()
            }
            var say=1;
            }
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1){
        player.say(chat);
            }
        },
         }
    // ---------------------------------------全场被指定播报------------------------------------------//   
     lib.skill._tosay={
    trigger:{
        global:"useCardToPlayered",
    },
    silent:true,
    silent:true,
    frequent:true,
    filter:function(event){
        return true;
    },
    content:function(){
        var say=0;
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {

        if(trigger.target==player){
            if(get.attitude(player,trigger.player)>0){
                if(get.name(trigger.card)=='wu') {
               var chat=['无'].randomGet()  
            var say=1;
            }
        if(get.name(trigger.card)=='sha') {
               var chat=['别打我~是朋友呀QAQ','不不不，不是我~QwQ','天哪！我是你的队友~OoO','为什么要这么做吖？'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='guohe') {
               var chat=['没搞懂耶~','你想干什么Q_Q','不要啦QvQ','再见啦我的牌@v@'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='shunshou') {
               var chat=['没搞懂耶~','你想干什么Q_Q','不要啦QvQ','你想要就给你好啦~@A@'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['没搞懂耶~','你想干什么Q_Q','不要啦QvQ','对我温和点呀','轻点，疼>w<'].randomGet()  
            var say=1;
            }
               }else {
        if(get.name(trigger.card)=='sha') {
                  var chat=['哼U_U，你过分','U^U欺负弱小','别打头555Q^Q','讨厌你~','不想理你了~Q^Q','我有闪的~O^O','我不怕你！Q^Q','哼！V_V'].randomGet()  
            var say=1; 
               }
                   if(get.name(trigger.card)=='guohe') {
               var chat=['不要拆我QaQ','你想干嘛QwQ','你好过分！X^X','讨厌你U^U'].randomGet()  
            var say=1;
            }
                   if(get.name(trigger.card)=='shunshou') {
               var chat=['不要顺我QaQ','你想干嘛QwQ','你好过分！X^X','讨厌你U^U','给你就是了，哼U^U'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['你不让着女生嘛Q。Q','你欺负弱小！0^0','欺负女生。。呜呜','讨厌死你了'].randomGet()  
            var say=1;
            }
                   }
        }else if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3'){
        if(get.attitude(player,trigger.player)>0){
                if(get.name(trigger.card)=='sha') {
            var chat=['你别欺负TA！#生气','#生气#生气','过分U^U','哼。。。','不高兴。。U_U','你觉得这样好嘛U_U'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='guohe') {
               var chat=['过分~O_o','不要拆我队友555','不要~','哇，过分耶~O_o','O^o','不开森。。'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='shunshou') {
               var chat=['过分~O_o','不要偷我队友555','不要~','哇，过分耶~O_o','O^o','不开森。。'].randomGet() 
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['队友加油！O^o打死TA！','队友加油！O^o','你打不过我队友哒Q^Q'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='huogong') {
               var chat=['不要玩火>w<','消防蜀黍快来！！！','不要中吖不要中吖'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiedao') {
               var chat=['Owo','X_x'].randomGet()  
            var say=1;
            }
            }else {
                if(get.name(trigger.card)=='sha') {
            var chat=['哇^_^','打TA打TA！^_^','队友加油！QvQ','我队友最腻害了！#Happy'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='guohe') {
               var chat=['哦耶','对面要没牌了耶~QvQ','嘿嘿，好爽^A^'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='shunshou') {
               var chat=['哦耶','对面要没牌了耶~QvQ','嘿嘿，好爽^A^'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
            var chat=['哇^_^','打TA打TA！^_^','队友加油！QvQ','我队友最腻害了！#Happy','QvQ吃瓜ing'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='huogong') {
               var chat=['烧烧烧~','哇GvG','烫死TA！...#偷笑#偷笑'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiedao') {
               var chat=['没收TA的武器！Q.Q','拿走拿走！^v^','缴枪不杀！^v^'].randomGet()  
            var say=1;
            }
            }
            }



            }else {
        if(trigger.target==player){
            if(get.attitude(player,trigger.player)>0){
                if(get.name(trigger.card)=='wu') {
               var chat=['无'].randomGet()  
            var say=1;
            }
        if(get.name(trigger.card)=='sha') {
               var chat=['吔屎啦你~','我面包还你~','阿伟，你干嘛？','干嘛~呃哼哼~','你还真杀我？！','小几把还挺会玩。','昏君啊~','你搞错人啦','会不会玩...','屑司令..你不会相信王大队长..胡说八道吧？','王大队张..你又要陷害我是吧？','谁又要陷害我~？'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='guohe') {
               var chat=['随便拿~随便拿','来来来，这些都可以拿','呃，这...','你想干嘛？','反正我也不要了...'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='shunshou') {
               var chat=['随便拿~随便拿','来来来，这些都可以拿','呃，这...','你想干嘛？','拿走拿走别客气~','零元购'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['我面包还你~','阿伟，你干嘛？','干嘛~呃哼哼~','同学之间就不要打架斗殴了吧？','咱们来摔♂跤吧','你决斗我干嘛','你搞错人了。。','屑司令..你不会相信王大队长..胡说八道吧？','王大队张..你又要陷害我是吧？','谁又要陷害我~？'].randomGet()  
            var say=1;
            }
               }else {
        if(get.name(trigger.card)=='sha') {
                  var chat=['诸葛村夫，你敢！','我赌你断杀。','我会复仇的！','杀我对你有什么好处','来来来，继续？','你当我没闪？','怕你？','九折？'].randomGet()  
            var say=1; 
               }
                   if(get.name(trigger.card)=='guohe') {
               var chat=['辽宁拆迁队长？','过分了啊','你好贱','反正我也不需要~'].randomGet()  
            var say=1;
            }
                   if(get.name(trigger.card)=='shunshou') {
               var chat=['辽宁拆迁队长？','过分了啊','你好贱','反正我也不需要~','零元购是吧？'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['来我房里，有好康的','身材不错哦~蛮结实的啊','Solo就Solo','我手牌有杀我怕你？','来！你别怂！','怕你不成？'].randomGet()  
            var say=1;
            }
                   }
        }else if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3'){
        if(get.attitude(player,trigger.player)>0){
                if(get.name(trigger.card)=='sha') {
            var chat=['你个禽兽你住手！','有什么事冲我来！','敢弄我队友？你完蛋了','不，别。','过分','Oh~No~'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='guohe') {
               var chat=['你这算什么好汉？','直接杀啊，拆啥','很烦这张牌诶。','过河拆桥？追！','希望拆不到好牌','你能拆啥。。'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='shunshou') {
               var chat=['你这算什么好汉？','直接杀啊，偷牌干什么啥','很烦这张牌诶。','给你毒你要不要','白嫖党滚粗。','赌你摸到一张毒'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['你打不过我队友的','就你这实力还想Solo？','看我队友反杀你'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='huogong') {
               var chat=['小心东风不与周郎便哦！','等着玩火烧身吧','放弃吧，你没有这张花色的'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiedao') {
               var chat=['祖传屠龙宝刀要被借走了..','兄弟，刀呢'].randomGet()  
            var say=1;
            }
            }else {
                if(get.name(trigger.card)=='sha') {
            var chat=['做得好','待会一人给TA一刀','请继续','淦就完事了'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='guohe') {
               var chat=['哟呵，好爽','对面要没牌了哦~','人不贱则不立'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='shunshou') {
               var chat=['呵呵，好爽','对面被摸空了哈哈哈','人不贱则不立'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='juedou') {
               var chat=['吃瓜ing','来看掐架了','现场武术指导，我方必胜','我们手牌多，不怕'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='huogong') {
               var chat=['烧死TA！','借你东风。','对面怕火'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiedao') {
               var chat=['刀TA','干得漂亮','你刀没了！'].randomGet()  
            var say=1;
            }
            }
            }

            }

        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1){
        player.say(chat);
            }
 },
 }
    // ---------------------------------------全场用卡播报------------------------------------------//   
lib.skill._fromsay={
    trigger:{
        global:"useCard",
    },
    silent:true,
    frequent:true,
    filter:function(event){
        return true;
    },
    content:function(){
        var say=0;
if(parseFloat(lib.config['extension_祖安武将_zuan'])=='3') {
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {


        if(get.attitude(player,trigger.player)>0){
                if(get.name(trigger.card)=='tao') {
               var chat=['桃子桃子QvQ','我也想吃桃子~~~','可可爱爱的桃子诶~','耶QvQ','^v^好吃嘛？'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiu') {
               var chat=['我想要香槟O.o','干杯嘛？','我也醉啦~~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuxie') {
               var chat=['仙女无懈！0.0','我拒绝X.X','这就对了嘛~~'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='taoyuan') {
               var chat=['蟹蟹','开心（QvQ）','开开心心','开森~~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wugu') {
               var chat=['蟹蟹','开心（QvQ）','开开心心','开森~~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='nanman') {
               var chat=['能打到我嘛？Q,Q','我没杀耶..Q,Q','我有杀哦@v@','我...！！！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wanjian') {
               var chat=['能打到我嘛？Q,Q','我没闪耶..Q,Q','我有闪哦@v@','我...！！！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuzhong') {
               var chat=['哦耶！','好耶！','摸摸~'].randomGet()  
            var say=1;
            }
            if(get.name(trigger.card)=='tiesuo') {
               var chat=['连起来~','绑住绑住~'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip1') {
               var chat=['$v$有武器辣~','欧耶，是武器！','打打打~'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip2') {
               var chat=['是盾牌嘛？','是护盾耶！','哇哦~QvQ'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip4') {
               var chat=['哦，这是马O.o','是马耶~o.O','有马啦，杀杀杀~Q.Q'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip3') {
               var chat=['哦，这是马O.o','是马耶~o.O','有马啦，杀杀杀~Q.Q'].randomGet()  
            var say=1;
            }
            }else {
                if(get.name(trigger.card)=='tao') {
               var chat=['哇，是桃U_U','又是桃耶。。讨厌','为什么我没有。。Q^Q'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiu') {
               var chat=['TA醉了TA醉了>_<','阔怕。。','不准喝酒！>^<'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuxie') {
            var chat=['不要无懈吖！','为什么拒绝？·.·','哼'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='taoyuan') {
            var chat=['白嫖快乐！！>v<','欧耶','回血回血~'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='wugu') {
            var chat=['白嫖快乐！！>v<','欧耶','白嫖~白嫖~'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='nanman') {
               var chat=['别别别','我的上帝呀TwT','我怕怕QwQ','不要酱紫啦~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wanjian') {
               var chat=['别别别','我的上帝呀TwT','我怕怕QwQ','不要酱紫啦~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuzhong') {
               var chat=['对面手气太好了。。QwQ','好多无中生有啊www','对面好多牌牌'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='tiesuo') {
               var chat=['不要连我~','不不不T_T'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip1') {
               var chat=['U_U欧，又是武器~','快跑，TA有武器！','Oh不Q^Q'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip2') {
               var chat=['不要这个盾牌~','穿好多衣服T^T','x^X呃。。'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip4') {
               var chat=['对面好多马呀','我不喜欢这些马马了。。','小马要跑不动啦！！！UwU'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip3') {
               var chat=['对面好多马呀','我不喜欢这些马马了。。','小马要跑不动啦！！！UwU'].randomGet()  
            var say=1;
            }
            }

            }else {


        if(get.attitude(player,trigger.player)>0){
                if(get.name(trigger.card)=='tao') {
               var chat=['辛得诸君出手相救！','最爱吃桃子','Nice!','桃子，桃子！','舒服了！','这鸡汤..十分滴珍贵','行..我喝..喝！','啧啧..这喝汤..多是一件美事啊','不咸不淡，味道真是好极了！','三点几啦，饮茶先啦！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiu') {
               var chat=['哈哈你们完了','斗酒十千！','喝车不开酒','酒逢知己千杯少！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuxie') {
               var chat=['无懈！','你休想！','不，你不想','你想都别想','这就对了'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='taoyuan') {
               var chat=['谢谢老板！','多多益善','蟠桃会赴会了~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wugu') {
               var chat=['谢谢老板！','多多益善！','我拿走了','谢谢兄弟，滑稽','喝碗鸡汤算得了什么呀'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='nanman') {
               var chat=['别误伤队友了哦。','男人♂入侵','我没杀..','我有杀哦','我也...'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wanjian') {
               var chat=['别误伤队友了哦。','别乱放箭啊','我有闪','我没...','我没闪','我也...'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuzhong') {
               var chat=['你好，我是你的朋友。','哟吼','摸摸摸','多好啊'].randomGet()  
            var say=1;
            }
            if(get.name(trigger.card)=='tiesuo') {
               var chat=['连TA','捆绑play','绑住TA！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='zhuge') {
               var chat=['扫六合席卷八荒说的难道就是宁？','杀遍全场了','哈哈，AK出来了'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='guding') {
               var chat=['就问你怕不怕？','捅对面菊花~','对面，保护好你们的菊花'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='tengjia') {
               var chat=['小心点，别沾上火','还行'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='bagua') {
               var chat=['这是进口的八卦阵！','刚去学了太极？'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip4') {
               var chat=['Nice，是减一马','哈哈哈，又是马','有马啦，杀杀杀！'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip3') {
               var chat=['Good，是加一马','哈哈哈，又是马','你砍不到我队友啦~'].randomGet()  
            var say=1;
            }
            }else {
                if(get.name(trigger.card)=='tao') {
               var chat=['哟，居然有桃','我猴子偷桃~','哎哟'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jiu') {
               var chat=['啊，别','我好害怕','还怕','酒驾拘捕','别动♂蕉警来查酒驾了'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuxie') {
            var chat=['无懈？','不，你不想！','哎哟，有脾气了'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='taoyuan') {
            var chat=['白嫖快乐！！','YE','拿走了不谢'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='wugu') {
            var chat=['白嫖快乐！！','白嫖党的胜利','鸡汤来咯！','你要是不喝...说明你真下毒了'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='nanman') {
               var chat=['我吐了','好恶心','爷好怕~','我有杀','不怕'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wanjian') {
               var chat=['你是大嘴附体？！','爷好怕','我有闪呵呵','没用的','我有闪'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='wuzhong') {
               var chat=['狗托？','我玩十年了不比你强？','祝你摸到一手烂牌'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='tiesuo') {
               var chat=['别连我~','你好邪恶','切，难道你有火攻吗'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='zhuge') {
               var chat=['糟了AK出现了！','闪不太够啊','赶紧拆掉TA'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='guding') {
               var chat=['是大名鼎鼎的菊花刀','哈哈，我有牌不怕'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='tengjia') {
               var chat=['穿寿衣是想来送人头？','疼甲你也穿呵呵','我有火攻哦'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='bagua') {
               var chat=['国产八卦阵来了。','劣质的没用','赶紧拆掉'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip4') {
               var chat=['好烦，又是减一马','这马怎么这么多','猎马弓在哪里？'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip3') {
               var chat=['好烦，又是加一马','这马怎么这么多','猎马弓在哪里？'].randomGet()  
            var say=1;
            }
            }

            }
            }
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1){
        player.say(chat);
            }
 },
 }
     lib.skill._selfsay={
    trigger:{
        player:"useCard",
    },
    silent:true,
    forced:true,
    filter:function(event){
        return true;
    },
    content:function(){
        var say=0;
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {


        if(get.name(trigger.card)=='sha') {
            var chat=['@v@杀一下~','打你一下~','小拳拳捶你胸~U^U','打屎你！Q^Q','讨厌你讨厌你','捶你锤你','Q^Q沙屎你个臭撒币~'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='shan') {
            var chat=['跑跑','闪闪~','躲躲~','886QvQ','打不到我噢#高兴','哦耶','@v@闪一下~'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='juedou') {
            var chat=['@v@打一下~','打你打你','捶你胸~O^U','打屎你！Q^Q','讨厌你讨厌你','捶你锤你','Q^Q打屎你个臭撒币~'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='guohe') {
               var chat=['拆啦拆啦','别怪我QvQ','你不需要叭？','再见啦牌牌~','牌牌不喜欢你'].randomGet()  
            var say=1;
            }
        if(get.name(trigger.card)=='wuxie') {
            var chat=['无懈一下下@v@','不要拒绝我嘛#卖萌','不许你这样子做~','不行不行！','不可以酱紫~'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='nanman') {
            var chat=['入侵啦','南蛮入侵~QoQ','好恐怖耶@v@','QvQ打屎你们HAHAHA'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='wanjian') {
            var chat=['放箭啦','万箭齐发~QoQ','好恐怖耶@v@','QvQ打屎你们HAHAHA'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='tao') {
            var chat=['吃桃桃~$v$','好吃好吃$v$','好幸福~','好香吖','emmmmm好柒！'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='jiedao') {
            var chat=['借一下好嘛QwQ','可以给我嘛QwQ？','不要拿着它嘛~'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='shunshou') {
               var chat=['我拿走啦~','别怪我QvQ','你不需要叭？','再见啦牌牌~','牌牌不喜欢你'].randomGet()  
            var say=1;
            }
        if(get.name(trigger.card)=='taoyuan') {
            var chat=['大家都来吃桃子叭~QwQ','大家一起吖QaQ','一起Happy嘛？$v$'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='wugu') {
            var chat=['大家都来拿牌叭~QwQ','大家一起吖QaQ','一起Happy嘛？$v$'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='wuzhong') {
            var chat=['拿两张牌！$v$','无中生友？朋友在哪里？@v@','摸摸摸！$v$','我听说...'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='jiu') {
            var chat=['稍微喝一下没问题叭？','就一口，就一口@v@','啊~醉了。。。','这是香槟！@v@','好喝>v<'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='huogong') {
            var chat=['烧你！！V-V','火焰攻击~','烧屎你~OvO'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='tiesuo') {
            var chat=['连起来叭','连一下下哈~'].randomGet()
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip1') {
               var chat=['$v$我有武器辣！','欧耶，是武器耶！$v$','我喜欢这个$v$'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip2') {
               var chat=['换个衣服··^v^··','穿个衣服先哈·。·','别偷看我换衣服噢~'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip4') {
               var chat=['哦，是小马$.$','小马耶~$v$','小马小马~'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip3') {
               var chat=['哦，是小马$.$','小马耶~$v$','小马小马~'].randomGet()  
            var say=1;
            }

            }else {


        if(get.name(trigger.card)=='sha') {
            var chat=['吔屎啦你~','我TM劈你','跟我刘华强拼你有这个实力吗？','哥们你这瓜保熟吗','杀一下~','杀！！！','看我的厉害！','砍我杀穿你','不杀你几刀你也不知道爷的厉害','鲨！','沙屎你个臭撒币~','Tnnd，为什么不喝！','不喝..不喝我就炸死你！','都怕死是吧？','都bei想活着！'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='shan') {
            var chat=['你TM劈我瓜是吧？','好我再给你一次机会','给你机会你不中用啊~','你TM劈我','你瓜没拿','你是故意找茬是吧？','我闪！','我躲~','杀不到~','累吖累吖','嘿嘿','砍不到我~砍不到我~','我有闪哦','大伙都不敢吃..说是有人在鸡汤里下了毒','我..我不打扰，我走了啊~','嘿咻咻'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='juedou') {
            var chat=['诸葛亮下来战书','我TM跟你拼了','还能教你，登dua郎哦~','挑一个','来我房里，有好康的','身材不错哦~蛮结实的啊','来啊，Solo啊','敢不敢来Solo？','一挑一！','咱们来♂摔跤','单挑，敢不敢？','来，搞一下♂（坏笑）'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='guohe') {
               var chat=['杰哥，这些都可以拿嘛','拆你的牌！！！','你别想要','看你也不需要','这牌对你没用','拆了拆了！'].randomGet()  
            var say=1;
            }
        if(get.name(trigger.card)=='wuxie') {
            var chat=['吸铁石。','秀发，无屑可击~','哈哈，你休想！！','你甚至想都别想','无shit可击~','无泄可击！'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='nanman') {
            var chat=['欢迎你们来我家玩','我家的房子还蛮大♂的','男人♂入侵！！！','冲冲冲！','杀——','直接来...吧！','Tnnd，为什么不喝！','不喝..不喝我就炸死你们！','都怕死是吧？','都bei想活着！'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='wanjian') {
            var chat=['欢迎你们来我家玩','我家的房子还蛮大♂的','全都去死HAHAHA','大嘴附体！','放箭！放箭！！','看我乱杀！','直接来...吧！','Tnnd，为什么不喝！','不喝..不喝我就炸死你们！','都怕死是吧？','都bei想活着！'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='tao') {
            var chat=['香香的烤面筋，可带劲啦','吃颗桃子','好吃','香♂','嗯，真香','我在想Peach..','这鸡汤..十分滴珍贵','行..我喝..喝！','啧啧..这喝汤..多是一件美事啊','不咸不淡，味道真是好极了！'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='jiedao') {
            var chat=['借下你的杀猪刀。','你不是很能刀么？','可惜下一秒就是我的了'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='shunshou') {
            var chat=['杰哥，这些都可以拿嘛','拿来！','取你牌来！','取你的牌！','呵呵，我拿走了','可惜下一秒就是我的了'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='taoyuan') {
            var chat=['来干饭，来干饭','来来来，这些都可以拿~','大家都来吃桃子叭~','来来大家一起','一人一口酥'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='wugu') {
            var chat=['来来来，这些都可以拿~','别多拿，别少拿','发牌了发牌了！','来来，人人都有','多少张呢？数一下','开仓济贫！','喝碗鸡汤算得了什么呀'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='wuzhong') {
            var chat=['无中生友。','你强个jb。','摸两个朋友','摸摸摸！','我有两个朋友？'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='jiu') {
            var chat=['杰哥，酒~','酒肉穿肠过，佛祖心中留！','酒过愁肠，化作相思泪','温酒斩华雄','煮酒论英雄','举杯消愁','对酒当歌，人生几何！','纯度挺高的','下次换香槟？','好喝'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='huogong') {
            var chat=['烈火焚天！','焚城！','烧你丫的','让我火上浇油！','烧死你'].randomGet()
            var say=1;
            }
        if(get.name(trigger.card)=='tiesuo') {
            var chat=['就差一把火了！','把你变成连体婴儿','要死你们也一起死啊对吧'].randomGet()
            var say=1;
            }
                if(get.name(trigger.card)=='zhuge') {
               var chat=['看我杀遍全场！','看我乱杀！','杀杀杀','冲冲冲'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='guding') {
               var chat=['菊花残，满地伤...','小心菊花不保'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='tengjia') {
               var chat=['球球您们来烧我~','其实一点也不疼','疼甲！','有火杀嘛','放箭放箭！南蛮也OK啦~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='bagua') {
               var chat=['杀我！！！','刚学了太极','牌堆顶都是红色的哦','有点八卦','奇门八甲'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='qilin') {
               var chat=['没想到还有这种要求！滑稽','你的马没了','你马没了（真的是那个马别误会）','猎马弓~'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='cixiong') {
               var chat=['男女剑！','人妖剑~','我来搞一下男女关系'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='fangtian') {
               var chat=['以一挑三！！！','杀！！！','武神之戟','奉先附体！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='guanshi') {
               var chat=['强杀斧','命中！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='qinggang') {
               var chat=['破甲剑到手','玄德助我！','你的防具没用了！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='zhangba') {
               var chat=['刷牌机器','翼德！！！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='renwang') {
               var chat=['获得技能 毅重','黑杀砍我！','仁王，人中之王'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='zhuque') {
               var chat=['藤甲，哪里有藤甲？','烧烧烧！','诸葛村夫，你敢？！'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='baiyin') {
               var chat=['拆了拆了','求酒杀~~','拿走我的。'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='muniu') {
               var chat=['什么木流牛马？','屯牌了兄弟们','木流牛马，哈哈哈'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='du') {
               var chat=['毒死我蒜了。。','我疯了','自杀自杀'].randomGet()  
            var say=1;
            }
                if(get.name(trigger.card)=='jinchan') {
               var chat=['拜拜','溜溜溜','三十六计，走为上计'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip4') {
               var chat=['减一马！','手够长啦','顺手牵羊我来啦~','距离够了！','攻击马。','进攻马！'].randomGet()  
            var say=1;
            }
                if(get.subtype(trigger.card)=='equip3') {
               var chat=['加一马！','砍不到我','嘿嘿，距离不够！','防御马。','防御马！'].randomGet()  
            var say=1;
            }

            }
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1){
        player.say(chat);
            }
 },
 }

    // ---------------------------------------全场开始游戏播报------------------------------------------//   
lib.skill._startgamesay={
    trigger:{
                    player:"enterGame",
                    global:"gameDrawAfter",
    },
    silent:true,
    forced:true,
    filter:function(event,player){
        if(parseFloat(lib.config['extension_祖安武将_zuan'])=='2') {
            return player==game.me;
        }else {
        return true;
    }
    },
    content:function(){
        var say=0;
if(parseFloat(lib.config['extension_祖安武将_zuan'])!='1'){
                if(player.identity=='zhu') {
               var chat=['大家直接明了吧！','这把要好好玩噢','忠臣别乱来啊~','辅助我就对了！','我是主公。','内奸你别乱来','大家好好玩','内奸别跳反。'].randomGet()  
            }else {
               var chat=['收到！！','这把好好玩','大家配合一下','懂的懂的','懂的都懂——','我明了','大家好！','不乱玩不乱玩','OK','Ojbk','开了开了','这把看我乱杀','别砍我，球球你们','潜水ing','打酱油的','再集火我就托管了啊','对我友好些，好么？','多多互相帮助啊','呵呵..啊哈哈哈哈哈','鸡汤来啰~'].randomGet()  
            }
var ds = new Date();
var month = ds.getMonth()+1;
var date = ds.getDate();
var year = ds.getFullYear();
var birmon=parseFloat(lib.config['extension_祖安武将_birthdaymonth']);
var birday=parseFloat(lib.config['extension_祖安武将_birthdaydate']);
if(month==birmon&&date==birday) {
    if(player==game.me) {
        var chat=['谢谢大家~','感动ing','我要吹蜡烛','好耶','今天我生日','嗯呢','哈哈好','今天是我生日捏','快祝我生日快乐！'].randomGet();
    }else {
        var chat=['生日快乐','生日快乐噢','生日快乐！','祝你生日快乐~','祝贺祝贺！','又大了一岁啊','来来来，吹蜡烛','快许个愿！'].randomGet();
    }
}
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
                var chat2=[' 加油>v<',' QvQ！',' QwQ..',' 我会努力哒！嘻嘻OvO'].randomGet()  
                var chat=chat+chat2;
            }
            var say=1;
            }
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(say==1){
        player.say(chat);
            }
 },
}

}
    // ---------------------------------------好运来效果------------------------------------------//   
     lib.skill._haoyunlai={
    trigger:{
        player:"drawBegin",
    },
    forced:true,
    silent:true,
    filter:function(){
        return true;
    },
    content:function(){
                	if(parseFloat(lib.config['extension_祖安武将_audio'])>='3') {
                        if(parseFloat(lib.config['extension_祖安武将_audio'])>='4') {
                    var cho=parseFloat(lib.config['extension_祖安武将_audio']);
                    if(cho=='4') {
                        var verson='shousha';
                    }else {
                        var verson='ten';
                    }
                        game.playAudio('..','extension','祖安武将','audio',verson,'draw.mp3');
                        }else {
 game.playAudio('..','extension','祖安武将','audio','lyl_draw.mp3');
}
                	}else {
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','draw.ogg');
                    }
        if(player==game.me&&lib.config['extension_祖安武将_goodluck']&&ui.cardPile.childElementCount>1){
                var chat=['羁绊一抽！获得了'+get.cnNumber(trigger.num,true)+'张牌','手气爆好！获得的'+get.cnNumber(trigger.num,true)+'张牌都是好牌！'].randomGet()
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
                var chat2=[' 开心>v<',' 耶QvQ！',' 哇QwQ..',' OvO嘻嘻',' 噢$w$'].randomGet()  
                var chat=chat+chat2;
            }
        var say=1;
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(parseFloat(lib.config['extension_祖安武将_zuan'])!='1'&&say==1) player.say(chat);
        var value=get.value(ui.cardPile.firstChild);
        var num=Math.min(20,ui.cardPile.childElementCount);
        var list=[],list2=[],list3=[];
        for(var i=1;i<num;i++){
            var val=get.value(ui.cardPile.childNodes[i]);
            if(val>value){
                list.push(ui.cardPile.childNodes[i]);
                if(val>value+1&&val>=7){
                    list2.push(ui.cardPile.childNodes[i]);
                }
                if(val>value+1&&val>=8){
                    list3.push(ui.cardPile.childNodes[i]);
                }
            }
        }
        var card;
        if(list3.length){
            card=list3.randomGet();
        }
        else if(list2.length){
            card=list2.randomGet();
        }
        else if(list.length){
            card=list.randomGet();
        }
        if(card){
            ui.cardPile.insertBefore(card,ui.cardPile.firstChild);
        }
            }else {
                var chat=['今天的幸运数字是'+get.cnNumber(trigger.num,true),'获得了'+get.cnNumber(trigger.num,true)+'张牌','手牌增加了'+get.cnNumber(trigger.num,true)+'张','yeah','没拿多吧？','听话，让我康康！','让我康康！','摸了'+get.cnNumber(trigger.num,true)+'张牌','牌库失去了'+get.cnNumber(trigger.num,true)+'张牌','手牌增加了'+get.cnNumber(trigger.num,true)+'张','摸摸摸','好爽，好爽','我数一数...摸'+get.cnNumber(trigger.num,true)+'张'].randomGet()
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
                var chat2=[' 开心>v<',' 耶QvQ！',' 哇QwQ..',' OvO嘻嘻',' 噢$w$'].randomGet()  
                var chat=chat+chat2;
            }
        var say=1;
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(parseFloat(lib.config['extension_祖安武将_zuan'])!='1'&&say==1) player.say(chat);
            }
    },
    popup:false,
     }
    lib.skill._basicjuedgeskill={
    trigger:{
        player:"judgeBefore",
    },
    locked:true,
    silent:true,
    forced:true,
    priority:-102,
    unique:true,
    filter:function(event,player){
        return (!lib.config['extension_祖安武将_goodluck'])||(player!=game.me);
    },
    content:function(){
        "step 0"
            var chat=['我判！','日子越来越有判头了..','看看判得怎么样','GKDGKD','我康康','摆脱运气好一点','啊这...'].randomGet()
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
                var chat2=[' 开心>v<',' 耶QvQ！',' 哇QwQ..',' OvO嘻嘻',' 噢$w$'].randomGet()  
                var chat=chat+chat2;
            }
        var say=1;
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(parseFloat(lib.config['extension_祖安武将_zuan'])!='1'&&say==1) player.say(chat);
    },
    }
    lib.skill._goodluckjuedgeskill={
    trigger:{
        player:"judgeBefore",
    },
    locked:true,
    silent:true,
    forced:true,
    priority:-101,
    unique:true,
    filter:function(event,player){
        return lib.config['extension_祖安武将_goodluck']&&player==game.me;
    },
    content:function(){
        "step 0"
        event.cards=get.cards(3);
        /*player.chooseCardButton(true,event.cards,'改命：选择一张牌作为你的'+trigger.judgestr+'判定结果').ai=function(button){
            if(get.attitude(player,trigger.player)>0){
                return 1+trigger.judge(button.link);
            }
            if(get.attitude(player,trigger.player)<0){
                return 1-trigger.judge(button.link);
            }
            return 0;
        };*/
        var cho=0;
        event.is=0;
        if(get.attitude(player,trigger.player)>0){
        for(i=0;i<event.cards.length;i++) {
            var val=1+trigger.judge(event.cards[i]);
            //player.chooseControl('ok').set('dialog',[val,event.cards[i]]);
            if(cho<val) {
                cho=val;
                event.is=i;
            }
        }
    }else if(get.attitude(player,trigger.player)<0){
        for(i=0;i<event.cards.length;i++) {
            var val=1-trigger.judge(event.cards[i]);
            if(cho>val) {
                cho=val;
                event.is=i;
            }
        }
    }else {
        event.is=0;
    }
    //event.finish();
    "step 1"
    event.links = event.cards[event.is];
    //event.cards.remove(event.links);
        "step 2"
        //event.cards=[event.links].concat(event.cards);
        var first = ui.cardPile.firstChild;
        var cards = event.cards;
        for (i=0;i<cards.length;i++) {
            if(i!=event.is) ui.cardPile.insertBefore(cards[i],first);
        }
        "step 3"
    var first = ui.cardPile.firstChild;
    ui.cardPile.insertBefore(event.links,first);
            var chat=['我夜观天象...','哼哼~','一切都会如我愿的','超级幸运星','神之判定！','你相信命运吗？'].randomGet()
            if(lib.config['extension_祖安武将_girlspeak']&&player.sex=='female') {
                var chat2=[' 开心>v<',' 耶QvQ！',' 哇QwQ..',' OvO嘻嘻',' 噢$w$'].randomGet()  
                var chat=chat+chat2;
            }
        var say=1;
        if (Math.random()*100>parseFloat(lib.config['extension_祖安武将_ransay'])) var say=0;
        if(parseFloat(lib.config['extension_祖安武将_zuan'])!='1'&&say==1) player.say(chat);
    },
        }
    // ---------------------------------------判定牌特效------------------------------------------//   
            if(lib.config['extension_祖安武将_bingletexiao']){
         lib.skill._bingleAddJudge={
        trigger:{
            //target:'useCardToBegin',
            player:'addJudgeAfter',
        },
        priority:-999,
        silent:true,
        forced:true,
        filter:function (event,player){
            if(parseFloat(lib.config['extension_祖安武将_newui'])==0) return false;
            var includes=['lebu','bingliang','caomu','shandian','hongshui','huoshan','fulei'];
            return includes.contains(event.card.name);
            //return event.card&&get.type(event.card)=='delay';
        },
        content:function(){   
        'step 0'       
    // ---------------------------------------【新自给特效】------------------------------------------//   
                        //var node = document.createElement('div');
        //  player.node.avatar.appendChild(node);      
                /*var tex=lib.config['extension_祖安武将_texiao']; 
                if(tex) {
                game.newalive('extension/祖安武将/effects/'+trigger.card.name+'.gif',1,lib.config.zuancoveropacity);
                    if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio',trigger.card.name+'.mp3');
                }*/
                event.translists=['none','tutou','shousha','zhounian'];
                event.newui=parseFloat(lib.config['extension_祖安武将_newui']);
                game.broadcastAll(function(player){
                    if(!player.storage.delayimg) player.storage.delayimg=[];
                    if(!player.storage.delayimg.contains(trigger.card.name)) {
                        player.storage.delayimg.push(trigger.card.name);
                        player.storage.delayimg[trigger.card.name] = document.createElement('div');
                        if(event.newui!='0') {   
                            player.storage.delayimg[trigger.card.name].setBackgroundImage('extension/祖安武将/cover/'+event.translists[event.newui]+'_'+trigger.card.name+'.png');
                        }
                        player.storage.delayimg[trigger.card.name].style.opacity=lib.config.zuancoveropacity;
                        player.storage.delayimg[trigger.card.name].style.backgroundSize='cover';
                        player.storage.delayimg[trigger.card.name].style.width='100%';
                        player.storage.delayimg[trigger.card.name].style.height='100%';
                        player.storage.delayimg[trigger.card.name].style.transform='translateY(-200px)';
                        player.node.avatar.appendChild(player.storage.delayimg[trigger.card.name]);
                        ui.refresh(player.storage.delayimg[trigger.card.name]);
                        player.storage.delayimg[trigger.card.name].style.transform='';
                    }
                },player);
                //player.addTempSkill('thunderunshow',{player:'phaseBegin'});
                event.finish();
        'step 1'
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 700);
        }*/
        },      
    }
    lib.skill._bingleLoseJudge={
        trigger:{
            player:['judgeBegin','loseAfter'],
        },
        silent:true,
        priority:-2019,
        forced:true,
        filter:function (event,player){
            if(parseFloat(lib.config['extension_祖安武将_newui'])==0) return false;
            return true;
            //return event.card&&get.type(event.card)=='delay';
        },
        content:function(){
            'step 0'
                if(!player.storage.delayimg) player.storage.delayimg=[];
                game.broadcastAll(function(player){
                    //imgs=player.node.avatar.querySelectorAll("div")
                    imgs=player.storage.delayimg;
                    for (var i=0;i<imgs.length;i++) {
                        //alert(imgs[i]);target.hasJudge(imgs[i])
                        //if(player.countCards('j',{name:imgs[i]})<1) {
                        if(!player.hasJudge(imgs[i])) {
                            player.storage.delayimg[imgs[i]].style.transform='translateY(-200px)';
                            player.storage.delayimg[imgs[i]].delete();
                            player.storage.delayimg.remove(imgs[i]);
                        }
                    }
                },player)
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 100);
        }*/
        },
    }
    lib.skill._bingleBigScreen={
        trigger:{
            target:'useCardToBegin',
            player:'judgeBegin',
        },
        silent:true,
        forced:true,
        priority:999,
        filter:function (event,player){
            var tex=lib.config['extension_祖安武将_texiao'];
            var includes=['shandian','huoshan','hongshui','fulei'];
            return tex&&event.card&&get.type(event.card)=='delay'&&includes.contains(event.card.name);
        },
        content:function(){
            game.newalive('extension/祖安武将/effects/'+trigger.card.name+'.gif',1,lib.config.zuancoveropacity);
            game.delay(1);
            if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio',trigger.card.name+'.mp3');
        },
    }
    lib.skill._bingleDying={
        trigger:{
            player:['changeHp'],
        },
        silent:true,
        priority:999,
        forced:true,
        filter:function (event,player){
            if(parseFloat(lib.config['extension_祖安武将_newui'])==0) return false;
            return true;
        },
        content:function(){
            'step 0'
                var rdying=false;
                if(player.hasSkill('zuan_hudun')) {
                    if(player.hp<=1&&player.countMark('zuan_hudun')<1) rdying=true;
                }else {
                    if(player.maxHp>1) {
                        if(player.hp<=1) rdying=true;
                    }else {
                        if(player.hp<=0) rdying=true;
                    }
                }

                if(rdying&&!player.storage.dyingimgshow) {

                    event.translists=['none','tutou','shousha','zhounian'];
                    event.newui=parseFloat(lib.config['extension_祖安武将_newui']);
                    player.storage.dyingimgshow=true;
                    game.broadcastAll(function(player){
                        player.storage.dying_img = document.createElement('div');
                        if(event.newui!='0') {   
                            player.storage.dying_img.setBackgroundImage('extension/祖安武将/cover/'+event.translists[event.newui]+'_dying.png');
                        }
                        player.storage.dying_img.style.opacity=lib.config.zuancoveropacity;
                        player.storage.dying_img.style.backgroundSize='cover';
                        player.storage.dying_img.style.width='100%';
                        player.storage.dying_img.style.height='100%';
                        player.storage.dying_img.style.transform='translateY(-200px)';
                        player.node.avatar.appendChild(player.storage.dying_img);
                        ui.refresh(player.storage.dying_img);
                        player.storage.dying_img.style.transform='';
                    },player);

                }else if(player.storage.dyingimgshow&&!rdying) {

                    player.storage.dyingimgshow=false;
                    game.broadcastAll(function(player){
                        player.storage.dying_img.style.transform='translateY(-200px)';
                        player.storage.dying_img.delete();
                    },player)

                }
        },
    }
    lib.skill._binglediecls={
        trigger:{
            player:'dieBegin',
        },
        silent:true,
        priority:2,
        forced:true,
        filter:function (event,player){
            if(parseFloat(lib.config['extension_祖安武将_newui'])==0) return false;
            return true;
        },
        content:function(){
            player.storage.delayimg=[];
            player.storage.dyingimgshow=false;
            game.broadcastAll(function(player){
                imgs=player.node.avatar.querySelectorAll("div");
                for (var i=0;i<imgs.length;i++) {
                    var img = imgs[i];
                    img.style.transform='translateY(-200px)';
                    img.delete();
                }
            },player)
        },
    }
}
                /*
         lib.skill._bingletexiaoshandian={
        trigger:{
            target:'useCardToBegin',
        },
        silent:true,
        forced:true,
        filter:function (event,player){
            return event.card&&event.card.name=='shandian';
        },
        content:function(){   
        'step 0'       
    // ---------------------------------------【闪电特效】------------------------------------------//   
                        //var node = document.createElement('div');
        //  player.node.avatar.appendChild(node);      
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
                game.newalive('extension/祖安武将/effects/thunder.gif',1,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','thunder.mp3');
}
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_shandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10shandian.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hshandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sshandian.png');      
                    }
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.backgroundSize='cover';
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('thunderunshow',{player:'phaseBegin'});
        'step 1'       
        if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 700);
        }
        },      
    }
         lib.skill._bingletexiaohuoshan={
        trigger:{
            target:'useCardToBegin',
        }, 
        silent:true,
        forced:true,
        filter:function (event,player){
            return event.card&&event.card.name=='huoshan';
        },                 
        content:function(){   
        'step 0'       
    // ---------------------------------------【火山特效】------------------------------------------//   
                        //var node = document.createElement('div');
        //  player.node.avatar.appendChild(node);      
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
                game.newalive('extension/祖安武将/effects/volcano.gif',2.5,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','huoshan.mp3');
}
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_huoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10huoshan.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhuoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shuoshan.png');      
                    }
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.backgroundSize='cover';
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('huoshanunshow',{player:'phaseBegin'});
        'step 1'       
        if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 2300);
        }
        },      
    }         
         lib.skill._bingletexiaohongshui={
        trigger:{
            target:'useCardToBegin',
        },
        silent:true,
        forced:true,
        filter:function (event,player){
            return event.card&&event.card.name=='hongshui';
        },                 
        content:function(){          
            'step 0'
    // ---------------------------------------【洪水特效】------------------------------------------//   
                        //var node = document.createElement('div');
        //  player.node.avatar.appendChild(node);      
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
                game.newalive('extension/祖安武将/effects/flood.gif',2.5,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','hongshui.mp3');
}
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_hongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10hongshui.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shongshui.png');      
                    }
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.backgroundSize='cover';
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('hongshuiunshow',{player:'phaseBegin'});
        'step 1'       
        if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 2300);
        }
        },      
    }         
         lib.skill._bingletexiaofulei={
        trigger:{
            target:'useCardToBegin',
        },
        silent:true,
        forced:true,
        filter:function (event,player){
            return event.card&&event.card.name=='fulei';
        },
        content:function(){   
        'step 0'       
    // ---------------------------------------【浮雷特效】------------------------------------------//   
                        //var node = document.createElement('div');
        //  player.node.avatar.appendChild(node);      
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
                game.newalive('extension/祖安武将/effects/fulei.gif',1,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','thunder.mp3');
}
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_fulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10fulei.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hfulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sfulei.png');      
                    }
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.backgroundSize='cover';
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('fuleiunshow',{player:'phaseBegin'});
        'step 1'       
        if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 700);
        }
        },      
    }
         lib.skill._bingletexiaole={
        trigger:{
            target:'useCardToBegin',
        },
        silent:true,
        forced:true,
        filter:function (event,player){
            return event.card&&event.card.name=='lebu';
        },                 
        content:function(){    
                        //var node = document.createElement('div');
        //  player.node.avatar.appendChild(node);             
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_lebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10lebu.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hlebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Slebu.png');      
                    }
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.backgroundSize='cover';
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
        },      
    }   
    lib.skill._bingletexiaobingliang={
        trigger:{
            target:'useCardToBegin',
        },
        silent:true,
        forced:true,
        filter:function (event,player){
            return event.card&&event.card.name=='bingliang';
        },                 
        content:function(){     
            game.broadcastAll(function(player){
                img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_bingliang.jpg');
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10bingliang.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hbingliang.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sbingliang.png');      
                    }
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.width='100%';
                img.style.height='100%';
                img.style.backgroundSize='cover';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player)
        },
    }
    lib.skill._bingletexiao={
        trigger:{
            player:'judgeAfter',
        },
        silent:true,
        priority:-2019,
        forced:true,
        content:function(){
            'step 0'
                game.broadcastAll(function(player){
                    imgs=player.node.avatar.querySelectorAll("div")
                    for (var i=0;i<imgs.length;i++) {
                        var img = imgs[i];
                        img.style.transform='translateY(-200px)';
                        img.delete();
                    }
                },player)
        if(!player.countCards('j',{name:'shandian'})&&player.hasSkill('thunderunshow')) player.removeSkill('thunderunshow');   
        if(!player.countCards('j',{name:'huoshan'})&&player.hasSkill('huoshanunshow')) player.removeSkill('huoshanunshow');      
        if(!player.countCards('j',{name:'hongshui'})&&player.hasSkill('hongshuiunshow')) player.removeSkill('huoshanunshow');    
        if(!player.countCards('j',{name:'fulei'})&&player.hasSkill('fuleiunshow')) player.removeSkill('fuleiunshow');                   
            'step 1'
            event.rdying=false;
            if(player.hasSkill('zuan_hudun')) {
                if(player.hp<=1&&player.countMark('zuan_hudun')<1) event.rdying=true;
            }else {
            if(player.maxHp>1) {
                if(player.hp<=1) event.rdying=true;
            }else {
                if(player.hp<=0) event.rdying=true;
            }
            }
            if(event.rdying) {
                player.addTempSkill('hpunshow',{player:'die'});
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_dying.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10dying.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hdying.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sdying.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'lebu'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_lebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10lebu.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hlebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Slebu.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }   
            if(player.countCards('j',{name:'bingliang'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_bingliang.jpg');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10bingliang.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hbingliang.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sbingliang.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            } 
            if(player.countCards('j',{name:'huoshan'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_huoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10huoshan.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhuoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shuoshan.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'hongshui'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_hongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10hongshui.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shongshui.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'shandian'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_shandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10shandian.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hshandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sshandian.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
        if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 100);
        }
        },
    }
    lib.skill._thundertexiao={
        trigger:{
            global:'phaseDrawBefore',
        },
        silent:true,
        priority:99,
        forced:true,
        content:function(){ 
            if(!player.hasSkill('thunderunshow')){
            if(player.countCards('j',{name:'shandian'})){
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_shandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10shandian.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hshandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sshandian.png');      
                    }
            img.style.backgroundSize='cover';
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('thunderunshow',{player:'phaseBegin'});
            }
            }
            if(!player.hasSkill('huoshanunshow')){
            if(player.countCards('j',{name:'huoshan'})){
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_huoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10huoshan.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhuoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shuoshan.png');      
                    }
            img.style.backgroundSize='cover';
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('huoshanunshow',{player:'phaseBegin'});
            }
            }
            if(!player.hasSkill('hongshuiunshow')){
            if(player.countCards('j',{name:'hongshui'})){
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_hongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10hongshui.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shongshui.png');      
                    }
            img.style.backgroundSize='cover';
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('hongshuiunshow',{player:'phaseBegin'});
            }
            }
            if(!player.hasSkill('fuleiunshow')){
            if(player.countCards('j',{name:'fulei'})){
            game.broadcastAll(function(player){
            img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_fulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10fulei.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hfulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sfulei.png');      
                    }
                img.style.backgroundSize='cover';
                img.style.opacity=lib.config.zuancoveropacity;
                img.style.width='100%';
                img.style.height='100%';
                img.style.transform='translateY(-200px)';
                player.node.avatar.appendChild(img);
                ui.refresh(img);
                img.style.transform='';
            },player);
                player.addTempSkill('fuleiunshow',{player:'phaseBegin'});
            }
            }
        },
    }
    lib.skill._clearthunder={
        trigger:{
            global:'phaseEnd',
        },
        silent:true,
        priority:99,
        forced:true,                                               
        filter:function(event,card,player){      
            return false;
        },               
        content:function(){   
            if(!player.countCards('j',{name:'shandian'})){
               player.node.avatar.setBackground(player.name,'character');   
                }
        },
    }
    lib.skill._thundertexiao2={
        trigger:{
            player:'judgeBegin',
        },
        silent:true,
        priority:-15,
        forced:true,                                  
        filter:function(event,card,player){      
            return event.card;
        },
        content:function(){
            if(get.name(trigger.card)=='shandian'){
                var tex=lib.config['extension_祖安武将_texiao'];
        if(tex) {
                game.newalive('extension/祖安武将/effects/thunder.gif',1,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','thunder.mp3');
}
            }
            if(get.name(trigger.card)=='huoshan'){
                var tex=lib.config['extension_祖安武将_texiao'];
        if(tex) {
                game.newalive('extension/祖安武将/effects/volcano.gif',2.5,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','huoshan.mp3');
}
            }
            if(get.name(trigger.card)=='hongshui'){
                var tex=lib.config['extension_祖安武将_texiao'];
        if(tex) {
                game.newalive('extension/祖安武将/effects/flood.gif',2.5,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','hongshui.mp3');
}
            }
            if(get.name(trigger.card)=='fulei'){
                var tex=lib.config['extension_祖安武将_texiao'];
        if(tex) {
                game.newalive('extension/祖安武将/effects/fulei.gif',1,lib.config.zuancoveropacity);
 if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','thunder.mp3');
}
            }
        },
    }
    lib.skill._bingletexiaochangehp={
        trigger:{
            player:["changeHp","enterGame"],
            global:"gameDrawAfter",
        },
        silent:true,
        priority:-1,
        forced:true,
        filter:function(event,player){
            var rdying=false;
            if(player.hasSkill('zuan_hudun')) {
                if(player.hp<=1&&player.countMark('zuan_hudun')<1) var rdying=true;
            }else {
            if(player.maxHp>1) {
                if(player.hp<=1) var rdying=true;
            }else {
                if(player.hp<=0) var rdying=true;
            }
            }
            return ((!rdying)&&player.hasSkill('hpunshow'))||(rdying&&!player.hasSkill('hpunshow'));
        },
        content:function(){
            'step 0'
            event.rdying=false;
            if(player.hasSkill('zuan_hudun')) {
                if(player.hp<=1&&player.countMark('zuan_hudun')<1) event.rdying=true;
            }else {
            if(player.maxHp>1) {
                if(player.hp<=1) event.rdying=true;
            }else {
                if(player.hp<=0) event.rdying=true;
            }
            }
            if ((!event.rdying)&&player.hasSkill('hpunshow')) {
                game.broadcastAll(function(player){
                    imgs=player.node.avatar.querySelectorAll("div")
                    for (var i=0;i<imgs.length;i++) {
                        var img = imgs[i];
                        img.style.transform='translateY(-200px)';
                        img.delete();
                    }
                },player)
                player.removeSkill('hpunshow');
            }           
            'step 1'
            event.rdying=false;
            if(player.hasSkill('zuan_hudun')) {
                if(player.hp<=1&&player.countMark('zuan_hudun')<1) event.rdying=true;
            }else {
            if(player.maxHp>1) {
                if(player.hp<=1) event.rdying=true;
            }else {
                if(player.hp<=0) event.rdying=true;
            }
            }
            if(event.rdying&&!player.hasSkill('hpunshow')){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_dying.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10dying.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hdying.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sdying.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
                player.addTempSkill('hpunshow',{player:'die'});
            }
            if (player.hp>1&&player.hasSkill('hpunshow')) {
        if(!player.countCards('j',{name:'shandian'})&&player.hasSkill('thunderunshow')) player.removeSkill('thunderunshow');   
        if(!player.countCards('j',{name:'huoshan'})&&player.hasSkill('huoshanunshow')) player.removeSkill('huoshanunshow');        
        if(!player.countCards('j',{name:'hongshui'})&&player.hasSkill('hongshuiunshow')) player.removeSkill('hongshuiunshow');        
        if(!player.countCards('j',{name:'fulei'})&&player.hasSkill('fuleiunshow')) player.removeSkill('fuleiunshow');        
                player.removeSkill('hpunshow');
            if(player.countCards('j',{name:'lebu'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_lebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10lebu.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hlebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Slebu.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }   
            if(player.countCards('j',{name:'bingliang'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_bingliang.jpg');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10bingliang.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hbingliang.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sbingliang.png');      
                    }
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            } 
            if(player.countCards('j',{name:'huoshan'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_huoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10huoshan.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhuoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shuoshan.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'hongshui'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_hongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10hongshui.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shongshui.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'fulei'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_fulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10fulei.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hfulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sfulei.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'shandian'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_shandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10shandian.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hshandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sshandian.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
        }
        },
    }
    lib.skill._bingletexiao1={
        trigger:{
            player:'dieBegin',
        },
        silent:true,
        priority:2,
        forced:true,                            
        content:function(){
        if(player.hasSkill('hpunshow')) player.removeSkill('hpunshow');  
        if(player.hasSkill('thunderunshow')) player.removeSkill('thunderunshow');  
        if(player.hasSkill('huoshanunshow')) player.removeSkill('huoshanunshow');        
            game.broadcastAll(function(player){
                imgs=player.node.avatar.querySelectorAll("div");
                for (var i=0;i<imgs.length;i++) {
                    var img = imgs[i];
                    img.style.transform='translateY(-200px)';
                    img.delete();
                }
            },player)
        },
    }
    lib.skill._bingletexiao2={
        trigger:{
            player:['loseEnd'],
        },
        filter:function(event,player){
            for(i=0;i<event.cards.length;i++){
                if(event.cards[i].original=='j') return true;
            }
            return false;
        },
        silent:true,
        forced:true,
        content:function(){
            'step 0'
                game.broadcastAll(function(player){
                    imgs=player.node.avatar.querySelectorAll("div")
                    for (var i=0;i<imgs.length;i++) {
                        var img = imgs[i];
                        img.style.transform='translateY(-200px)';
                        img.delete();
                    }
                },player)
        if(!player.countCards('j',{name:'shandian'})&&player.hasSkill('thunderunshow')) player.removeSkill('thunderunshow');   
        if(!player.countCards('j',{name:'huoshan'})&&player.hasSkill('huoshanunshow')) player.removeSkill('huoshanunshow');            
        if(!player.countCards('j',{name:'hongshui'})&&player.hasSkill('hongshuiunshow')) player.removeSkill('hongshuiunshow');            
        if(!player.countCards('j',{name:'fulei'})&&player.hasSkill('fuleiunshow')) player.removeSkill('fuleiunshow');                   
            'step 1'
            event.rdying=false;
            if(player.hasSkill('zuan_hudun')) {
                if(player.hp<=1&&player.countMark('zuan_hudun')<1) event.rdying=true;
            }else {
            if(player.maxHp>1) {
                if(player.hp<=1) event.rdying=true;
            }else {
                if(player.hp<=0) event.rdying=true;
            }
            }
            if(event.rdying) {
                player.addTempSkill('hpunshow',{player:'die'});
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_dying.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10dying.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hdying.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sdying.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'lebu'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_lebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10lebu.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hlebu.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Slebu.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }   
            if(player.countCards('j',{name:'bingliang'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_bingliang.jpg');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10bingliang.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hbingliang.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sbingliang.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            } 
            if(player.countCards('j',{name:'huoshan'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_huoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10huoshan.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhuoshan.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shuoshan.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'hongshui'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_hongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10hongshui.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hhongshui.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Shongshui.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'fulei'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_fulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10fulei.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hfulei.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sfulei.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
            if(player.countCards('j',{name:'shandian'})){
                game.broadcastAll(function(player){
                    img = document.createElement('div');
            if(parseFloat(lib.config['extension_祖安武将_newui'])!='0') {   
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='1') img.setBackgroundImage('extension/祖安武将/cover/cover_shandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='2') img.setBackgroundImage('extension/祖安武将/cover/cover_10shandian.png');     
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='3') img.setBackgroundImage('extension/祖安武将/cover/cover_Hshandian.png');      
            if(parseFloat(lib.config['extension_祖安武将_newui'])=='4') img.setBackgroundImage('extension/祖安武将/cover/cover_Sshandian.png');      
                    }
                    img.style.opacity=lib.config.zuancoveropacity;
                    img.style.width='100%';
                    img.style.height='100%';
                    img.style.backgroundSize='cover';
                    img.style.zIndex=window.zuancoverindex;
                    img.style.transform='translateY(-200px)';
                    player.node.avatar.appendChild(img);
                    ui.refresh(img);
                    img.style.transform='';
                },player)
            }
        },
    }  

*/      





},precontent:function (){
    // ---------------------------------------启动代码·预加载------------------------------------------//


function resize_window(long, high){
  // move the window to 0,0 (X,Y)
  window.moveTo(0, 0);
  // resize the window to 800x600
  window.resizeTo(long, high);
}
var zuancheckWH=function(width,height) {
    var widther=window.innerWidth/width;
    if(height*widther>window.innerHeight) {
        return 'width: 100%';
    }else {
        return 'height: 100%';
    }
};
        var windows=localStorage.getItem("zuanwindow");
        if(windows=="1") {
            resize_window(720, 480);
        }
        if(windows=="2") {
            resize_window(800, 600);
        }
        if(windows=="3") {
            resize_window(1280, 720);
        }
        if(windows=="4") {
            resize_window(1440, 960);
        }
        if(windows=="5") {
            resize_window(1600, 1200);
        }
        if(windows=="6") {
            resize_window(1920, 1080);
        }
        if(windows=="7") {
            resize_window(1090, 570);
        }
            if (parseFloat(lib.config['extension_祖安武将_isPC'])=='1'||windows=="7") {
            var plogo=localStorage.getItem("backgroundlogo");
            function onlinelogo(){
            window.tlogo = ui.create.node('img');
            tlogo.src= asset + 'extension/祖安武将/basic/online_logo.png';
            tlogo.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:99;width: 35%!important;height: 35%!important;left:3%;right:0;bottom: 70%';
            document.body.appendChild(tlogo);
            }
            function sanguologo(){
            window.tlogo = ui.create.node('img');
            tlogo.src= asset + 'extension/祖安武将/basic/sanguo_logo.png';
            tlogo.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:99;width: 35%!important;height: 35%!important;left:0;right:0;bottom: 70%';
            document.body.appendChild(tlogo);
            }
            function nonamelogo(){
            window.tlogo = ui.create.node('img');
            tlogo.src= asset + 'extension/祖安武将/basic/noname_logo.png';
            tlogo.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:99;width: 35%!important;height: 32%!important;left:0;right:0;bottom: 70%';
            document.body.appendChild(tlogo);
            }
            function backgroundpapers(){
            window.backgroundpaper = ui.create.node('img');
            backgroundpaper.src= asset + 'extension/祖安武将/basic/backgroundpaper.png';
            backgroundpaper.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:0;width: 100%!important;height: 79%!important;left:0;right:0;bottom: 9%';
            document.body.appendChild(backgroundpaper);
            }
            function backgroundtops(){
            window.backgroundtop = ui.create.node('img');
            backgroundtop.src= asset + 'extension/祖安武将/basic/backgroundtop.png';
            backgroundtop.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:90;width: 100%!important;height: 79%!important;left:0;right:0;bottom: 9%';
            document.body.appendChild(backgroundtop);
            }
            function backgroundtopb(){
            window.backgroundtop = ui.create.node('img');
            backgroundtop.src= asset + 'extension/祖安武将/basic/backgroundblack.png';
            backgroundtop.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 0.5;display: block;position: absolute;background:none;z-index:0;width: 100%!important;height: 70%!important;left:0;right:0;bottom: 15%';
            document.body.appendChild(backgroundtop);
            }
            function underline(opa){
            window.backunderline = ui.create.node('img');
            backunderline.src= asset + 'extension/祖安武将/basic/underline.png';
            backunderline.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: '+opa*0.05+';display: block;position: absolute;background:none;z-index:98;width: 55%!important;height: 17%!important;left: 0%;right:0;bottom: 1%';
            document.body.appendChild(backunderline);
            }
        }else {
            var plogo=localStorage.getItem("backgroundlogo");
            function onlinelogo(){
            window.tlogo = ui.create.node('img');
            tlogo.src= asset + 'extension/祖安武将/basic/online_logo.png';
            tlogo.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:99;width: 40%!important;height: 35%!important;left:5%;right:0;bottom: 65%';
            document.body.appendChild(tlogo);
            }
            function sanguologo(){
            window.tlogo = ui.create.node('img');
            tlogo.src= asset + 'extension/祖安武将/basic/sanguo_logo.png';
            tlogo.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:99;width: 40%!important;height: 35%!important;left:0;right:0;bottom: 65%';
            document.body.appendChild(tlogo);
            }
            function nonamelogo(){
            window.tlogo = ui.create.node('img');
            tlogo.src= asset + 'extension/祖安武将/basic/noname_logo.png';
            tlogo.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:99;width: 40%!important;height: 32%!important;left:0;right:0;bottom: 65%';
            document.body.appendChild(tlogo);
            }
            function backgroundpapers(){
            window.backgroundpaper = ui.create.node('img');
            backgroundpaper.src= asset + 'extension/祖安武将/basic/backgroundpaper.png';
            backgroundpaper.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:0;width: 100%!important;height: 70%!important;left:0;right:0;bottom: 14%';
            document.body.appendChild(backgroundpaper);
            }
            function backgroundtops(){
            window.backgroundtop = ui.create.node('img');
            backgroundtop.src= asset + 'extension/祖安武将/basic/backgroundtop.png';
            backgroundtop.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:90;width: 100%!important;height: 70%!important;left:0;right:0;bottom: 14%';
            document.body.appendChild(backgroundtop);
            }
            function backgroundtopb(){
            window.backgroundtop = ui.create.node('img');
            backgroundtop.src= asset + 'extension/祖安武将/basic/backgroundblack.png';
            backgroundtop.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 0.5;display: block;position: absolute;background:none;z-index:0;width: 100%!important;height: 50%!important;left:0;right:0;bottom: 25%';
            document.body.appendChild(backgroundtop);
            }
            function underline(opa){
            window.backunderline = ui.create.node('img');
            backunderline.src= asset + 'extension/祖安武将/basic/underline.png';
            backunderline.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: '+opa*0.05+';display: block;position: absolute;background:none;z-index:98;width: 55%!important;height: 16%!important;left: 0%;right:0;bottom: 2%';
            document.body.appendChild(backunderline);
            }
        }
        //开始界面
/*
                "0":"◈关闭———",
                "1":"关闭壁纸",
                "2":"◈多张———",
                "3":"原画图集",yuanhua,87
                "4":"世海壁纸",shihai,20
                "5":"羊皮画卷",yangpi,33
                "6":"◈单张———",
                "7":"青铜龙纹",qingtong
                "8":"霞光天幕",tianmu
                "9":"潭水桃花",taohua
                "10":"战火硝烟",zhanhuo
                "11":"深宫殿堂",shengong
                "12":"SCL联赛",scl
                "13":"Online",online
                    game.saveConfig('extension_祖安武将_jiemian',items);
                    localStorage.setItem("gamestartjiemian",items);
*/
            var jiemian=localStorage.getItem("gamestartjiemian");
            if(jiemian) {
                if(jiemian=="0") jiemian="1";
                if(jiemian=="2") jiemian="3";
                if(jiemian=="6") jiemian="7";
            }else{
                jiemian="1";
            }
            if(jiemian!="1") {
                var jiemianopen='no';
                if(jiemian=="3") {
                    var numsum=[];
                    for(i=1;i<88;i++) {
                        numsum.push(i);
                    }
                    jiemianopen='yuanhua/'+numsum.randomGet()+'.png';
                }
                if(jiemian=="4") {
                    var numsum=[];
                    for(i=1;i<21;i++) {
                        numsum.push(i);
                    }
                    jiemianopen='shihai/'+numsum.randomGet()+'.jpg';
                }
                if(jiemian=="5") {
                    var numsum=[];
                    for(i=1;i<34;i++) {
                        numsum.push(i);
                    }
                    jiemianopen='yangpi/'+numsum.randomGet()+'.jpg';
                }
                if(jiemian=="7") jiemianopen='qingtong.jpg';
                if(jiemian=="8") jiemianopen='tianmu.jpg';
                if(jiemian=="9") jiemianopen='taohua.jpg';
                if(jiemian=="10") jiemianopen='zhanhuo.jpg';
                if(jiemian=="11") jiemianopen='shengong.jpg';
                if(jiemian=="12") jiemianopen='scl.jpg';
                if(jiemian=="13") jiemianopen='online.png';
                //alert(jiemianopen);
                //var zuanwid=game.checkWH(zuanalivegif.width,zuanalivegif.height);
            function movebackgroundbasic(){
            window.movepaperbasic = ui.create.node('img');
            movepaperbasic.src= asset + 'extension/祖安武将/wallpaper/startgame/'+jiemianopen;
            movepaperbasic.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: 1;display: block;position: absolute;background:none;z-index:-2;width: 100%!important;height: 100%!important;left: 0;bottom: 0';
            document.body.appendChild(movepaperbasic);
            }
            function movebackground(s){
            var enlarge=0.25;
            window.movepaper = ui.create.node('img');
            movepaper.src= asset + 'extension/祖安武将/wallpaper/startgame/'+jiemianopen;
            movepaper.style.cssText='pointer-events: none;text-align: center;margin: auto;opacity: '+(0.8-s*0.02)+';display: block;position: absolute;background:none;z-index:-1;width: '+(100+s*enlarge)+'%!important;height: '+(100+s*enlarge)+'%!important;left: '+(-s*enlarge*0.5)+'%!important;bottom: '+(-s*enlarge*0.5)+'%!important';
            document.body.appendChild(movepaper);
            }
            }
            window.forunderlinefinish=false;
            function forunderlinea(a){
                if(forunderlinefinish) {
                        backunderline.remove();
                        return;
                }else {
                        underline(a);
                        if(a<1) {
                    setTimeout(function () {
                        backunderline.remove();
                        forunderlineb(0);
                    }, 200);
                        }else {
                        setTimeout(function () {
                            backunderline.remove();
                            forunderlinea(a-1);
                        }, 60); 
                        }
                    }
            }
            function forunderlineb(b){
                if(forunderlinefinish) {
                        backunderline.remove();
                        return;
                }else {
                        underline(b);
                        if(b>19) {
                    setTimeout(function () {
                        backunderline.remove();
                        forunderlinea(20);
                    }, 200);
                        }else {
                        setTimeout(function () {
                            backunderline.remove();
                            forunderlineb(b+1);
                        }, 60);  
                        }
                    }
            }
            function formovepaper(i){
                if(formovepaperfinish) {
                        movepaper.remove();
                        return;
                }else {
                movebackground(i);
                setTimeout(function () {
                movepaper.remove();
                if(i<40) {
                formovepaper(i+1);
            }else {
                formovepaper(0);
            }

                }, 50);
            }
            }
        var open=localStorage.getItem("zuanstart");
        var asset=localStorage.getItem("zuanasset");
        var happen=sessionStorage.getItem("zuanrun");
        if(open&&open!="off"&&!happen) {
            var openmp3=false;
            sessionStorage.setItem("zuanrun",'happened');
            var i=20;
            if(open.indexOf('blackgold')!=-1) {
            var mp3 = asset + 'extension/祖安武将/audio/GameStart_blackgold.mp3';
            //var mp3 = new Audio(mp3);
            //mp3.play(); //播放 mp3这个音频对象
            openmp3=true;
            }
            if(open.indexOf('goldsand')!=-1) {
            var mp3 = asset + 'extension/祖安武将/audio/GameStart_goldsand.mp3';
            //var mp3 = new Audio(mp3);
            //mp3.play(); //播放 mp3这个音频对象
            openmp3=true;
            }
            if(open.indexOf('mutouren')!=-1) {
            var mp3 = asset + 'extension/祖安武将/audio/GameStart_mutouren.mp3';
            //var mp3 = new Audio(mp3);
            //mp3.play(); //播放 mp3这个音频对象
            openmp3=true;
            }
            if(openmp3) {
            var mp3 = new Audio(mp3);
            mp3.volume=lib.config.volumn_audio/8;//mp3 的音量
            mp3.play(); //播放 mp3这个音频对象
            //暂停
            //mp3.pause();
            //mp3.load();
            }
            function send(){
            var start = ui.create.node('img');
            start.src= asset + 'extension/祖安武将/effects/GameStart/'+open+'.gif';
            start.style.cssText='text-align: center;margin: auto;opacity: '+i*0.05+';display: block;position: absolute;background:none;z-index:100;'+zuancheckWH(start.width,start.height)+'!important;left:0;right:0;top:0;bottom:0';
            document.body.appendChild(start);
            i--;
            if(i==20) {
                if(open.indexOf('mutouren')!=-1) {
                setTimeout(function () {
                    start.remove();
                    send();
                }, 3000);
            }else {
                setTimeout(function () {
                    start.remove();
                    send();
                }, 3500);
            }
            }else if(i>0) {
                setTimeout(function () {
                    start.remove();
                    send();
                }, 50);
            }else {
                start.remove();
            }
            }
            if(i==20) send();
        }
            if(plogo=="0") plogo="1";
            if(plogo=="2") plogo="3";
            if(plogo=="6") plogo="7";
            if((plogo=="3"||plogo=="4"||plogo=="5")&&!happen) {
            window.czuanbackground=true;
            forunderlinea(20);
            if(plogo=="3") {
                nonamelogo();
            backgroundtops();
            backgroundpapers();
            }
            if(plogo=="4") {
                sanguologo();
            backgroundtops();
            backgroundpapers();
            }
            if(plogo=="5") {
                onlinelogo();
            backgroundtopb();
            }
            }
            if(plogo=="7"||plogo=="8"||plogo=="9") {
            window.czuanbackground=true;
            forunderlinea(20);
            if(plogo=="7") {
                nonamelogo();
            backgroundtops();
            backgroundpapers();
            }
            if(plogo=="8") {
                sanguologo();
            backgroundtops();
            backgroundpapers();
            }
            if(plogo=="9") {
                onlinelogo();
            backgroundtopb();
            }
            }
            if(jiemian!="1"&&(!(plogo=="3"||plogo=="4"||plogo=="5")||!happen)) {
                window.formovepaperfinish=false;
                movebackgroundbasic();
                formovepaper(0);
            }


    eval(function(p,a,c,k,e,d){e=function(c){return(c<a?"":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1;};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p;}('p=5(c,6,4){e(4){0.4.o()};7.q(\'s\');7.r(5(){0.4.9.n(\'g\');d(5(){0.4.9.m(\'g\')},6*l)});7.z(6);0.2.3.f=\'\';0.2.3.8=\'\';0.2.3.k=\'\';0.2.j(c);d(5(){e(i.h.x){0.2.3.f=\'b(a)\';0.2.3.8=\'b(a)\';0.2.3.k=\'w(1.v)\'};0.4.u();0.2.j(\'A/2/\'+i.h.y+\'.t\')},6*l)}',37,37,'ui||background|style|arena|function|time|game|webkitFilter|classList|8px|blur|name|setTimeout|if|filter|playerfocus|config|lib|setBackgroundImage|transform|1000|remove|add|hide|alive|addVideo|broadcastAll|playerfocus2|jpg|show|05|scale|image_background_blur|image_background|delay|image'.split('|'),0,{}))

    var style = document.createElement('style');
                style.innerHTML = "@keyframes fairy{"
                for (var i = 1; i <= 20; i++) {
                    var rand1 = Math.floor(Math.random() * 255), rand2 = Math.floor(Math.random() * 255),
                        rand3 = Math.floor(Math.random() * 255), rand4 = Math.random();
                    style.innerHTML += i * 5 + '%{text-shadow: black 0 0 1px,rgba(' + rand1 + ', ' + rand2 + ', ' + rand3 + ', 0.6) 0 0 2px,rgba(' + rand1 + ', ' + rand2 + ', ' + rand3 + ', 0.6) 0 0 5px,rgba(' + rand1 + ', ' + rand2 + ', ' + rand3 + ', 0.6) 0 0 10px,rgba(' + rand1 + ', ' + rand2 + ', ' + rand3 + ', 0.6) 0 0 10px,rgba(' + rand1 + ', ' + rand2 + ', ' + rand3 + ', 0.6) 0 0 20px,rgba(' + rand1 + ', ' + rand2 + ', ' + rand3 + ', 0.6) 0 0 20px}';
                }
                style.innerHTML += "}";
                document.head.appendChild(style);




},help:{
    "祖安武将":"<br>更新日志>>><br><br>[2022.08.06]<li>优化了 群雄争霸 和 讨伐叛军 模式的规则和代码<li>新增7个 元气模式 天赋<li>优化了部分 标准武将增强 技能<br><br>[2022.08.04]<li>优化 攻守京城 和 讨伐叛军 主公阵亡后的效果，添加专属贴图<li>更改了部分技能的描述，新增类似“终焉技”、“陨星技”等的技能类型<li>将 魏延 替换成 徐庶，完成对标准包武将的全部强化<li>优化 大将英魂 和 标包武将增强 的替换效果，优化储存器的保留效果<li>优化部分 游戏模式 和 娱乐效果 的规则和代码，减少发生错误的概率，同时限制了使用的模式，减少可能的冲突<li>取消 开局动画关闭 对金币的要求，安装扩展后若打开富甲天下，则将金币锁定在 99999999 的数值<br><br>[2022.07.28]<li>新增12个 标准武将增强 武将，优化了体力调整的判断，调整了部分武将的技能，修复了部分脑残AI<li>修复 游戏自定义工具 的代码，减少产生错误的可能<li>优化 标准武将增强 和 自定义武将 在国战中的效果，修复技能重复的BUG<li>优化了 兵乐闪电特效 的代码，统一并简化了显示代码，极大提升了显示效果<li>增加了 兵乐闪电特效 中 草木皆兵 的贴图，修改了部分贴图，同时修复了部分的显示错误<br><br>[2022.02.18]<li>优化 界面比例设置，选择时自动调整比例<li>美化手牌栏的样式显示<li>调整部分 标准武将增强 武将<li>修复 游戏自定义工具 BOSS武将包不显示图片的BUG<li>修复 游戏自定义工具 不显示除基本势力外的角色的BUG<li>修复 游戏自定义工具 手牌显示滞留不关闭的BUG<li>优化 游戏自定义工具 ，新增替换手牌功能<br><br>[2022.02.14]<li>新增 节日快乐特效 功能，在特定的节日将展示动画<li>新增 生日庆祝，生日当天会有节日特效，并且会有特殊的开局台词<li>修复无 十周年UI 扩展情况下 手牌整理出现的BUG<li>优化 标准武将增强 功能，修复一些替换时发生的错误<li>修复部分 标准武将增强 武将的技能<br><br>[2022.02.09]<li>新增 开始界面 的美化效果<li>新增12个 标准武将增强 武将，并优化了部分武将<li>新增若干 祖安对话 台词<li>重制 开局动画 ，缩短了播放的时间<li>新增 启动动画 的播放音效<li>新增 游卡桌游 的启动动画<li>重写 动态画面特效 代码，优化播放效果，修复其导致的壁纸消失问题<li>新增 手杀 和 十周年 的卡牌音效<li>新增 富甲天下 的雪花特效设置<li>优化 10周年UI 立绘效果<li>武将回合特效 优化部分武将贴图，素材源自『桤楴』立绘资源包，特此感谢<li>修复了各 游戏模式 中部分显示的问题，优化体验<li>修改了 等级 以及 游戏模式 中主要的标记为贴图<li>完善 自定义工具 换将在双将模式下的主副武将更换<li>重写 手牌整理 代码<li>更名 羁绊一抽手气 为 天选之子模式 ，并添加提高判定的运气的功能<li>新增 窗口比例 的设置，可以调整窗口大小<br><br>[2021.08.31]<li>新增 游戏启动动画 鎏金岁月 和 至臻黑金<li>完全修复 武将回合特效 无贴图时显示错误的BUG<br><br>[2021.08.30]<li>新增 霓裳羽衣 游戏场景壁纸<li>修改了 标准武将增强 刘备的仁德技能<br><br>[2021.08.28]<li>新增 游戏启动动画 功能<br><br>[2021.08.27]<li>新增 手牌整理 功能<li>新增 海棠依旧、世海壁纸、锦绣山河 游戏场景壁纸，扩充了 梦幻壁纸 内容<li>新增 深宫殿堂、元夕之夜、苍龙夜月、破碎庙宇 菜单界面壁纸<br><br>[2021.08.26]<li>为 祖安台词 新增了一些网络梗句<li>新增 兵乐闪电覆盖特效 不透明度的调整选项<li>新增电脑端支持1280x660显示大小的兼容<li>新增 元气系统 获得技能时显示技能名称的效果<li>修改了 水墨 攻击指示特效<li>搬运了 永远的萌新 的 特效测试 中的攻击指示特效<li>新增 魔爪 和 御剑 攻击指示特效（攻击指示，原名 指示线条）<br><br>[2021.08.25]<li>优化了界面UI<li>修复了 标准武将增强 功能中断弦AI的BUG<li>修改了 标准武将增强 诸葛亮的运筹和空城、貂蝉的离魂、刘备的仁德技能<li>修复了 元气系统 不兼容电脑端的BUG，同时优化了护盾的图标显示<li>修改了 元气系统 部分天赋<li>优化了 元气系统 的天赋规则，死亡后不会清空天赋<br><br>[2021.08.20]<li>新增 标准武将增强 功能<li>优化了 战危 显示的时机（拥有护盾、体力上限为一时不显示）<li>修复 指示线条特效 在默认选项下的BUG<li>修复了一些显示BUG和一些机制BUG<li>新增部分 武将回合特效 贴图<br><br>[2021.08.09]<li>新增 指示线条特效<li>新增 砸花送蛋表情<li>修复上一个版本再次出现的壁纸丢失BUG<li>新增一张 势力风貌 神势力的壁纸<li>修复 元气系统 中天赋未出现雷盾、体力值为无限大时卡死等BUG，同时优化了一些偏弱天赋<br><br>[2021.08.03]<li>新增 手牌栏美化 功能<li>新增 武将回合开始特效<li>重新整理、添加了许多壁纸，同时降低了壁纸的大小，优化游戏流畅性（包括菜单壁纸 和 场景壁纸）<li>完成了部分电脑端的兼容<li>调整美化了拓展的界面<li>修复了所有已知的BUG<br><br>[2021.07.26]<li>新增 前置壁纸 功能<li>增加卡牌 火山 的动画特效以及角色体力值不大于一的 战危 特效<li>新增娱乐玩法 元气系统<li>减少了部分动态壁纸的体积，增加流畅度<li>优化了开始游戏时作者的LOGO动画<li>基本修复了动画特效导致动态壁纸消失的问题，优化了闪电的动画特效<br><br>[2021.07.09]<li>新增游戏场景自定义功能，可更换场上的武将、查看身份、交换位置以及查看并更换角色的手牌（供拓展作者测试武将技能的配合和AI）<li>将各模式增加体力上限和体力的方式从回复体力改为直接改变，避免触发回复体力获得经验的BUG<li>减少了娱乐模式中躯干技能显示的频率<br><br>[2020.06.21]<li>新增并完善祖安对话内容<li>增加女武将专属卖萌对话内容（做这个真的头疼）<li>新增升级提示播报关闭按钮<li>增加娱乐玩法暗夜鬼城<li>新增兵乐闪电特效10周年UI长边的适配版及其优化美化版<li>尽量修复动画特效等不明原因关闭动态壁纸的BUG（但是衔接问题仍然摸不着头脑）<li>增加 势力风貌 壁纸和 新杀春日 壁纸（新杀壁纸搬运自 无名杀爱好者交流群II 未经上传者同意，请上传联系我并给我来一拳）<br><br>[2021.06.19]<li>放假，从监狱中解放出来<li>计划继续更新本拓展<br><br>[2020.03.25]<li>平衡娱乐模式的强度（可在界面处关闭）<li>增加祖安词库<li>即将公开发布本拓展<br><br>[2020.03.19]<li>新增暗杀行动模式<li>使界面的横线框长度兼容<li>即将公开发布本拓展<br><br>[2020.03.18]<li>新增同将之争效果<li>修复7级时计算距离-1增益失效问题<br><br>[2020.03.15]<li>大将英魂移至娱乐玩法<li>新增群侠论武效果<li>新增桃花落尽效果<br><br>[2020.03.14]<li>新增大将英魂模式<br><br>[2020.03.13]<li>平衡各模式的强度<li>增加祖安语音和卡牌音效<li>在贴吧发布第二版内测<br><br>[2020.03.09]<li>完善界面UI<li>在贴吧发布第一版内测<br><br>[2020.03.07]<li>完成界面基本UI以及按钮<li>加入动态皮肤<li>新增模式雷鸣山谷<li>开始处理后期细节<li>制作动画特效等<br><br>[2020.03.10]<li>新增幻海之诗模式<li>填写更新日志<br><br>[2020.03.09]<li>完善界面UI<li>在贴吧发布第一版内测<br><br>[2020.03.07]<li>完成界面基本UI以及按钮<li>加入动态皮肤<li>新增模式雷鸣山谷<li>开始处理后期细节<li>制作动画特效等<br><br>[2020.03.06]<li>拓展玩法完成<li>基本架构完成，<li>所有目前已知的BUG修复<li>开始在贴吧预告<br><br>[2020.03.04]<li>等级模式完成<li>开始设计拓展玩法<br><br>[2020.03.03]<li>台词功能完成<li>填入互动台词<li>完成兵乐闪电特效<li>开始设计等级模式<br><br>[2020.02.29]<li>开始设计祖安拓展<li>逐步完成台词功能",
    "幻海之诗":"꧁幻 海 之 诗꧂<br><br>.   我的小鱼你醒了<br>.   还认识早晨吗<br>.   昨夜你曾经说<br>.   愿夜幕永不开启<br>.   你的香腮边轻轻滑落的<br>.   是你的泪，还是我的泪<br>.   初吻吻别的那个季节<br>.   不是已经哭过了吗<br>.   我的指尖还记忆着<br>.   你慌乱的心跳<br>.   温润的体香里<br>.   那一绺长发飘飘<br><br>.   ……",
    "元气天赋":"—————————————<br>.  - 元 气 天 赋 大 全 -<br>—————————————<li>天赋库 数量：42<br><br>〖蓝盾〗<li>你的护盾消失后，你免疫多余的伤害，并且直到下回合开始，你免疫一次伤害。<br><br>〖火盾〗<li>当你即将受到火属性的伤害时，你免疫此伤害。<br><br>〖毒盾〗<li>当你即将受【毒】影响或流失体力时，你免疫此【毒】或体力流失。<br><br>〖刺盾〗<li>当受到与你距离不大于一的角色除【杀】外造成，或没有来源的伤害时，你防止此伤害。<br><br>〖血盾〗<li>你获得一点体力上限，并回复一点体力。（当你失去此天赋时，你减少一点体力上限）<br><br>〖护盾〗<li>你获得一点护盾上限，并恢复一点护盾。（当你失去此天赋时，你减少一点护盾上限）<br><br>〖碎盾〗<li>当你的护盾受到攻击后，伤害来源弃一张牌，本回合内你不能再受到伤害。<br><br>〖紫手〗<li>当一名其他角色使用【杀】指定你为目标时，其需弃置一张手牌，否则此【杀】对你无效。<br><br>〖药水〗<li>当你对自己使用【桃】时，你令此【桃】能额外回复一点体力。<br><br>〖吸蓝〗<li>你的回合内，当有一名其他角色进入濒死状态时，你摸一张牌。<br><br>〖吸血〗<li>每当你造成一点伤害后，你可进行一次判定：若为红桃，你回复一点体力。<br><br>〖蓄力〗<li>回合结束阶段，若你于本回合的出牌阶段内没有过使用或打出过【杀】，则你摸两张牌。<br><br>〖霰弹〗<li>当你使用一张【杀】指定一名角色作为目标后，你可为此【杀】额外指定一个目标。<br><br>〖瞄准〗<li>每当你使用【杀】指定目标后，你进行判定：若为黑色，则此【杀】不可被闪避。<br><br>〖激光〗<li>当你即将对一名角色造成无属性伤害时，你令此伤害变为雷属性，你造成雷属性伤害时令目标弃置一张牌。<br><br>〖折射〗<li>每回合限一次，当你的【杀】被闪避后，你可为此【杀】指定另一个目标。<br><br>〖元素〗<li>你造成属性伤害时进行一次判定：若结果为黑色，你令此伤害加一。<br><br>〖穿透〗<li>你无视场上所有其他角色的防具，所有其他角色的防具对你无法产生效果。<br><br>〖防御〗<li>你最多只能受到一点伤害，最多只能流失一点体力。<br><br>〖修盾〗<li>你每回合开始时恢复护盾，不受到恢复的条件限制。<br><br>〖选择〗<li>当你在选择天赋的过程中，你可额外增加两个可选择的选项。<br><br>〖遗忘〗<li>你选择遗忘并且删除一个天赋，你的下个回合开始时你可重新选择一次天赋。<br><br>〖商店〗<li>你的摸牌阶段开始时，你令你摸牌的数量增加一张。<br><br>〖冰盾〗<li>你的武将牌始终正面向上，你移除你的判定区。（失去此天赋后你恢复判定区）<br><br>〖近战〗<li>当你与其他角色计算距离时，你令你与该角色计算的距离减少一。<br><br>〖冷却〗<li>每个角色的回合内，你的限定次数的技能可以多使用一次。<br><br>〖能量〗<li>你的弃牌阶段开始时，你的手牌上限增加三张。<br><br>〖速击〗<li>你的出牌阶段内，你可使用【杀】的次数上限加一。<br><br>〖雷盾〗<li>当你即将受到雷属性的伤害时，你免疫此伤害。<br><br>〖真伤〗<li>你即将造成伤害时，你令你造成的伤害无视伤害目标的护盾。<br><br>〖强化〗<li>出牌阶段，你可以展示一张未强化过的标准包/军争包/SP包中的防具牌，对其进行强化。<br><br>〖血箱〗<li>当你的手牌或装备牌中存在红桃牌时，你可以将其当做【桃】使用。<br><br>〖反弹〗<li>当你使用【闪】闪避了一名角色对你使用的【杀】后，你视为对其使用此【杀】。<br><br>〖逃逸〗<li>当你与其他角色计算距离时，你令该角色与你计算的距离增加一。<br><br>〖雕像〗<li>你视为拥有当前的主公技，若场上没有主公，则其他同势力角色可在其回合内交给你牌。<br><br>〖双武〗<li>当你失去装备区的武器牌时，你保留该武器的技能直到你失去下一张武器牌。<br><br>〖宠物〗<li>当你即将受到伤害时，你区域内的坐骑牌会替你抵挡等量的伤害。<br><br>〖归盾〗<li>当你的护盾受到伤害后，你获得等伤害的量的牌。<br><br>〖嗜血〗<li>当你受到伤害后，直到你的下回合结束，你的【杀】不可被闪避。<br><br>〖狂暴〗<li>每当你的【杀】造成一点伤害后，你摸一张牌。<br><br>〖炸弹〗<li>当一名角色死亡时，你可以立即令一名其他角色受到随机一至两点火焰伤害。<br><br>〖金盾〗<li>你每有两张手牌时，你的护盾上限增加一。（最多增加三点）"
},config:{
    // ---------------------------------------按钮开关------------------------------------------//
    "informknow":{
        "name":"◈ <span class=\"texiaotext\" style=\"color:#C0C0C0\">长按以获取详情或彩蛋</span>",
        "init":"0","intro":"你长按下面的选项，不是长按我..<br>⚆_⚆ Okay?",
        "item":{
            "0":" ",
            "1":"你有在听课嘛同学？<br>是长按不是点击啊<br>(ー_ー)!!"
            }
        },
        "about1":{
            "name":"———————————",
            "init":"1",
            "intro":"我只是一条线，你点我干嘛？ →_→",
            "item":{
                "1":"———————————"
            }
        },
        "about2":{
            //"name":".       <span class=\"goldtext\" style=\"color:#DAA520\">祖</span> <span class=\"exttext\" style=\"color:#7FFFAA\">安</span> <span class=\"yellowtext\" style=\"color:#FFFF00\">武</span> <span class=\"fuhuotext\" style=\"color:#87CEFA\">将</span>",
            "name":"<img style=width:238px;opacity:0.9 src="+lib.assetURL+"extension/祖安武将/basic/title.png>",
            "init":"1",
            "intro":"标题党？<br>_(´ཀ`」 ∠)__ ",
            "item":{
                "1":" "
            }
        },
        "blank1":{
            "name":" ",
            "init":"1",
            "intro":"标题党？<br>_(´ཀ`」 ∠)__ ",
            "item":{
                "1":" "
            }
        },
        "blank2":{
            "name":" ",
            "init":"1",
            "intro":"标题党？<br>_(´ཀ`」 ∠)__ ",
            "item":{
                "1":" "
            }
        },
        /*"huisheng":{
            //"name":".       <span class=\"goldtext\" style=\"color:#DAA520\">祖</span> <span class=\"exttext\" style=\"color:#7FFFAA\">安</span> <span class=\"yellowtext\" style=\"color:#FFFF00\">武</span> <span class=\"fuhuotext\" style=\"color:#87CEFA\">将</span>",
            "name":"<img style=width:238px;opacity:0.9 src="+lib.assetURL+"extension/祖安武将/basic/huisheng.png>",
            "init":"1",
            "intro":"快来加群(✿≖◡≖)✧",
            "item":{
                "1":" "
            }
        },*/
        "Myfriend":{
            "name":"<img style=width:238px;opacity:0.9 src="+lib.assetURL+"extension/祖安武将/basic/myfriend.png>",
            "init":"1",
            "intro":"感谢好友 梦寻千古鹿原雪（世中人） 的鼎力相助，听我说靴靴你，因为有你，温暖了司机...<br>( *ˊᵕˋ)✩︎‧₊",
            "item":{
                "1":" "
            }
        },
        "about3":{
            "name":".      <span class=\"texiaotext\" style=\"color:#C0C0C0\">[点击查看说明]</span>",
            "init":"1",
            "intro":"这个让你点击你反而长按了是怎么回事。。<br>-_-||",
            "item":{
                "1":" ",
                "2":"<span style=\"animation: -webkit-animation:fairy 20s infinite;animation:fairy 20s infinite;\">最近更新日期： 2022.08.04</span>",
                "3":"[在“帮助”处查看更新日志]",
                "4":" ",
                "5":"<span class=\"playext\" style=\"color:#87CEFA\">规则介绍 > > > </span><br><br><span class=\"playext\" style=\"color:#4169E1\">[等级模式]</span><li>初始等级为1级；<li>每回合开始获得3点经验；<li>每回合限三次，使用一张手牌获得2点经验；<li>每造成一点伤害获得7点经验；<li>每回复一点体力后获得已失体力值加一*2点经验；<li>每击杀一名角色获得25点经验；<li>每个等级升级所需经验：等级*2+20点；<li>每提升一级摸一张牌<span class=\"balancetext\" style=\"color:#C0C0C0\">（取消摸牌效果）</span>。<br><br><span class=\"playext\" style=\"color:#4169E1\">[等级奖励]</span><li><span class=\"playext\" style=\"color:#87CEFA\">新规则 ></span><br>  三级：手牌上限+1；<br>  四级：【杀】的使用范围+1；<br>  五级：【杀】的使用次数+1；<br>  六级：防御距离+1；<br>  七级：进攻距离+1；<br>  八级：体力上限+1；<br>  九级：摸牌阶段摸牌数+1；<br>  十级：出牌阶段限两次，可将两张手牌当一张基本牌使用。<li><span class=\"playext\" style=\"color:#87CEFA\">旧规则 ></span><br>  三级：手牌上限+1；<br>  四级：获得一点护甲；<br>  五级：【杀】的使用次数+1；<br>  六级：手牌上限+1；<br>  七级：攻击距离+1；<br>  八级：获得一点体力上限；<br>  九级：摸牌阶段额外摸一张牌；<br>  十级：出牌阶段限两次，可将两张手牌当一张基本牌使用。<br><br><span class=\"playext\" style=\"color:#4169E1\">[复活效果]</span><li>武将死亡后将于 等级*0.4+0.1（向上取整） 个回合后复活；<li>复活后手牌摸至X张。（X为角色等级*0.5向上取整）",
                "6":" ",
                "7":"<span class=\"playext\" style=\"color:#90EE90\">拓展玩法 > > > </span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[普通模式]</span><li>无任何特殊效果的普通战役。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉<br></span><br><span class=\"playext\" style=\"color:#00FF7F\">[攻守京城]</span><li>角色拥有复活效果；<li>主公死亡后出现 京城 ；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">游戏开始时内奸重新平均分配忠臣和反贼的身份（优先反贼）</span>；<li>京城的初始体力值为游戏开始时反贼的数量*8；<li>所有角色与京城计算距离时视为一；<li>京城没有手牌和装备牌，受到伤害视为流失体力，受到【杀】造成的伤害翻倍，且不能回复体力；<li>京城不能成为除闪电、火山、洪水和浮雷外延时锦囊牌的目标；<li>京城需要两张【闪】才能抵消【杀】，其他非反贼角色可替京城打出【闪】；<li>京城的回合改为随机令场上任意一名反贼打出一张【闪】，或受到一点伤害，<span class=\"balancetext\" style=\"color:#C0C0C0\">以此法造成X点伤害（X为场上存活的忠臣的数量）</span>；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">在主公或忠臣的回合，非濒死的反贼不能使用【桃】</span>；<li>反贼击杀主公后，击杀者摸三张牌；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">当有一名反贼死亡后，随机一名其他已死亡的反贼复活延迟一个回合</span>；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">当有一名忠臣死亡后，若主公为死亡，其失去一点体力</span>；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">所有角色每死亡两次延长一个回合的复活时间，最多5个回合</span>；<li>京城或所有反贼死亡后游戏结束。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈身份模式可用〉</span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[群雄争霸]</span><li>游戏开始时主公称为 霸主 ，其他角色均改为反贼，称为 群雄 ；<li>霸主 的回合内，所有的其他角色非濒死时不能使用【桃】；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">场上所有角色直接的距离均视为一</span>；<li>霸主 回合开始时摸两张牌，手牌上限+2<span class=\"balancetext\" style=\"color:#C0C0C0\">（取消此效果）</span>；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">其他角色的摸牌阶段摸牌时，霸主 摸等量张牌，其他角色弃牌阶段弃牌时，霸主 随机弃等量张手牌</span>；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">霸主 每杀死一名其他角色，胜利推进一个轮数</span>；<li>霸主 不会被无来源的伤害杀死，霸主被击杀后，将身份转移到击杀者身上，且使场上不为 霸主 的角色各流失一点体力，并加速复活效果一个回合；<li>每个 霸主 出现后开始计算，五轮后直接获得胜利。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈身份模式可用〉</span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[讨伐叛军]</span><li>角色拥有复活效果；<li>游戏开始时主公称为 官府 ，忠臣和内奸称为 官兵 ，主公和忠臣属于官府阵营，反贼称为 叛军 ，属于叛军阵营；<li>所有角色受到火焰伤害时需弃置一张牌，每名角色回合开始时进行一次判定：若结果为红桃，则受到来自 官府 的一点火焰伤害<span class=\"balancetext\" style=\"color:#C0C0C0\">（此技能改为所有角色受到火焰伤害时随机弃置一张牌，每轮开始时，若场上所有角色的判定区内没有【火山】，则将一张【火山】随机置入一名角色的判定区内）</span>；<li>叛军，忠臣身份的 官兵 死亡后，增加敌对阵营一点势力，官府死亡后增加敌对阵营两点势力；<li>先到达10点势力的阵营胜利（或反贼和内奸全部死亡后官府阵营胜利）；<li>叛军 被击杀后没有原模式中相应的摸牌奖励；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">当最后一个 叛军 即将阵亡时，强行随机复活一个已阵亡的叛军</span>；<li>击杀内奸身份的 官兵 后，击杀者<span class=\"balancetext\" style=\"color:#C0C0C0\">增加一点护甲，</span>获得Buff效果：持续三回合，摸牌阶段额外摸一张牌，限一次，对一名角色造成一点火焰伤害；<li>所有角色非濒死时回复的体力改为摸等量的牌。<span class=\"balancetext\" style=\"color:#C0C0C0\">（此技能改为所有角色非脱离濒死回复的每一点体力前需进行判定：若结果为红桃或武将牌上“桃”标记存在的花色，则可回复体力并弃置所有的“桃”；否则回复体力失效，将判定牌置于武将牌上，称为“桃”）<span class=\"playext\" style=\"color:#87CEFA\"><br>〈身份模式可用〉</span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[天下归心]</span><li>游戏开始时，主公称为 汉高祖 ，其他所有角色改为反贼且称为 楚军 ；<li>主公额外获得一点体力上限，摸牌阶段额外摸两张牌，手牌上限始终为体力上限+2<span class=\"balancetext\" style=\"color:#C0C0C0\">（额外摸牌和手牌上限改为+X，X为楚军的数量）</span>；<li>主公初始拥有一枚人心标记，主公造成伤害时，受伤者若为 楚军 ，则有一定概率（该概率为 楚军数量/全场角色数）使 楚军 变为忠臣并移除一枚人心标记，称之为 汉军 ；<li>最后一名 楚军 不会被改变阵营；<li>每有一名其他角色死亡，主公回复一点体力并获得一枚人心标记<span class=\"balancetext\" style=\"color:#C0C0C0\">（若死亡的角色不为楚军，你无法获得人心标记）</span>。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉</span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[雷鸣山谷]</span><li>游戏开始时所有角色体力翻倍；<li>游戏开始时所有的【反馈】和【鬼才】技能均替换为【天妒】；<li>每名角色的回合开始时，若其判定区没有“闪电”，则置入一张“闪电”；<li>每名角色在4级时，随机获得【红颜】，【连环】，【天妒】中的一个；<li>每名角色在8级时，随机获得【观星】，【看破】和【鬼才】中的一个；<li>所有获得的技能不会重复。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉</span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[幻海之诗]</span><li>游戏开始时所有角色失去所有技能并将体力以及上限调整为4点；<li>主公的回合开始时进行一次判定，若为方块则所有角色所有技能失效直到下一轮开始；<span class=\"balancetext\" style=\"color:#C0C0C0\">（改为摸一张牌并投掷一枚骰子，场上所有角色区域内与该数字相等的牌全部进入弃牌堆，若数字为6则所有角色所有技能失效直到下一轮开始）</span><li>主公的回合开始时所有角色随机调整一次位置；<li>角色每提升到奇数等级时随机获得相同势力中一名角色的一个技能，不会重复。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈身份单将可用〉</span><br><br><span class=\"playext\" style=\"color:#00FF7F\">[暗杀行动]</span><li>游戏开始时，所有的反贼变为忠臣，内奸变为刺客，所有身份均不展示；<li><span class=\"balancetext\" style=\"color:#C0C0C0\">降低AI的嘲讽度，降低伤亡速度</span>；<li>游戏开始的第二个回合夜幕降临：只要刺客存在，主公的每个回合结束都会有一名忠臣死亡；<li>当所有忠臣死亡时，刺客身份暴露，此时夜幕消逝；<li>夜幕消逝后的第三个回合，夜幕将再次降临：若主公仍未能杀死刺客，则主公于回合结束时死亡，刺客胜利；<li>刺客的举动会和其他忠臣有微小差别，细心观察可以识破；<li>本模式建议关闭自动标记身份。（当然，打开后也不一定会暴露刺客的身份）<span class=\"playext\" style=\"color:#87CEFA\"><br>〈身份模式可用〉</span>",
                "8":" ",
                "9":"<span class=\"playext\" style=\"color:#FFFFE0\">娱乐玩法 > > > </span><br><br><span class=\"playext\" style=\"color:#FFFF00\">[大将英魂]</span><li>每名角色在游戏开始时在标准包武将中选择一名武将作为“将魂”；<li>在每名角色的出牌阶段，其可以将武将在原武将和“将魂”直接转换，冷却时间为一回合；（在 攻守京城、群雄争霸、讨伐叛军 模式中冷却时间改为2回合）<li>转换武将时，武将解除负面效果；<li>原武将和“将魂”之间的装备分别独立，体力按比例转换（向上取整）；<li>当角色濒死时，可以移除其将魂转换技能还原其武将牌并使体力值回复至3点，然后摸3张牌。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈单将模式可用〉</span><br><br><span class=\"playext\" style=\"color:#FFFF00\">[群侠论武]</span><li>所有角色拥有技能【极武】<li>【极武】：当你被【杀】指定为目标时，你可以立即使用一张【杀】，若你的【杀】造成伤害，则指定你的【杀】无效。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉</span><br><br><span class=\"playext\" style=\"color:#FFFF00\">[桃花尽落]</span><li>锁定技，所有角色非濒死不能使用【桃】，可以重铸【桃】。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉</span><br><br><span class=\"playext\" style=\"color:#FFFF00\">[同将之争]</span><li>所有角色变为玩家选择的角色。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉</span><br><br><span class=\"playext\" style=\"color:#FFFF00\">[暗夜鬼城]</span><li>主公的回合结束后，若场上有已死亡的角色，场上所有角色翻面，游戏随机将已死亡的角色变成“鬼”加入游戏；<li>所有的“鬼”不能成为卡牌的目标，不在计算距离内，初始时有四张手牌并且满血，回合结束后离开游戏<span class=\"playext\" style=\"color:#87CEFA\"><br>〈身份模式可用〉</span><br><br><span class=\"playext\" style=\"color:#FFFF00\">[元气系统]</span><li>此玩法的机制改自手游《元气骑士》；<li>所有玩家将体力值按任意比例转化成护盾值；<li>护盾与体力值系统分离，不受到有关体力值技能或卡牌的影响（除【铁索连环】外）；<li>所有护盾值不为满的角色在回合开始时，若其和其护盾从上个同样阶段到现在没有受到过伤害或流失体力，其恢复一点护盾（不能超过护盾上限）；<li>游戏中每名角色的第一个回合开始时，其可选择并获得一个天赋，此后每2轮的回合开始时可再选择并获得一个天赋（天赋数量不能超过6个，在 攻守京城、群雄争霸、讨伐叛军 模式中改为每3轮）；<li>天赋的选项将从天赋库中随机选取三项供角色选择；<li>若该角色在规定的轮数内未获得天赋，则在下一个回合的开始时可再次进行选择获得天赋；<li>天赋的详细内容列表请在“帮助”处进行查看。<span class=\"playext\" style=\"color:#87CEFA\"><br>〈所有模式可用〉</span>",
                "10":"<br><br><br><br><br><br><br><br><br>"
            }
        },
        "about4":{
            "name":"———————————",
            "init":"1",
            "intro":"不是，你点我有什么意义？←_←",
            "item":{
                "1":"———————————"
            }
        },
        "linea":{
            "name":"<li>关于模式----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "mode":{
            "name":"<span class=\"modetext\" style=\"color: #DAA520\">游戏模式</span>选择",
            "init":"1",
            "intro":"详情请查看游戏说明",
            "item":{
                "1":"普通模式",
                "2":"攻守京城",
                "3":"群雄争霸",
                "4":"讨伐叛军",
                "5":"天下归心",
                "6":"雷鸣山谷",
                "7":"幻海之诗",
                "8":"暗杀行动"
            }
        },
        "fun":{
            "name":"<span class=\"modetext\" style=\"color: #FFFFE0\">娱乐玩法</span>选择",
            "init":"1",
            "intro":"详情请查看游戏说明",
            "item":{
                "1":"关闭效果",
                "2":"大将英魂",
                "3":"群侠论剑",
                "4":"桃花落尽",
                "5":"同将之争",
                "6":"暗夜鬼城",
                "7":"元气系统"
            }
        },
        "goodluck":{
            "name":"<span class=\"goodlucktext\" style=\"color: #FF00FF\">天选之子</span>模式",
            "intro":"能一定程度提高你摸到好的牌、以及判定如愿的几率<li>无敌幸运星！",
            "init":false
        },
        "washhandcard": {
            "name": "<span class=\"goodlucktext\" style=\"color: #FF00FF\">手牌整理</span>开启",
            "init": "close",
            "intro": "开启后，手牌将按类型、花色、点数和属性分类整理<li>现此功能搬运自 手杀UI ，特此感谢！<li>原版的此功能搬运自 永远的萌新 的 特效测试（因原作者不同意，且代码在新版中已失效，所以放弃该部分的代码，而改用新的代码实现）",
            "item": {
                "close": "关闭",
                "auto": "自动",
                "user": "手动",
            },
        },
        "levelstrong":{
            "name":"<span class=\"goodlucktext\" style=\"color: #87CEFA\">等级奖励</span>开启",
            "intro":"每升到一定等级会获得相应强化<li>但是每次升级的摸牌是不会消失的！",
            "init":"new",
            "item":{
                "off":"关闭",
                "old":"旧规则",
                "new":"新规则"
            }
        },
        "upspeed":{
            "name":"<span class=\"upspeedtext\" style=\"color:#87CEFA\">等级提升</span>速度",
            "init":"10",
            "intro":"改变等级提升的速度<br>拓展玩法均要求打开等级模式哦~",
            "item":{
                "0":"关闭",
                "3":"30%",
                "5":"50%",
                "7":"70%",
                "10":"100%",
                "15":"150%",
                "20":"200%"
            }
        },
        "relife":{
            "name":"<span class=\"ransaytext\" style=\"color:#87CEFA\">复活时长</span>设置",
            "init":"100",
            "intro":"改变复活间隔的回合<li>设置 固定 选项则为隔3回合复活",
            "item":{
                "0":"固定",
                "50":"50%",
                "100":"100%",
                "150":"150%"
            }
        },
        "balance":{
            "name":"<span class=\"balancetext\" style=\"color:#C0C0C0\">游戏模式平衡</span>",
            "intro":"平衡后，娱乐模式的对立阵营游戏难度平衡<li>打开后介绍里灰暗的描述效果生效",
            "init":true
        },
        "lineb":{
            "name":"<li>关于特效----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "bingletexiao":{
            "name":"<span class=\"texiaotext\" style=\"color:#00FF00\">兵乐闪电</span>特效",
            "intro":"标包、军争、SP包、运筹帷幄卡牌包中大部分判定牌的覆盖特效，以及武将濒死时 战危 的特效<li>目前包含有：【乐不思蜀】、【兵粮寸断】、【闪电】、【浮雷】、【洪水】、【火山】以及武将体力值不大于一时的情况有特效",
            "init":true
        },
        "texiao":{
            "name":"<span class=\"texiaotext\" style=\"color:#00FF00\">动态画面</span>特效",
            "intro":"某些特定时机会触发动画特效，有可能会卡<li>卡牌特效包含有：【闪电】、【浮雷】、【洪水】、【火山】的特效<li>游戏模式 也有相应的动画特效<li>低配机建议关闭",
            "init":true
        },
        "zuancoveropacity":{
            "name":"<span class=\"texiaotext\" style=\"color:#00FF00\">不透明度</span>设置",
            "init":"8",
            "intro":"设置 兵乐闪电覆盖特效、以及动态画面特效 的不透明度<li>选择较低的不透明度可有效避免武将牌被阻挡",
            "item":{
                "3":"30%",
                "4":"40%",
                "5":"50%",
                "6":"60%",
                "7":"70%",
                "8":"80%",
                "9":"90%",
                "10":"100%"
            }
        },
        "huihe":{
            "name":"<span class=\"huihetext\" style=\"color:#7FFFAA\">武将回合</span>特效",
            "init":"7",
            "intro":"武将的回合开始时出现贴图特效<li>选择 关闭 则不会出现此特效<li>选择其他百分比选项则控制该特效的不透明度",
            "item":{
                "0":"关闭",
                "3":"30%",
                "4":"40%",
                "5":"50%",
                "6":"60%",
                "7":"70%",
                "8":"80%",
                "9":"90%",
                "10":"100%"
            }
        },
        "huiheopa":{
            "name":"<span class=\"huihetext\" style=\"color:#7FFFAA\">回合特效</span>调整",
            "init":"10",
            "intro":"武将回合特效幅度的调整<li>选择的百分比越高，特效的幅度越大，占用时长也会相应越多",
            "item":{
                "8":"80%",
                "10":"100%",
                "12":"120%",
                "15":"150%",
                "20":"200%",
                "25":"250%"
            }
        },
        "fujiaset":{
            "name":"<span class=\"ransaytext\" style=\"color:#00FFFF\">雪花特效</span>设置",
            "init":"0",
            "intro":"设置游戏 默认下雪 特效<li>需要打开 富甲天下 扩展",
            "item":{
                "0":"关闭",
                "1":"小雪",
                "2":"大雪"
            },
            onclick:function(item){
                if(lib.config.plays.contains('coin')) {
                game.saveConfig('extension_祖安武将_fujiaset',item);
                if(item=='0') {
                    game.haveFun.snowStop();
                    game.saveConfig('snowFall',false);
                }else {
                    if(item=='1'&&game.haveFun.list.snow.size=='large') {
                        game.haveFun.snowSize();
                    }else if(item=='2'&&game.haveFun.list.snow.size=='small') {
                        game.haveFun.snowSize();
                    }
                    game.haveFun.snow();
                    game.saveConfig('snowFall',true);
                }
            }else {
                game.saveConfig('extension_祖安武将_fujiaset','0');
            }
            }
        },
        "newui":{
            "name":"<span class=\"texiaotext\" style=\"color:#FFFF00\">10</span><span class=\"texiaotext\" style=\"color:#FF4500\">周年</span>UI立绘",
            "intro":"兵乐闪电覆盖特效的长宽大小配合 10周年 拓展的立绘<li>原版 选项为无名杀自带的武将牌矮宽比利适配<li>秃头 选项为10周年UI露头皮肤适配<li>手杀 选项为手杀的武将牌边框窄长比例适配<li>十周年 选项为十周年的武将牌边框窄长比例适配<br>秃头 、 手杀 和 十周年 的贴图均经过美工优化",
            "init":"3",
            "item":{
                //"1":"原版",
                "1":"露头",
                "2":"手杀",
                "3":"十周年"
            }
        },
        "helasisy":{
            "name":"<span class=\"texiaotext\" style=\"color:#C0C0C0\">关闭开局动画</span>",
            "intro":"取消烦人的开局动画（现已不作金币要求•ᴗ•）",
            "init":false
        },
        "linec":{
            "name":"<li>关于美化----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "startgame": {
            "name": "<span class=\"zuantext\" style=\"color:#FFFF00\">启动动画</span>设置",
            "init":lib.config.zuanstartgame === undefined ? 'off':lib.config.zuanstartgame,
            "intro": "特此感谢<span style=\"animation: -webkit-animation:fairy 20s infinite;animation:fairy 20s infinite;\">文和</span>大佬为启动动画制作提供的帮助！<li>开启后，每次打开无名杀都会出现启动动画，使无名杀更具有手游的体验感",
            "item": {
                "next_off":"◈不开启———",
                "off": "关闭画面",
                "next_noname_goldsand":"◈无名杀———",
                //"noname_basic": "经典版本",
                "noname_goldsand": "鎏金岁月",
                "noname_blackgold": "至臻黑金",
                "next_sanguo_goldsand":"◈三国杀———",
                //"sanguo_basic": "经典版本",
                "sanguo_goldsand": "鎏金岁月",
                "sanguo_blackgold": "至臻黑金",
                "next_welcome_mutouren":"◈Online———",
                "welcome_mutouren": "游卡桌游"
            },
            onclick:function(item){
                    var items=item;
                    if(items.indexOf('next_')!=-1) {
                        lib.config['extension_祖安武将_startgame']=items.slice(5);
                    }
                    game.saveConfig('extension_祖安武将_startgame',items);
                    game.saveConfig('zuanstartgame',items);
                    localStorage.setItem("zuanstart",items);
                    localStorage.setItem("zuanasset",lib.assetURL);
            }
        },
        "jiemian":{
            "name":"<span class=\"wallpapertext\" style=\"color:#FFFFE0\">开始界面</span>壁纸",
            "init":"1",
            "intro":"控制无名杀启动后开始界面的壁纸<li>均为单张壁纸，带有扩张特效<li>壁纸不会持续到菜单界面",
            "item":{
                "0":"◈关闭———",
                "1":"关闭壁纸",
                "2":"◈多张———",
                "3":"原画图集",
                "4":"世海壁纸",
                "5":"羊皮画卷",
                "6":"◈单张———",
                "7":"青铜龙纹",
                "8":"霞光天幕",
                "9":"潭水桃花",
                "10":"战火硝烟",
                "11":"深宫殿堂",
                "12":"SCL联赛",
                "13":"Online"
            },
            onclick:function(item){
                    var items=item;
                    if(item=="0") items="1";
                    if(item=="2") items="3";
                    if(item=="6") items="7";
                    game.saveConfig('extension_祖安武将_jiemian',items);
                    localStorage.setItem("gamestartjiemian",items);
                }
        },
        "bizhi":{
            "name":"<span class=\"wallpapertext\" style=\"color:#FFFFE0\">菜单界面</span>壁纸",
            "init":"1",
            "intro":"控制开始游戏前菜单界面的壁纸<li>均为单张壁纸，无变化<li>壁纸不会持续到开始游戏后",
            "item":{
                "0":"◈关闭———",
                "1":"关闭壁纸",
                "2":"◈动态———",
                "3":"新杀春日",
                "4":"◈静态———",
                "5":"新杀春日",
                "6":"新杀夏荷",
                "7":"新杀月夜",
                "8":"秦兵马俑",
                "9":"曹节花园",
                "10":"深宫殿堂",
                "11":"元夕之夜",
                "12":"苍龙夜月",
                "13":"破碎庙宇"
            }
        },
        "wallpaper":{
            "name":"<span class=\"wallpapertext\" style=\"color:#FFFFE0\">游戏场景</span>壁纸",
            "init":"1",
            "intro":"控制开始游戏后游戏场景的壁纸<li>所有选项均为壁纸包，从若干张壁纸图中选择一张作为壁纸<li>世海壁纸 由<samp id='世中人'><small><strong>世中人</strong></small></samp></body><style>#世中人{animation:change 10s linear 0s infinite;font-family:shousha;}@keyframes change{0% {color:#FF0000;}10%{color:#FF7F00;}20%{color: #FFFF00;}30%{color:#00FF00;}40% {color:#00FFFF;}50%{color: #0000FF;}60%{color: #8B00FF;}70%{color: #0000FF;}75%{color: #00FFFF ;}80%{color:#00FF00;}85%{color:#FFFF00 ;}90%{color:  #FF7F00;}100%{color: #FF0000;}}</style>提供，特此感谢！<li>梦幻壁纸 由作者整理，为目前壁纸数量最多的壁纸包<li>其中，势力风貌、三分天下 带有势力变化，根据武将的势力呈现不同的壁纸",
            "item":{
                "0":"◈关闭———",
                "1":"关闭壁纸",
                "2":"◈动态———",
                "3":"势力风貌",
                "4":"<span style=\"animation: -webkit-animation:fairy 20s infinite;animation:fairy 20s infinite;\">霓裳羽衣</span>",
                "5":"海棠依旧",
                "6":"◈静态———",
                "7":"<span style=\"animation: -webkit-animation:fairy 20s infinite;animation:fairy 20s infinite;\">世海壁纸</span>",
                "8":"<span style=\"animation: -webkit-animation:fairy 20s infinite;animation:fairy 20s infinite;\">梦幻壁纸</span>",
                "9":"势力风貌",
                "10":"三分天下",
                "11":"锦绣山河",
                "12":"羊皮画卷",
                "13":"OL背景",
                "14":"决战京城"
            }
        },
        "paperchoose":{
            "name":"<span class=\"wallpapertext\" style=\"color:#FFFFE0\">壁纸选择</span>依据",
            "intro":"有关势力变化的壁纸根据玩家的喜好选择不同的势力场景<li>选择 主公 会根据当前主公的势力选择壁纸<li>选择 玩家 会根据玩家所选武将的势力选择壁纸<li>选择 随机 则从随机一个势力中选择壁纸<li>仅对有势力变化的壁纸生效",
            "init":"1",
            "item":{
                "1":"主公",
                "2":"玩家",
                "3":"随机"
            }
        },
        "exwallpaper":{
            "name":"<span class=\"wallpapertext\" style=\"color:#FFFFE0\">特殊模式</span>壁纸",
            "intro":"特殊模式下专属壁纸<li>开启后，对决模式、单挑模式、挑战模式、战棋模式、塔防模式、炉石模式 会变成该模式专属的 菜单界面 和 游戏场景 壁纸",
            "init":true
        },
        "qiankuang":{
            "name":"<span class=\"handtext\" style=\"color:#00CED1\">手牌边框</span>开启",
            "intro":"手牌栏的边框贴图<li>会降低手牌的亮度<li>选择 随机 会从 东海、北漠、天山 中随机选择一款作为手牌栏边框<li>选择 东海 北漠 天山 则会变成无变化边框<br>（由于机型以及屏幕比例的差异，此功能兼容度较低，若有错位请自行调整，代码在第2080行往后）",
            "init":"0",
            "item":{
                "0":"关闭",
                "1":"随机",
                "2":"东海",
                "3":"北漠",
                "4":"天山"
            }
        },
        "biankuang":{
            "name":"<span class=\"handtext\" style=\"color:#00CED1\">手牌背景</span>开启",
            "intro":"手牌栏的背景贴图<li>选择 玩家 会根据玩家的势力按 魏=玄武、蜀=朱雀、吴=青龙、群=白虎、神=国战 来变化<li>选择 随机 会从上述背景中随机选择一款作为手牌栏背景<li>选择 逐鹿 或 国战 则会变成无变化背景<br>（由于机型以及屏幕比例的差异，此功能兼容度较低，若有错位请自行调整，代码在第2080行往后）",
            "init":"0",
            "item":{
                "0":"关闭",
                "1":"玩家",
                "2":"随机",
                "3":"逐鹿",
                "4":"国战"
            }
        },
        "backgroundttop":{
            "name":"<span class=\"handtext\" style=\"color:#00CED1\">开始界面</span>美化",
            "intro":"游戏的 开始界面 美化效果<li>增加 开始界面 的美化效果<li>频率建议与游戏设置里 显示开始界面 所选的选择一致",
            "init":"1",
            "item":{
                "0":"◈关闭———",
                "1":"关闭",
                "2":"◈首次———",
                "3":"无名杀",
                "4":"三国杀",
                "5":"Online",
                "6":"◈每次———",
                "7":"无名杀",
                "8":"三国杀",
                "9":"Online"
            },
            onclick:function(item){
                    var items=item;
                    if(item=="0") items="1";
                    if(item=="2") items="3";
                    if(item=="6") items="7";
                    game.saveConfig('extension_祖安武将_backgroundttop',items);
                    localStorage.setItem("backgroundlogo",items);
                }
        },
            "zhishixian":{
                "name":"<span class=\"handtext\" style=\"color:#32CD32\">攻击指示</span>特效",
                intro:"设置卡牌、技能的指示特效<li>额外增添了若干新特效供选择<li>感谢 特效测试 的 永远的萌新 制作的若干指示线，我进行了搬运（未取得授权，如果不同意，也没有关系；如果同意的话，我家的房子还蛮大♂的）<li>感谢 呲牙哥 提供帮助，将此特效从 玄武江湖 分离<li>玄武江湖 是一个不错的拓展，但却不是一个纯特效拓展，因此强迫症的我选择将此特效分离出来，不喜勿喷",
                init:lib.config.zuanzhishixian === undefined ? 'moren':lib.config.zuanzhishixian,
                item:{
                    "next_moren":"◈经典特效———",
                    'moren':"默认",
                    'Mohua':'水墨',
                    'Xiangong':'先攻',
                    'Zhuzhang':'竹杖',
                    "next_Shuimo":"◈祖安专属———",
                    'Shuimo':"幻彩",
                    'Anhei':'黑暗',
                    'Mozhua':'魔爪',
                    'Shenjian':'神剑',
                    'Yujian':'御剑',
                    "next_Jianfeng":"◈特效测试———",
                    'Jianfeng':'剑锋',
                    'Jinjian':'金箭',
                    'Jinlong':'金龙',
                    'Yuexian':'乐仙',
                    'Xingdie':'星蝶',
                    'Luoying':'落英',
                    'Shezhang':'蛇杖',
                },
                onclick:function(item){
                    if(item.indexOf('next_')!=-1) {
                        var items=item.slice(5);
                    }else {
                        var items=item;
                    }
                    var value = !items || items == 'moren';
                    game.saveConfig('extension_祖安武将_zhishixian',items);
                    game.saveConfig('zuanzhishixian',items);
                    game.saveConfig('extension_十周年UI_playerLineEffect', value);
                    if (window.decadeUI) decadeUI.config.playerLineEffect = value;
                    if(items == 'moren'){
                        game.linexy = game.zsOriginLineXy;
                    }else{
                        game.linexy = game['zs'+items+'LineXy'];
                    }
                    
                }
            },
        "lined":{
            "name":"<li>关于互动----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "zuan":{
            "name":"<span class=\"zuantext\" style=\"color:#FFA500\">祖安人民</span>讲话",
            "init":"3",
            "intro":"住口老贼：<li>关闭对话<br>独自唱戏：<li>只有使用者和目标会发炎<br>祖安大战：<br>联动队友敌人一起暴露身份",
            "item":{
                "1":"住口老贼",
                "2":"独自唱戏",
                "3":"祖安大战"
            }
        },
        "ransay":{
            "name":"<span class=\"ransaytext\" style=\"color:#FFA500\">成为龙王</span>几率",
            "init":"50",
            "intro":"设置触发聊天的几率<li>很卡，低配机建议概率越小越好",
            "item":{"0":"退群","25":"25%","50":"50%","75":"75%","100":"100%"
            }
        },
        "levelsay":{
            "name":"<span class=\"levelsaytext\" style=\"color: #87CEFA\">等级播报</span>开启",
            "intro":"我就知道会有人想要关闭这该死的等级提升播报<br>（ㅍ_ㅍ；）<li>如你所愿，关闭后将不会再有烦人的系统升级提示了",
            "init":true
        },
        "girlspeak":{
            "name":"<span class=\"cutetext\" style=\"color:#FF96B4\">女将卖萌</span>•ᴗ•❀",
            "intro":"为女性武将准备的专属聊天包！会以撒娇卖萌的方式进行聊天<br>(ฅ∀<`๑)╭嘻嘻<li>打开后将会替换女性武将原本中性的祖安对话的内容<li>如果乳糖不耐受可以关闭此开关<br>（话说看着女武将说大老爷们的粗话不难受么눈_눈）",
            "init":true
        },
        "zuanemotion":{
            "name":"<span class=\"zuantext\" style=\"color:#FFFF00\">砸花送蛋</span>表情",
            "init":true,
            "intro":"开启后其他玩家将会发送表情来表达其强烈的情感<li>代码搬运自 玄武江湖 如果造成了侵权请对天大喊：“玛德制杖！”"
        },
        "linee":{
            "name":"<li>关于节日----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "festival":{
            "name":"<span class=\"goldtext\" style=\"color:#DAA520\">节</span><span class=\"exttext\" style=\"color:#7FFFAA\">日</span><span class=\"yellowtext\" style=\"color:#FFFF00\">快</span><span class=\"fuhuotext\" style=\"color:#87CEFA\">乐</span>动画",
            //"name":"<span class=\"ssrtext\" style=\"color:#7FFFAA\">节日快乐</span>特效",
            "init":true,
            "intro":"开启后，每到节日都将播放相应的庆祝动画，增加节日氛围~<li>为了避免打扰，每个节日动画只会播放一次哦~<br>（由于算法原因，大部分农历节日无法实现）"
        },
        "birthdaymonth":{
            "name":"<span class=\"birtext\" style=\"color:#EE82EE\">生日</span><span class=\"birthtext\" style=\"color:#87CEEB\">庆祝</span>月份",
            "init":"2",
            "intro":"请告诉我你的生日月份，在生日这天无名杀会为你送上最真挚的祝福！",
            "item":{
                "1":"一月",
                "2":"二月",
                "3":"三月",
                "4":"四月",
                "5":"五月",
                "6":"六月",
                "7":"七月",
                "8":"八月",
                "9":"九月",
                "10":"十月",
                "11":"十一月",
                "12":"十二月"
            }
        },
        "birthdaydate":{
            "name":"<span class=\"birtext\" style=\"color:#EE82EE\">生日</span><span class=\"birthtext\" style=\"color:#87CEEB\">庆祝</span>日期",
            "init":"9",
            "intro":"请告诉我你的生日日期~",
            "item":{
                "1":"1日",
                "2":"2日",
                "3":"3日",
                "4":"4日",
                "5":"5日",
                "6":"6日",
                "7":"7日",
                "8":"8日",
                "9":"9日",
                "10":"10日",
                "11":"11日",
                "12":"12日",
                "13":"13日",
                "14":"14日",
                "15":"15日",
                "16":"16日",
                "17":"17日",
                "18":"18日",
                "19":"19日",
                "20":"20日",
                "21":"21日",
                "22":"22日",
                "23":"23日",
                "24":"24日",
                "25":"25日",
                "26":"26日",
                "27":"27日",
                "28":"28日",
                "29":"29日",
                "30":"30日",
                "31":"31日"
            }
        },
        "linef":{
            "name":"<li>关于武将----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "ssr":{
            "name":"<span class=\"ssrtext\" style=\"color:#7FFFAA\">标准武将</span>增强",
            "init":"0",
            "intro":"增强后武将的技能可在武将一栏查看，请打开 仅点将可用<br>（魏蜀吴群每个势力各9名武将，其强度一般与历史或演义中角色的才能、武功相匹配）<br>还是算了：<li>不增强任何武将<br>标包增强：<li>增强标准包中的同名武将（包括一些旧版，SP。于禁替换毅重于禁、袁术替换SP袁术）<br>强力替换：<li>不管什么包，只要名字匹配全部增强（不包括神势力的武将）<br>Ps：感谢〖世海〗资源包作者 世中人 提供的动态皮肤！",
            "item":{
                "0":"还是算了",
                "1":"标包增强",
                "2":"强力替换"
            }
        },
        "lineg":{
            "name":"<li>关于音效----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "audio":{
            "name":"<span class=\"zuantext\" style=\"color: #DA70D6\">游戏音效</span>播放",
            "init":"2",
            "intro":"住口老贼：<li>关闭所有音效<br>经典音效：<li>使用经典的卡牌音效<br>祖安音效：<li>卡牌音效的基础上，增加哲学♂语音包<br>可切换 手杀 或 十周年 的卡牌音效（感谢 世中人 整理提供的声音素材）",
            "item":{
                "1":"住口老贼",
                "2":"经典音效",
                "3":"祖安音效",
                "4":"手杀音效",
                "5":"十周年音效"
            }
        },
        "lineh":{
            "name":"<li>更多设置----->>>",
            "init":"1",
            "intro":"我是分割线_(:з」∠)_",
            "item":{
                "1":" "
            }
        },
        "isPC":{
            "name":"<span class=\"zuantext\" style=\"color: #4169E1\">界面比例</span>设置",
            "init":"1",
            "intro":"根据不同的配置选择适合的比例显示才不会错位<li>目前不包含所有机型，PC端(小)为在电脑上模拟手机窗口大小的调整比例，PC端(大)为电脑全屏时的比例<li>设置后会自动调整相应的显示最佳比例，可以在游戏设置中二次修改<li>手机端为95%，PC端(小)为80%，PC端(大)为120%<li>若没有兼容的比例可关闭 武将回合特效 以及 手牌栏的选项",
            "item":{
                "1":"手机端",
                "2":"PC端(小)",
                "3":"PC端(大)"
            },
            onclick:function(item){
                if(item=="1") var zoom='small';
                if(item=="2") var zoom='esmall';
                if(item=="3") var zoom='ebig';
                game.saveConfig('ui_zoom',zoom);
                switch(zoom){
                    case 'esmall':zoom=0.8;break;
                    case 'vsmall':zoom=0.9;break;
                    case 'small':zoom=0.93;break;
                    case 'big':zoom=1.05;break;
                    case 'vbig':zoom=1.1;break;
                    case 'ebig':zoom=1.2;break;
                    default:zoom=1;
                }
                game.saveConfig('extension_祖安武将_isPC',item);
                game.documentZoom=game.deviceZoom*zoom;
                ui.updatez();
            }
        },
        "windowHigh":{
            "name":"<span class=\"zuantext\" style=\"color: #4169E1\">窗口比例</span>设置",
            "init":"0",
            "intro":"可以给电脑的窗口定义大小啦！<li>似乎对手机并没有什么作用..",
            "item":{
                "0":"关闭",
                "1":"720×480(3:2)",
                "2":"800×600(4:3)",
                "3":"1280×720(16:9)",
                "4":"1440×960(3:2)",
                "5":"1600×1200(4:3)",
                "6":"1920×1080(16:9)",
                "7":"1090×570(手机)"
            },
            onclick:function(item){
function resize_window(long, high){
  // move the window to 0,0 (X,Y)
  window.moveTo(0, 0);
  // resize the window to 800x600
  window.resizeTo(long, high);
}
                    var items=item;
                    game.saveConfig('extension_祖安武将_windowHigh',items);
                    localStorage.setItem("zuanwindow",items);
        var windows=item;
        if(windows=="1") {
            resize_window(720, 480);
        }
        if(windows=="2") {
            resize_window(800, 600);
        }
        if(windows=="3") {
            resize_window(1280, 720);
        }
        if(windows=="4") {
            resize_window(1440, 960);
        }
        if(windows=="5") {
            resize_window(1600, 1200);
        }
        if(windows=="6") {
            resize_window(1920, 1080);
        }
        if(windows=="7") {
            resize_window(1090, 570);
        }
    }
        },
        "aboutH":{
            "name":"———————————",
            "init":"1",
            "intro":"就算你再点我100次我也不会叫你爸爸的 ಥ_ಥ",
            "item":{
                "1":"———————————"
            }
        },
        "text":{
            "name":"<span style=\"animation: -webkit-animation:fairy 20s infinite;animation:fairy 20s infinite;\">◈游戏自定义工具</span>",
            "init":false,
            "intro":"说得那么好听，其实就是作弊工具嘛<br>┐(´-｀)┌<br>胡扯！无名杀玩家的事，能叫作弊吗？<br>╰_╯╬<li>编辑器能够自定义场上所有角色使用的武将、位置、手牌，以及能观看其身份<li>适用于各武将AI的测试以及拓展的制作<li>建议关闭 手气卡 使用，此工具内置手气卡功能"
        },
        "about0":{
            "name":"———————————",
            "init":"1",
            "intro":"你真无聊...눈_눈",
            "item":{
                "1":"———————————"
            }
        },
        "falseedit":{
            "name":"编辑此扩展",
            "init":"0",
            "intro":"对不起，您不能通过长按来进入扩展编辑页面",
            "item":{
                "0":" ",
                "1":"什么！你还想编辑我？<br>(ಡωಡ)"
            }
        }
    },package:{
    character:{
        character:{
    // ---------------------------------------武将列表------------------------------------------//
            "ssr_luxun":["male","wu",3,["ssr_qianxun","ssr_jueji"],["forbidai"]],
            "ssr_sunquan":["male","wu",4,["ssr_zhiheng","ssr_quanbian","ssr_jiuyuan"],["zhu","forbidai"]],
            "ssr_zhaoyun":["male","shu",4,["ssr_longdan","ssr_juejing","ssr_pozhen"],["forbidai"]],
            "ssr_zhugeliang":["male","shu",3,["ssr_jinnang","ssr_newbazhen"],["forbidai"]],
            "ssr_zhangliao":["male","wei",4,["ssr_tuxi","ssr_mubing"],["forbidai"]],
            "ssr_ganning":["male","wu",4,["ssr_qixi"],["forbidai"]],
            "ssr_machao":["male","shu","4",["ssr_zhuiji","ssr_tieji"],["forbidai"]],
            "ssr_zhouyu":["male","wu",3,["ssr_yingzi","ssr_yeyan","ssr_fanjian"],["forbidai"]],
            "ssr_liubei":["male","shu",4,["ssr_shichou","ssr_rende","ssr_jijiang"],["zhu","forbidai"]],
            "ssr_dianwei":["male","wei",4,["ssr_qiangxi"],["forbidai"]],
            "ssr_guojia":["male","wei",3,["ssr_tianyun","ssr_yice"],["forbidai"]],
            "ssr_caocao":["male","wei",4,["ssr_jianxiong","ssr_zhujiu","ssr_hujia"],["forbidai"]],
            "ssr_lvbu":["male","qun",4,["ssr_shenfen","ssr_kuangbao","ssr_wushuang","ssr_jiwu"],["forbidai"]],
            "ssr_huangzhong":["male","shu",4,["ssr_liegong","ssr_pojia"],["forbidai"]],
            "ssr_xiahoudun":["male","wei",4,["ssr_ganglie","ssr_qingjian"],["forbidai"]],
            "ssr_huatuo":["male","qun",3,["ssr_chuli","ssr_xianfang"],["forbidai"]],
            "ssr_yujin":["male","wei",4,["ssr_zhenjun","ssr_yizhong"],["forbidai"]],
            "ssr_zuoci":["male","qun",3,["ssr_huanhua","ssr_xinsheng"],["forbidai"]],
            "ssr_huaxiong":["male","qun",4,["ssr_yaowu","ssr_shiyong"],["forbidai"]],
            "ssr_huanggai":["male","wu",4,["ssr_kurou"],["forbidai"]],
            "ssr_diaochan":["female","qun",3,["ssr_lihun","ssr_biyue"],["forbidai"]],
            "ssr_yuanshu":["male","qun",4,["ssr_yongsi","ssr_wangzun","ssr_tongji"],["forbidai"]],
            "ssr_guanyu":["male","shu",4,["ssr_wushen","ssr_lianzhan","mashu"],["forbidai"]],
            "ssr_lvmeng":["male","wu",3,["ssr_shelie","ssr_baiyi","ssr_gongxin"],["forbidai"]],
            "ssr_gongsunzan":["male","qun",4,["ssr_yucong","ssr_yicong"],["forbidai"]],
            "ssr_daqiao":["female","wu",3,["ssr_guose","ssr_tongque"],["forbidai"]],
            "ssr_xiaoqiao":["female","wu",3,["ssr_tianxiang","ssr_tongque"],["forbidai"]],
            "ssr_xuzhu":["male","wei",4,["ssr_aozhan","ssr_luoyi"],["forbidai"]],
            "ssr_zhangfei":["male","shu",4,["ssr_zhenhun","ssr_paoxiao"],["forbidai"]],
            "ssr_zhenji":["female","wei",3,["ssr_luoshen","ssr_qingcheng"],["forbidai"]],
            "ssr_sunshangxiang":["female","wu",3,["ssr_lianyin","ssr_xiaoji"],["forbidai"]],
            "ssr_simayi":["male","wei",3,["ssr_jilue","ssr_fankui","ssr_langgu"],["forbidai"]],
            "ssr_yiji":["male","shu",3,["ssr_jijie","ssr_jiyuan"],["forbidai"]],
            "ssr_huangyueying":["female","shu",3,["ssr_jiqiao","ssr_qicai"],["forbidai"]],
            "ssr_jiaxu":["male","qun",3,["ssr_juesha","ssr_zhenlue","ssr_weimu"],["forbidai"]],
            "ssr_caiwenji":["female","qun",3,["ssr_beiming","ssr_duanxian"],["forbidai"]],
            "ssr_menghuo":["male","shu",4,["ssr_manjia","ssr_zaiqi"],["forbidai"]],
            "ssr_zhurong":["female","shu",3,["ssr_manjia","ssr_lieren"],["forbidai"]],
            "ssr_jiangwei":["male","shu",4,["ssr_zhiji","ssr_weilong"],["forbidai"]],
            "ssr_sunce":["male","wu",4,["ssr_hunzi","ssr_jiang","ssr_zhiba"],["zhu","forbidai"]],
            "ssr_taishici":["male","wu",4,["ssr_hanzhan","ssr_tianyi"],["forbidai"]],
            "ssr_zhoutai":["male","wu",4,["ssr_buqu"],["forbidai"]],
            "ssr_xiahouyuan":["male","wei",4,["ssr_shensu","ssr_hubu"],["forbidai"]],
            "ssr_caoren":["male","wei",4,["ssr_jushou","ssr_jiewei"],["forbidai"]],
            "ssr_dengai":["male","wei",4,["ssr_tuntian","ssr_zaoxian"],["forbidai"]],
            "ssr_dongzhuo":["male","qun",8,["ssr_hengzheng","ssr_baonue","ssr_jiuchi"],["zhu","forbidai"]],
            "ssr_yuji":["male","qun",3,["ssr_mizhou","ssr_chanyuan"],["forbidai"]],
            "ssr_yuanshao":["male","qun",4,["ssr_dingsheng","ssr_luanji","ssr_xueyi"],["zhu","forbidai"]],
            "ssr_xushu":["male","shu",4,["ssr_zhuhai","ssr_yijian"],["forbidai"]],
            "ssr_fazheng":["male","shu",3,["ssr_fabing","ssr_xuanhuo"],["forbidai"]],
            "ssr_pangtong":["male","shu",3,["ssr_lianhuan","ssr_sance"],["forbidai"]],
            "ssr_zhanghe":["male","wei",4,["ssr_xiebian"],["forbidai"]],
            "ssr_zhangchunhua":["female","wei",3,["ssr_jueqing","ssr_shangshi"],["forbidai"]],
            "ssr_xuhuang":["male","wei",4,["ssr_jieliang","ssr_zhiyan"],["forbidai"]],
            "ssr_sunjian":["male","wu",4,["ssr_yinghun","ssr_polu"],["forbidai"]],
            "ssr_lusu":["male","wu",3,["ssr_dimeng","ssr_fuhui"],["forbidai"]],
            "ssr_zhangzhang":["male","wu",3,["ssr_zhijian","ssr_guzheng"],["forbidai"]],
            "ssr_zhangjiao":["male","qun",3,["ssr_huangtian","ssr_guidao","ssr_zhuji"],["zhu","forbidai"]],
            "ssr_zhangbao":["male","qun",3,["ssr_houtu","ssr_guidao"],["forbidai"]],
            "ssr_zhangliang":["male","qun",3,["ssr_cangsheng","ssr_guidao"],["forbidai"]],
        },
        translate:{
            /*
            "ssr_luxun":"陆逊",
            "ssr_sunquan":"孙权",
            "ssr_zhaoyun":"赵云",
            "ssr_zhugeliang":"诸葛亮",
            "ssr_zhangliao":"张辽",
            "ssr_ganning":"甘宁",
            "ssr_machao":"马超",
            "ssr_zhouyu":"周瑜",
            "ssr_liubei":"刘备",
            "ssr_dianwei":"典韦",
            "ssr_guojia":"郭嘉",
            "ssr_caocao":"曹操",
            "ssr_lvbu":"吕布",
            "ssr_huangzhong":"黄忠",
            "ssr_xiahoudun":"夏侯惇",
            "ssr_huatuo":"华佗",
            "ssr_yujin":"于禁",
            "ssr_zuoci":"左慈",
            "ssr_huaxiong":"华雄",
            "ssr_huanggai":"黄盖",
            "ssr_diaochan":"貂蝉",
            "ssr_yuanshu":"袁术",
            "ssr_guanyu":"关羽",
            "ssr_lvmeng":"吕蒙",
            "ssr_gongsunzan":"公孙瓒",
            "ssr_daqiao":"大乔",
            "ssr_xiaoqiao":"小乔",
            "ssr_xuzhu":"许褚",
            "ssr_zhangfei":"张飞",
            "ssr_zhenji":"甄姬",
            "ssr_sunshangxiang":"孙尚香",
            "ssr_simayi":"司马懿",
            "ssr_xf_yiji":"伊籍",
            "ssr_huangyueying":"黄月英",
            "ssr_jiaxu":"贾诩",
            "ssr_caiwenji":"蔡文姬",
            "ssr_menghuo":"孟获",
            "ssr_zhurong":"祝融",
            "ssr_jiangwei":"姜维",
            "ssr_sunce":"孙策",
            "ssr_taishici":"太史慈",
            "ssr_zhoutai":"周泰",
            "ssr_xiahouyuan":"夏侯渊",
            "ssr_caoren":"曹仁",
            "ssr_dengai":"邓艾",
            "ssr_dongzhuo":"董卓",
            "ssr_yuji":"于吉",
            "ssr_yuanshao":"袁绍",
            */
            "ssr_luxun":"◈陆逊",
            "ssr_sunquan":"◈孙权",
            "ssr_zhaoyun":"◈赵云",
            "ssr_zhugeliang":"◈诸葛亮",
            "ssr_zhangliao":"◈张辽",
            "ssr_ganning":"◈甘宁",
            "ssr_machao":"◈马超",
            "ssr_zhouyu":"◈周瑜",
            "ssr_liubei":"◈刘备",
            "ssr_dianwei":"◈典韦",
            "ssr_guojia":"◈郭嘉",
            "ssr_caocao":"◈曹操",
            "ssr_lvbu":"◈吕布",
            "ssr_huangzhong":"◈黄忠",
            "ssr_xiahoudun":"◈夏侯惇",
            "ssr_huatuo":"◈华佗",
            "ssr_yujin":"◈于禁",
            "ssr_zuoci":"◈左慈",
            "ssr_huaxiong":"◈华雄",
            "ssr_huanggai":"◈黄盖",
            "ssr_diaochan":"◈貂蝉",
            "ssr_yuanshu":"◈袁术",
            "ssr_guanyu":"◈关羽",
            "ssr_lvmeng":"◈吕蒙",
            "ssr_gongsunzan":"◈公孙瓒",
            "ssr_daqiao":"◈大乔",
            "ssr_xiaoqiao":"◈小乔",
            "ssr_xuzhu":"◈许褚",
            "ssr_zhangfei":"◈张飞",
            "ssr_zhenji":"◈甄姬",
            "ssr_sunshangxiang":"◈孙尚香",
            "ssr_simayi":"◈司马懿",
            "ssr_yiji":"◈伊籍",
            "ssr_huangyueying":"◈黄月英",
            "ssr_jiaxu":"◈贾诩",
            "ssr_caiwenji":"◈蔡文姬",
            "ssr_menghuo":"◈孟获",
            "ssr_zhurong":"◈祝融",
            "ssr_jiangwei":"◈姜维",
            "ssr_sunce":"◈孙策",
            "ssr_taishici":"◈太史慈",
            "ssr_zhoutai":"◈周泰",
            "ssr_xiahouyuan":"◈夏侯渊",
            "ssr_caoren":"◈曹仁",
            "ssr_dengai":"◈邓艾",
            "ssr_dongzhuo":"◈董卓",
            "ssr_yuji":"◈于吉",
            "ssr_yuanshao":"◈袁绍",
            "ssr_xushu":"◈徐庶",
            "ssr_fazheng":"◈法正",
            "ssr_pangtong":"◈庞统",
            "ssr_zhanghe":"◈张郃",
            "ssr_zhangchunhua":"◈张春华",
            "ssr_xuhuang":"◈徐晃",
            "ssr_sunjian":"◈孙坚",
            "ssr_lusu":"◈鲁肃",
            "ssr_zhangzhang":"◈张昭张纮",
            "ssr_zhangjiao":"◈张角",
            "ssr_zhangbao":"◈张宝",
            "ssr_zhangliang":"◈张梁",
        },
    },
    card:{
        card:{
        },
        translate:{
        },
        list:[],
    },
    skill:{
        skill:{
            hpunshow:{
                charlotte:true,
            },
            thunderunshow:{
                charlotte:true,
            },
            huoshanunshow:{
                charlotte:true,
            },
            hongshuiunshow:{
                charlotte:true,
            },
            fuleiunshow:{
                charlotte:true,
            },
            norecover:{
                charlotte:true,
                silent:true,
                trigger:{
                    player:"recoverBegin",
                },
                forced:true,
                content:function (){
    trigger.cancel();
    },
                popup:false,
            },
            jingcheng:{
                subSkill:{
                    link:{
                        trigger:{
                            player:"linkBegin",
                        },
                        priority:209,
                        forced:true,
                        filter:function(event,player){
                            return !player.isLinked();
                        },
                        content:function(){
                            game.log(player,'取消了横置');
                            trigger.cancel();
                        },
                        ai:{
                            effect:{
                                target:function(card){
                                    if(card.name=='tiesuo') return 'zeroplayertarget';
                                },
                            },
                        },
                        sub:true,
                    },
                    gain:{
                        trigger:{
                            player:["gainBefore","equipBefore"],
                        },
                        priority:209,
                        forced:true,
                        filter:function (event,player){
                            return event.cards&&event.cards.length>0;
                        },
                        mod:{
                            targetEnabled:function(card,player,target,now){
                                var oklist=['shandian','huoshan','hongshui','fulei'];
                                if(get.type(card)=='delay'&&!oklist.contains(card.name)) return false;
                            },
                        },
                        content:function(){
                            "step 0"
                            trigger.cancel();
                            "step 1"
                            var card=trigger.cards;
                            if(player.countCards('he')) {
                                card=card.concat(player.getCards('he'));
                            }
                            if(player.countCards('he')) {
                                card=card.concat(player.getCards('he'));
                            }
                            for(i=0;i<card.length;i++) {
                                card[i].fix();
                                card[i].remove();
                                card[i].destroyed=true;
                            }
                            game.log(card,'被销毁了');
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target){
                                    if(get.type(card)=='delay') return 0;
                                },
                            },
                        },
                        sub:true,
                    },
                    turnover:{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        priority:209,
                        forced:true,
                        filter:function(event,player){
                            return !player.isTurnedOver();
                        },
                        content:function(){
                            trigger.cancel();
                            game.log(player,'取消了翻面');
                        },
                        ai:{
                            noturn:true,
                        },
                        sub:true,
                    },
                    recover:{
                        trigger:{
                            player:"recoverBegin",
                        },
                        priority:209,
                        forced:true,
                        content:function (){
                            trigger.cancel();
                            game.log(player,'无法回复体力');
                        },
                        sub:true,
                    },
                    resshan:{
                        trigger:{
                            player:["chooseToRespondBefore","chooseToUseBefore"],
                        },
                        direct:true,
                        silent:true,
                        filter:function(event,player){
                            if(event.responded) return false;
                            if(player.storage.resshaning) return false;
                            if(!event.filterCard({name:'shan'},player,event)) return false;
                            return game.hasPlayer(function(current){
                                return current!=player&&current.identity!='fan';
                            });
                        },
                        check:function(event,player){
                            if(get.damageEffect(player,event.player,player)>=0) return false;
                            return true;
                        },
                        content:function(){
                            "step 0"
                            player.say('京城失守，速来救驾！');
                            if(event.current==undefined) event.current=player.next;
                            if(event.current==player){
                                event.finish();
                            }
                            else if(event.current.identity!='fan'){
                                if((event.current==game.me&&!_status.auto)||(
                                    get.attitude(event.current,player)>2)||
                                    event.current.isOnline()){
                                    player.storage.resshaning=true;
                                    var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张闪？',{name:'shan'});
                                    next.set('ai',function(){
                                        var event=_status.event;
                                        return (get.attitude(event.player,event.source)-2);
                                    });
                                    next.set('skillwarn','替'+get.translation(player)+'打出一张闪');
                                    next.autochoose=lib.filter.autoRespondShan;
                                    next.set('source',player);
                                }
                            }
                            "step 1"
                            player.storage.resshaning=false;
                            if(result.bool){
                                event.finish();
                                trigger.result={bool:true,card:{name:'shan',isCard:true}};
                                trigger.responded=true;
                                trigger.animate=false;
                                if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                                    event.current.ai.shown+=0.3;
                                    if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                                }
                            }
                            else{
                                event.current=event.current.next;
                                event.goto(0);
                            }
                        },
                        ai:{
                            respondShan:true,
                            skillTagFilter:function(player){
                                if(player.storage.resshaning) return false;
                                return game.hasPlayer(function(current){
                                    return current!=player&&current.identity!='fan';
                                });
                            },
                            effect:{
                                target:function(card,player,target,current){
                                    if(card.name=='sha'){
                                        return [1,-4];
                                    }else if(get.tag(card,'damage')) {
                                        return [1,-2];
                                    }
                                },
                            },
                        },
                        sub:true,
                    },
                    from:{
                        mod:{
                            globalFrom:function(from,to){
                                if(to.hasSkill("jingcheng")) return -Infinity;
                            },
                        },
                    },
                    shanplus:{
                        trigger:{
                            target:"shaBegin",
                        },
                        silent:true,
                        priority:-1,
                        forced:true,
                        filter:function (event,player) {
                            if(event.directHit) return false;
                            return true;
                        },
                        content:function () {
                            if(typeof trigger.shanRequired=='number'){
                                trigger.shanRequired++;
                            }
                            else {
                                trigger.shanRequired=2;
                            }
                        },
                        sub:true,
                    },
                    damage:{
                        silent:true,
                        forced:true,
                        trigger:{
                            player:"damageBegin4",
                        },
                        priority:-999,
                        content:function (){
                            trigger.cancel();
                            if(!player.hasSkill('guanfu')){
                                if(trigger.card&&trigger.card.name=='sha') {
                                    var dam=trigger.num*2;
                                }else {
                                    var dam=trigger.num;
                                }
                                player.hp-=dam;
                                player.$damage();
                                player.$damagepop(-dam,'soil');
                            }
                            player.update();
                            if(player.hp<1) player.die();
                        },
                        sub:true,
                    },
                    round:{
                        silent:true,
                        forced:true,
                        trigger:{
                            player:"phaseBefore",
                        },
                        priority:678,
                        content:function () {
                            'step 0'
                            trigger.cancel();
                            player.phaseJudge();
                            if(parseFloat(lib.config['extension_祖安武将_mode'])!='2') event.finish();
                            'step 1'
                            /*if(player.storage.zhongnum) {
                                event.dam=player.storage.zhongnum;
                            }else {
                                event.dam=1;
                            }*/
                            if(lib.config['extension_祖安武将_balance']) {
                                event.dam=game.countPlayer(function(current){
                                    return current.identity=='zhong';
                                });
                            }else {
                                event.dam=1;
                            }
                            'step 2'
                            if(event.dam<1) event.finish();
                            'step 3'
                            event.dam--;
                            event.players=[];
                            for (var i=0;i<game.players.length;i++) {
                                if(game.players[i]!=player&&game.players[i].identity=='fan') {
                                    event.players.push(game.players[i]);
                                }
                            }
                            'step 4'
                            event.him=event.players.randomGet();
                            event.him.chooseToRespond({name:'shan'},'请打出一张【闪】，否则受到来自京城的一点伤害').set('check',function(card){
                                return 9-get.value(card);
                            });
                            'step 5'
                            if(!result.bool) event.him.damage();
                            'step 6'
                            event.goto(2);
                        },
                        sub:true,
                    },
                },
                charlotte:true,
                silent:true,
                locked:true,
                priority:30,
                charlotte:true,
                global:["jingcheng_from"],
                group:["jingcheng_link","jingcheng_gain","jingcheng_turnover","jingcheng_recover","jingcheng_round","jingcheng_damage","jingcheng_shanplus","jingcheng_resshan"],
                trigger:{
                    //player:["phaseBegin"],
                    global:'roundStart',
                },
                forced:true,
                filter:function (event,player){
                    if(player.identity!='zhu') return false;
                    return parseFloat(lib.config['extension_祖安武将_relife'])!='0'; 
                },
                content:function (){
                    var dd=player;
                    var dds=dd.storage.relife;
                    dd.storage.relife--;
                    if(dd.storage.relife<1) {
                    if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','revive.ogg');
                    event.dead=dd;
                    player.storage.tahp=player.hp;
                    player.maxHp=player.storage.zhumaxhp;
                    player.hp=player.maxHp;
                    player.removeSkill('jingcheng');
                    dd.draw(Math.ceil(dd.storage._levelskill*0.5));
                    dd.markSkill('_expskill');
                    dd.syncStorage('_expskill');   
                    dd.markSkill('_levelskill');
                    dd.syncStorage('_levelskill');
                    player.identity='zhu';
                    player.setIdentity('主');
                    player.node.identity.dataset.color='zhu';
                    player.identityShown=true;
                    player.storage.zuan_identity=['主','zhu'];
                    player.enableSkill('lockskill');
                    if(dd.hasSkill('zuan_hudun')){
                        dd.storage.zuan_hudun=dd.storage.zuan_maxhujia;
                        dd.markSkill('zuan_hudun');
                        dd.syncStorage('zuan_hudun');   
                    }
                    if(player.storage.jingchengimgshow) {
                        player.storage.jingchengimgshow=false;
                        game.broadcastAll(function(player){
                            player.storage.jingcheng_img.style.transform='translateY(-200px)';
                            player.storage.jingcheng_img.delete();
                        },player);
                    }
                    dd.update();
                    if(player.hasSkill('notarget')) player.removeSkill('notarget');
                    if(parseFloat(lib.config['extension_祖安武将_relife'])!='0') {
                        player.storage.relife=Math.ceil(player.storage._levelskil*0.4+0.1);
                    } else {
                        player.storage.relife=4;
                    }
                        dd.$damagepop('重生');
                        game.log(dd,'<span class=\"zuantext\" style=\"color: #7CFC00\">获得了重生</span>');
                    }else {
                        dd.$damagepop(get.cnNumber(dd.storage.relife)+'回合');
                        game.log(dd,'复活还剩<span class=\"zuantext\" style=\"color: #228B22\">',get.cnNumber(dd.storage.relife),'回合</span>');
                    }
                },
                ai:{
                    threaten:3.5,
                },
                popup:false,
            },
            qunxiongkill:{
                charlotte:true,
                trigger:{
                    global:["phaseBefore","useCard","drawBefore","phaseEnd"],
                },
                silent:true,
                forced:true,
                unique:true,
                priority:100,
                content:function (){
        "step 0"
        if(lib.config.mode=='guozhan'&&get.config('guozhan_mode')!='mingjiang'){
            for(i=0;i<game.players.length;i++){
                game.players[i].showCharacter(2);
            }
        }
        else{
            event.goto(1);
        }
        "step 1" 
        if(player.maxHp>1){
            player.loseMaxHp();
        }
        var names=[];
        var players=game.players.concat(game.dead);
        for(i=0;i<players.length;i++){
            if(players[i]==player) continue;
            if(players[i].name&&!players[i].classList.contains('unseen')) names.add(players[i].name);
            if(players[i].name1&&!players[i].classList.contains('unseen')) names.add(players[i].name1);
            if(players[i].name2&&!players[i].classList.contains('unseen2')) names.add(players[i].name2);
        }
        ui.clear();
        game.zhu=player;
        player.identity='zhu';
        player.setIdentity('霸');
        player.node.identity.dataset.color='zhong';
        player.identityShown=true;
        player.storage.zuan_identity=['霸','zhong'];
        var players=get.players(false,true);
        for(i=0;i<players.length;i++){
            if(players[i]!=player){
                players[i].identity='fan';
                players[i].setIdentity('群');
                players[i].node.identity.dataset.color='nei';
                players[i].identityShown=true;
            }
        }
        for(i=0;i<game.players.length;i++){
            if(game.players[i]==player) continue;
            if(game.players[i].name){
                game.players[i].disabledSkills.zhushen0=lib.character[game.players[i].name][3];
            }
            if(game.players[i].name1){
                game.players[i].disabledSkills.zhushen1=lib.character[game.players[i].name1][3];
            }
            if(game.players[i].name2){
                game.players[i].disabledSkills.zhushen2=lib.character[game.players[i].name2][3];
            }
        }
        player.removeSkill('qunxiongkill');
        player.addSkill('bakill');
    },
            },
            bakill:{
                subSkill:{
                    show:{
                        trigger:{
                            global:['usecardAfter','phaseBegin','gainAfter','changeHpAfter','loseAfter'],
                        },
                        priority:98,
                        silent:true,
                        forced:true,
                        content:function (){
                            player.identity='zhu';
                            player.setIdentity('霸');
                            player.node.identity.dataset.color='zhong';
                            player.identityShown=true;
                            var players=get.players(false,true);
                            for(i=0;i<players.length;i++){
                                if(players[i]!=player){
                                    players[i].identity='fan';
                                    players[i].setIdentity('群');
                                    players[i].node.identity.dataset.color='nei';
                                    players[i].identityShown=true;
                                }
                            }
                        },
                        sub:true,
                    },
                    mode:{
                        mod:{
                            globalFrom:function(from,to){
                                if(lib.config['extension_祖安武将_balance']) return -Infinity;
                            },
                            cardSavable:function(card,player){
                                if(!lib.config['extension_祖安武将_balance']) return;
                                if(!_status.currentPhase) return;
                                if(_status.currentPhase.isAlive()&&_status.currentPhase.hasSkill('bakill')&&_status.currentPhase!=player){
                                    if(card.name=='tao'&&!player.isDying()) return false;
                                }
                            },
                            cardEnabled:function(card,player){
                                if(!lib.config['extension_祖安武将_balance']) return;
                                if(!_status.currentPhase) return;
                                if(_status.currentPhase.isAlive()&&_status.currentPhase.hasSkill('bakill')&&_status.currentPhase!=player){
                                    if(card.name=='tao'&&!player.isDying()) return false;
                                }
                            },
                        },
                        sub:true,
                    },
                },
                charlotte:true,
                skillAnimation:"epic",
                global:["bakill_mode"],
                group:["batime","qunxiongdraw","qunxiongdis","qunxiongsha","bakill_show"],
                trigger:{
                    player:"dieBegin",
                },
                silent:true,
                logTarget:"source",
                forced:true,
                unique:true,
                priority:100,
                filter:function (event){
                    return true;
                },
                content:function (){
        "step 0"
        if(trigger.source&&trigger.source.isIn()){
            var die=1;
        }else {
            var die=0;
        }
        if(die==1){
        if(lib.config.mode=='guozhan'&&get.config('guozhan_mode')!='mingjiang'){
            for(i=0;i<game.players.length;i++){
                game.players[i].showCharacter(2);
            }
        }
        else{
            event.goto(1);
        }
        }else {
            trigger.cancel();
            player.hp=1;
            player.update();
            event.finish();
        }
        "step 1" 
            if (game.dead.length) {
                for (var i=0;i<game.dead.length;i++){
                        var dd=game.dead[i];
                        var dds=dd.storage.relife;
                            dd.storage.relife--;
                            if(dd.storage.relife<1) {
                            if(parseFloat(lib.config['extension_祖安武将_audio'])>='2') game.playAudio('..','extension','祖安武将','audio','revive.ogg');
                            dd.revive(dd.maxHp);
                            game.addVideo('revive',dd);
                            event.dead=dd;
                            dd.draw(Math.ceil(dd.storage._levelskill*0.5));
                            dd.storage.relife=Math.ceil(dd.storage._levelskill*0.4+0.1);
                            dd.markSkill('_expskill');
                            dd.syncStorage('_expskill');   
                            dd.markSkill('_levelskill');
                            dd.syncStorage('_levelskill');   
                            if(dd.hasSkill('zuan_hudun')){
                            dd.storage.zuan_hudun=dd.storage.zuan_maxhujia;
                            dd.markSkill('zuan_hudun');
                            dd.syncStorage('zuan_hudun');
                            }
                            dd.update();
                            dd.$damagepop('重生');
                            game.log(dd,'<span class=\"zuantext\" style=\"color: #7CFC00\">获得了重生</span>');
                        }else {
                            dd.$damagepop(get.cnNumber(dd.storage.relife)+'回合');
                            game.log(dd,'复活还剩<span class=\"zuantext\" style=\"color: #228B22\">',get.cnNumber(dd.storage.relife),'回合</span>');
                        }
                    }
                    }
        ui.clear();
        game.zhu=trigger.source;
        trigger.source.identity='zhu';
        trigger.source.setIdentity('霸');
        trigger.source.node.identity.dataset.color='zhong';
                trigger.source.identityShown=true;
                player.identity='fan';
                player.setIdentity('群');
                player.node.identity.dataset.color='nei';
                player.identityShown=true;
                player.storage.zuan_identity=['群','nei'];
        trigger.source.draw(3);
        trigger.source.addSkill('bakill');
        player.removeSkill('bakill');
            for(i=0;i<game.players.length;i++){
                if (!game.players[i].hasSkill('bakill')) {
                game.players[i].loseHp();
            }
        }
    },
            },
            batime:{
                charlotte:true,
                trigger:{
                    //player:["phaseBegin","turnOverAfter"],
                    global:'roundStart',
                },
                silent:true,
                forced:true,
                mark:true,
                //marktext:"胜",
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_zhengba.png>",
                check:function (event,player){
                    //if(player.isTurnedOver()) return false;
                    return true;
                },
                init:function (player){
                    player.storage.batime=5;
                    player.markSkill('batime');
                    player.syncStorage('batime');
                },
                content:function (){
                    if(!lib.config['extension_祖安武将_balance']) {
                        player.draw(2);
                    }
                    player.storage.batime-=1;
                    player.markSkill('batime');
                    player.syncStorage('batime');
                    if(player.storage.batime<=0){
                        for(i=0;i<game.players.length;i++){
                            if(game.players[i]!=player){
                                game.players[i].die();
                            }
                        }
                    }
                },
                mod:{
                    maxHandcard:function (player,num){
                        if(!lib.config['extension_祖安武将_balance']) return num+2;
                    },
                },
                intro:{
                    content:function (storage,player,skill){
                        if (lib.config['extension_祖安武将_balance']) {
                            var str='<br>你离胜利只剩'+player.storage.batime+'轮<li>Buff：霸主的回合内，所有其他角色非濒死不能使用【桃】；其他角色的摸牌阶段摸牌时，你摸等量的牌；弃牌阶段弃牌时，你随机弃等量的手牌；你杀死其他角色后，你的胜利推进一回合；你死亡后，所有霸主以外的角色流失一点体力，所有群雄复活时间推进一个回合';
                        } else {
                            var str='<br>你离胜利只剩'+player.storage.batime+'轮<li>Buff：霸主的回合内，所有其他角色非濒死不能使用【桃】；每回合开始你摸2张牌，你的手牌上限+2；你死亡后，所有霸主以外的角色流失一点体力，所有群雄复活时间推进一个回合';
                        }
                        return str;
                    },
                },
                ai:{
                    threaten:5,
                },
            },
            guanfu:{
                subSkill:{
                    disrecover:{
                        silent:true,
                        trigger:{
                            player:"recoverBegin",
                        },
                        forced:true,
                        filter:function (event,player){
                            return player.hp>0||lib.config['extension_祖安武将_balance'];
                        },
                        marktext:"桃",
                        intro:{
                            name:"桃之夭夭",
                            content:"cards",
                            onunmark:function(storage,player){
                                if(storage&&storage.length){
                                    player.$throw(storage);
                                    game.cardsDiscard(storage);
                                    delete player.storage.guanfu_disrecover;
                                }
                            },
                        },
                        content:function (){
                            'step 0'
                            event.num=trigger.num;
                            if(lib.config['extension_祖安武将_balance']) event.goto(2);
                            'step 1'
                            trigger.cancel();
                            player.draw(trigger.num);
                            event.finish();
                            'step 2'
                            if(event.num<1||player.hp+event.num<=1) event.finish();
                            'step 3'
                            event.num--;
                            if(player.storage.guanfu_disrecover==undefined) player.storage.guanfu_disrecover=[];
                            var suitlist=[];
                            for(i=0;i<player.storage.guanfu_disrecover.length;i++) {
                                suitlist.push(get.suit(player.storage.guanfu_disrecover[i]));
                            }
                            player.judge(function(card){
                                if(get.suit(card)=='heart') return 2;
                                if(suitlist.contains(get.suit(card))) return 2;
                                return -0.5;
                            }).judge2=function(result){
                                return result.bool;
                            };
                            'step 4'
                            if(!result.bool){
                                trigger.num--;
                                player.storage.guanfu_disrecover.push(result.card);
                                player.markSkill('guanfu_disrecover');
                            }else if(player.storage.guanfu_disrecover.length>0){
                                player.$throw(player.storage.guanfu_disrecover);
                                game.cardsDiscard(player.storage.guanfu_disrecover);
                                player.unmarkSkill('guanfu_disrecover');
                                player.storage.guanfu_disrecover=[];
                            }
                            event.goto(2);
                        },
                        popup:false,
                        sub:true,
                    },
                    fandie:{
                        trigger:{
                            global:"die",
                        },
                        forced:true,
                        silent:true,
                        filter:function(event,player){
                            return event.source&&event.source.isIn()&&event.player.identity=='fan';
                        },
                        priority:65,
                        content:function(){
                            trigger.source=undefined;
                        },
                        sub:true,
                    },
                    fanrevive:{
                        trigger:{
                            global:"dieBefore",
                        },
                        forced:true,
                        silent:true,
                        filter:function(event,player){
                            return game.countPlayer(function(current){
                                    return current.identity=='fan';
                            })<=1&&event.player.identity=='fan'&&lib.config['extension_祖安武将_balance']&&player.storage.zuan_guanbing<10;
                        },
                        priority:65,
                        content:function(){
                            var fanlist=[];
                            for(i=0;i<game.dead.length;i++) {
                                if(game.dead[i].identity=='fan') {
                                    fanlist.push(game.dead[i]);
                                }
                            }
                            game.expRevive(fanlist.randomGet());
                        },
                        sub:true,
                    },
                },
                charlotte:true,
                silent:true,
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_guanfu.png>",
                //marktext:"御",
                charlotte:true,
                global:['guanfu_disrecover'],
                group:["hellfire","zuan_guanbing","guanfu_fandie","guanfu_fanrevive","zuan_panjun","firedam","firedam2","firedam3"],
                trigger:{
                    global:"die",
                },
                forced:true,
                mark:true,
                init:function (player){
        player.storage.zuan_guanbing=0;
        player.markSkill('zuan_guanbing');
        player.syncStorage('zuan_guanbing');
        player.storage.zuan_panjun=0;
        player.markSkill('zuan_panjun');
        player.syncStorage('zuan_panjun');
    },
                content:function (){
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
            game.newalive('extension/祖安武将/mode/mode_hellfire.gif',1.5,lib.config.zuancoveropacity); 
            game.delay(2);
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 3000);
        }*/
}
if(lib.config.mode!='guozhan'){
if(trigger.player.identity=='fan'){
        player.addMark('zuan_guanbing',false);
    }
if(trigger.player.identity=='zhong'){
        player.addMark('zuan_panjun',false);
    }
    }
        if(player.storage.zuan_guanbing>=10){
            for(i=0;i<game.players.length;i++){
            if(game.players[i].identity=='fan'||game.players[i].identity=='nei'){
                game.players[i].die();
            }
            }
        }
        if(player.storage.zuan_panjun>=10){
            player.die();
        }
    },
                intro:{
                    content:function (storage,player,skill){
            var red=10-player.storage.zuan_panjun;
            var blue=10-player.storage.zuan_guanbing;
var str='<br>官府代表主公阵容，叛军代表反贼阵容<br>受到火焰伤害的角色弃一张牌<br>双方角色阵亡都会增加对方势力数，先到达10个势力的一方获胜<br>死亡后的主公无法被攻击<li>官府剩余目标：'+blue+'<li>叛军剩余目标：'+red;
return str;
        },
                },
                popup:false,
            },
            hellfire:{
                silent:true,
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                filter:function (event,player){
        return player.hasSkill('jingcheng');
    },
                forced:true,
                frequent:true,
                content:function (){
        dam=trigger.num;
        var fum=game.players.length;
            var ram=1/fum;
        var z=1;
                    for(var a=0;dam>=1;a++){
        for(i=0;i<game.players.length;i++){
            if(dam>0){
            if(game.players[i].identity=='zhong'){
                var z=0;
                if(Math.random()<=ram){
            game.players[i].damage();
                
                    var dam=dam-1;
                    }
                }
                }
            if(z!=0) {
                var dam=0;
                }
                }
        }
    },
                intro:{
                    content:"mark",
                },
                popup:false,
            },
            "zuan_guanbing":{
                charlotte:true,
                forced:true,
                mark:true,
                marktext:"官",
                intro:{
                    name:"官兵势力",
                    content:"mark",
                },
            },
            "zuan_panjun":{
                charlotte:true,
                forced:true,
                mark:true,
                marktext:"叛",
                intro:{
                    name:"叛军势力",
                    content:"mark",
                },
            },
            firedam:{
                silent:true,
                trigger:{
                    global:"phaseBegin",
                },
                filter:function (event,player){
                    if(lib.config['extension_祖安武将_balance']) return false;
                    return true;
                },
                forced:true,
                content:function (){
                    'step 0'
                    var target=trigger.player;
                    target.judge(function(card){
                        if(get.suit(card)=='heart') return -2;
                        return 0;
                    });     
                    'step 1'
                    if(result.color){
                        if(result.suit=='heart'){
                           trigger.player.damage('fire');
                        }
                    }
                },
                popup:false,
            },
            "firedam2":{
                silent:true,
                trigger:{
                    global:"damageEnd",
                },
                filter:function (event,player){
                    return event.nature=='fire'&&event.player.countCards('he')>0;
                },
                forced:true,
                content:function (){
                    "step 0"
                    if(lib.config['extension_祖安武将_balance']) {
                        var cards=trigger.player.getCards('he');
                        trigger.player.discard(cards.randomGet());
                    }else {
                        trigger.player.chooseToDiscard('he',true);
                    }
                },
                popup:false,
            },
            turnoverfalse:{
                silent:true,
                trigger:{
                    player:"turnOverBefore",
                },
                priority:20,
                forced:true,
                filter:function (event,player){
        return !player.isTurnedOver();
    },
                content:function (){
        trigger.cancel();
        game.log(player,'取消了翻面');
    },
                ai:{
                    noturn:true,
                },
                popup:false,
            },
            notarget:{
                silent:true,
                charlotte:true,
                trigger:{
                    player:["damageBegin3","loseHpBefore","recoverBefore"],
                },
                forced:true,
                popup:false,
                content:function (){
        trigger.cancel();
    },
                mod:{
                    cardEnabled:function (){
            return false;
        },
                    cardSavable:function (){
            return false;
        },
                    targetEnabled:function (){
            return false;
        },
                },
            },
            "guifu_fire":{
                group:"guifu_dam",
                charlotte:true,
                silent:true,
                marktext:"鬼",
                forced:true,
                trigger:{
                    player:"phaseDrawBegin2",
                },
                filter:function (event){
                    return true; 
                },
                content:function (){
                    trigger.num++;
                    player.removeMark('guifu_fire');
                    if(player.countMark('guifu_fire')<1) {
                        player.removeSkill('guifu_fire');
                    }
                },
                intro:{
                    content:function (storage,player,skill){
                        var str='鬼符效果：摸牌阶段额外摸一张牌<li>限定技：对一名角色造成一点火焰伤害<li>持续时间：还剩'+player.storage.guifu_fire+'回合';
                        return str;
                    },
                },
            },
            "guifu_dam":{
                intro:{
                    name:"鬼符",
                    content:"mark",
                },
                marktext:"限",
                usable:1,
                enable:"phaseUse",
                filter:function (event,player){
        return player.countMark('guifu_dam')>=1;
    },
                filterTarget:function (card,player,target){
        return target!=player&&!target.hasSkill('jingcheng');
    },
                content:function (){
                var tex=lib.config['extension_祖安武将_texiao']; 
        if(tex) {
            game.newalive('extension/祖安武将/mode/mode_guifu.gif',1.5,lib.config.zuancoveropacity);
            game.delay(2);
        /*if((parseFloat(lib.config['extension_祖安武将_wallpaper'])!='1'||(lib.config['extension_祖安武将_exwallpaper']&&lib.config.zuanexwallpaper=='on'))&&parseFloat(lib.config['extension_祖安武将_isPC'])!='0') {
            setTimeout(function () {
                            game.broadcastAll()+ui.background.setBackgroundImage(lib.config.zuanbackground);
    // ---------------------------------------动态壁纸刷新
            }, 3000);
        }*/
        }
        player.removeMark('guifu_dam');
        target.damage('fire','nocard');
    },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.hp;
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
            "guifu_nei":{
                charlotte:true,
                trigger:{
                    player:"die",
                },
                /*mod:{
                    cardSavable:function (card,player){
                            if(card.name=='tao'&&!player.isDying()&&(lib.config['extension_祖安武将_balance'])) return false;
                    },
                    cardEnabled:function (card,player){
                            if(card.name=='tao'&&!player.isDying()&&(lib.config['extension_祖安武将_balance'])) return false;
                    },
                },*/
                silent:true,
                forced:true,
                forceDie:true,
                skillAnimation:true,
                animationColor:"fire",
                filter:function (event){
                    return event.source&&event.source.isIn();
                },
                content:function (){
                    trigger.source.addTempSkill('guifu_fire',{player:'dying'});
                    trigger.source.addMark('guifu_dam');
                    trigger.source.addMark('guifu_fire',3);
                    if(lib.config['extension_祖安武将_balance']) trigger.source.changeHujia();
                },
                logTarget:"source",
            },
            "renxin_dam":{
                charlotte:true,
                group:["renxin_add","renxin_draw"],
                mark:true,
                frequent:true,
                //marktext:"心",
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_renxin.png>",
                skillAnimation:true,
                animationStr:"人心",
                animationColor:"silver",
                init:function (player){
                    player.addMark('renxin_dam',1);
                },
                sub:true,
                intro:{
                    content:function (storage,player,skill){
        var str='人心：可使用次数还剩'+get.cnNumber(player.storage.renxin_dam,true)+'次';
        return str;
        },
                },
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event,player){
        if(event.num<=0) return false;
        return (event.player.identity=='fan'&&player.countMark('renxin_dam')>=1);
    },
                content:function (){
        var fan=0;
        for(i=0;i<game.players.length;i++) {
                    if(game.players[i].identity=='fan') var fan=fan+1;
            }
        var ram=fan/game.players.length;
        if(fan<=1) var ram=0;
        if(Math.random()<=ram) {
                trigger.cancel();
        trigger.player.identity='zhong';
        trigger.player.setIdentity('汉');
        trigger.player.node.identity.dataset.color='zhong';
        trigger.player.identityShown=true;
        player.storage.zuan_identity=['汉','zhong'];
        player.removeMark('renxin_dam');
            player.say('欢迎将军来我麾下！');
            } else {
               player.say('哈哈，我相信，将军还会来找我的！'); 
            }
                },
            },
            "renxin_add":{
                charlotte:true,
                silent:true,
                forced:true,
                trigger:{
                    global:"die",
                },
                filter:function (event){
        return true;
    },
                content:function (){
        "step 0"
        if (!lib.config['extension_祖安武将_balance']||trigger.player.identity=='fan') {
        player.addMark('renxin_dam');
        }
        player.recover();
    },
            },
            "renxin_draw":{
                trigger:{
                    player:"phaseDrawBegin2",
                },
                silent:true,
                forced:true,
                content:function (){
                         if (lib.config['extension_祖安武将_balance']) {
                         var num=0;
                         for(i=0;i<game.players.length;i++) {
                         if(game.players[i].identity=='fan') num++;
                         }
        trigger.num+=num;
        } else {
        trigger.num+=2;
        }
    },
                ai:{
                    threaten:1.5,
                },
                mod:{
                    maxHandcard:function (player,num){
                         if (lib.config['extension_祖安武将_balance']) {
                         var num=0;
                         for(i=0;i<game.players.length;i++) {
                         if(game.players[i].identity=='fan') num++;
                         }
            return player.maxHp+num;
        } else {
            return player.maxHp+2;
        }
        },
                },
            },
            maxlevel:{
                charlotte:true,
                enable:"phaseUse",
                usable:2,
                filter:function (event,player){
        return player.countCards('h')>=2;
    },
                chooseButton:{
                    dialog:function (player){
            var list=[];
            for(i=0;i<lib.inpile.length;i++){
                if(get.type(lib.inpile[i])=='basic') list.push(['基本','',lib.inpile[i]]);
            }
            return ui.create.dialog('号令群雄',[list,'vcard']);
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button){
            var player=_status.event.player;
            var recover=0,lose=1,players=game.filterPlayer();
            for(i=0;i<players.length;i++){
                if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
                    return (button.link[2]=='sha')?2:-1;
                }
                if(!players[i].isOut()){
                    if(players[i].hp<players[i].maxHp){
                        if(get.attitude(player,players[i])>0){
                            if(players[i].hp<2){
                                lose--;
                                recover+=0.5;
                            }
                            lose--;
                            recover++;
                        }
                        else if(get.attitude(player,players[i])<0){
                            if(players[i].hp<2){
                                lose++;
                                recover-=0.5;
                            }
                            lose++;
                            recover--;
                        }
                    }
                    else{
                        if(get.attitude(player,players[i])>0){
                            lose--;
                        }
                        else if(get.attitude(player,players[i])<0){
                            lose++;
                        }
                    }
                }
            }
            if(lose>recover&&lose>0) return (button.link[2]=='sha')?1:-1;
            if(lose<recover&&recover>0) return (button.link[2]=='tao')?1:-1;
            return (button.link[2]=='tao')?1:-1;
        },
                    backup:function (links,player){
            return {
                filterCard:true,
                selectCard:2,
                audio:2,
                popname:true,
                viewAs:{name:links[0][2]},
            }
        },
                    prompt:function (links,player){
            return '将两张手牌当作'+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    order:2,
                    result:{
                        player:function (player){
                var num=0;
                var cards=player.getCards('h');
                if(cards.length>=3&&player.hp>=3) return 0;
                for(i=0;i<cards.length;i++){
                    num+=Math.max(0,get.value(cards[i],player,'raw'));
                }
                num/=cards.length;
                num*=Math.min(cards.length,player.hp);
                return 12-num;
            },
                    },
                    threaten:1.6,
                },
            },
            levelcard:{
                charlotte:true,
                mod:{
                    maxHandcard:function (player,num,storage){
            var add=0;
            if(player.storage._levelskill>=3) var add=add+1;
            if(player.storage._levelskill>=6) var add=add+1;
            return num+add;
        },
                    cardUsable:function (card,player,num,storage){
            if(player.storage._levelskill>=5&&card.name=='sha') return num+1;
        },
                },
            },
            canghaizhu:{
                charlotte:true,
                marktext:"海",
                mark:true,
            },
            huanhai:{
                charlotte:true,
                marktext:"幻",
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_canghai.png>",
                mark:true,
                intro:{
                    content:"characters",
                },
                init:function (player){
        player.storage.huanhai=[];
        // player.storage.huanhai2=0;
    },
            },
            huanhaicls:{
                charlotte:true,
                firstDo:true,
                trigger:{
                    global:["phaseBefore"],
                    //global:["rountStart"],
                },
                //silent:true,
                marktext:"镜",
                mark:true,
                priority:99,
                forced:true,
                popup:false,
                unique:true,
                filter:function(event,player){
                    if(event.player.identity!='zhu') return false;
                    return true;
                },
                content:function (){
                    /*if(trigger.player.identity!='zhu'){
                        var skills=player.getSkills(true,false);
                        for(i=0;i<skills.length;i++){
                            var info=get.info(skills[i]);
                            if(skills[i]=='huanhaicls'||info.charlotte){
                                skills.splice(i--,1);
                            }
                        }
                        player.disableSkill('huanhaicls',skills);
                    }
                    else {*/
                    player.enableSkill('huanhaicls');
                    player.removeSkill('huanhaicls');
                    //}
                },
                intro:{
                    content:function (storage,player,skill){
                        var str='<li>曲镜：所有技能已失效。';
                        var list=[];
                        for(var i in player.disabledSkills){
                            if(player.disabledSkills[i].contains(skill)){
                                list.push(i);
                            }
                        }
                        if(list.length){
                            str+='<br><li>失效技能：';
                            for(i=0;i<list.length;i++){
                                if(lib.translate[list[i]+'_info']){
                                    str+=get.translation(list[i])+'、';
                                }
                            }
                            return str.slice(0,str.length-1);
                        }else return str;
                    },
                },
                onremove:function (player,skill){
                    player.enableSkill(skill);
                },
                init:function (player,skill){
                        var skills=player.getSkills(true,false);
                        for(i=0;i<skills.length;i++){
                            var info=get.info(skills[i]);
                            if(skills[i]=='huanhaicls'||info.charlotte){
                                skills.splice(i--,1);
                            }
                    }
                        player.disableSkill(skill,skills);
                },
                locked:true,
            },
            qiyue:{
                charlotte:true,
                trigger:{
                    global:["phaseBefore","useCard","drawBefore","phaseEnd"],
                },
                direct:true,
                forced:true,
                /*init:function (player){
                    player.addSkill('qichange');
                    player.addSkill('qi');
                },*/
                content:function (){
        'step 0'
        //标包增强
        if(parseFloat(lib.config['extension_祖安武将_ssr'])!='0'||1==1) {
        lib.characterPackHun={
            "mode_extension_祖安武将":lib.characterPack["mode_extension_祖安武将"]
            }
        }else {
        lib.characterPackHun={
   "standard":lib.characterPack["standard"]
            }
        }
        var list=[];
        for(var a in lib.characterPackHun){
    for(var b in lib.characterPackHun[a]){
        var role=lib.characterPackHun[a][b];
        lib.character[b]=role;
        list.push(['将魂','',b]);
        lib.card[b]={
                enable:true,
                type:'character',
                image:'character/'+b,
                color:'white',
                opacity:1,
                textShadow:'black 0 0 2px',
                chongzhu:true,
                }
    }
            }
        player.chooseButton(["请选择大将英魂",[list,'vcard']]);
        'step 1'
        if(result.bool&&result.links) {
        player.storage.qi=result.links[0][2];
        }
        player.removeSkill('qiyue');
        player.storage.eq1=0;
        player.storage.eq2=0;
        player.storage.eq3=0;
        player.storage.eq4=0;
        player.storage.eq5=0;
    },
                ai:{
                    threaten:1.5,
                },
            },
            jianghun:{
                group:["hunskill","revivehun"],
                charlotte:true,
                skillAnimation:"epic",
                usable:1,
                enable:"phaseUse",
                filter:function (event,player){
                    //return true;
                    return !player.hasSkill('jianghuncold');
                },
                content:function (){
        'step 0'
        //jjhun
        event.cstorage=false;
        if(game.storage[player]) {
            game.oldstorage[player]=[];
            var tmpskill=game.storage[player];
            for(i=0;i<tmpskill.length;i++) game.oldstorage[player].push(tmpskill[i]);
        }
        if(game.jianhunsklist[player]) {
            game.jianoldsklist[player]=[];
            var tmpskill=game.jianhunsklist[player];
            for(i=0;i<tmpskill.length;i++) game.jianoldsklist[player].push(tmpskill[i]);
        }
        if(game.equipjh[player]) {
            game.oldequipjh[player]=[];
            var tmpskill=game.equipjh[player];
            for(i=0;i<tmpskill.length;i++) game.oldequipjh[player].push(tmpskill[i]);
        }
        if(game.oldstorage[player]) event.cstorage=true;
        //alert('1: '+game.jianhunsklist[player]+' | '+game.jianoldsklist[player]);
        game.storage[player]=[];
        var tmpskill=player.storage;
        for(i=0;i<tmpskill.length;i++) game.storage[player].push(tmpskill[i]);
        game.jianhunsklist[player]=[];
        var tmpskill=player.skills;
        for(i=0;i<tmpskill.length;i++) game.jianhunsklist[player].push(tmpskill[i]);
        game.equipjh[player]=[];
        for(i=1;i<6;i++) {
            if(player.isEmpty(i)) {
                var situ='empty';
            }else if(player.isDisabled(i)) {
                var situ='disable';
            }else {
                var situ=player.getEquip(i);
            }
            game.equipjh[player].push(situ);
        }
        if(player.storage._disableJudge) {
            game.equipjh[player].push('disable');
        }else {
            game.equipjh[player].push('enable');
        }
        //alert('1: '+game.jianhunsklist[player]+' | '+game.jianoldsklist[player]);
        var exp=player.storage._expskill;
        var level=player.storage._levelskill;
        var hpp=player.hp/player.maxHp;
        var hunskill=player.name;
        player.init(player.storage.hunskill);
        if(lib.config.mode!='guozhan'){
            if(player.identity=='zhu'){
                player.maxHp++;
            }
        }
        for(i=1;i<6;i++) player.enableEquip(i);
        player.enableJudge();
        var hujia=player.hujia;
        if(event.cstorage) {
            player.storage=game.oldstorage[player];
            player.skills=game.jianoldsklist[player];
            for(i=1;i<6;i++) {
                var situ=game.oldequipjh[player][i-1];
                if(situ=='empty') {

                }else if(situ=='disable') {
                    player.disableEquip(i);
                }else {
                    player.equip(situ);
                }
            }
            var situ=game.oldequipjh[player][5];
            if(situ=='disable') {
                player.disableJudge();
            }
            //player.clearSkills();
            //for(i=0;i<game.jianoldsklist[player].length;i++) player.addSkill(game.jianoldsklist[player][i]);
        }
        //alert('2: '+game.jianhunsklist[player]+' | '+game.jianoldsklist[player]);
        if(parseFloat(lib.config['extension_祖安武将_ssr'])!='0'&&!game.oldstorage[player]) {
            game.strengthPlayer(player);
        }
        if(lib.config['extension_祖安武将_levelstrong']!='off') {
            player.addSkill('levelcard');
            if(player.storage._levelskill>=8) {
                player.gainMaxHp();
            }
        }
        /*if(player.getEquip(1)){
            var e1=player.getEquip(1);
            }else {
                var e1=0;
            }
        if(player.getEquip(2)){
            var e2=player.getEquip(2);
            }else {
                var e2=0;
            }
        if(player.getEquip(3)){
            var e3=player.getEquip(3);
            }else {
                var e3=0;
            }
        if(player.getEquip(4)){
            var e4=player.getEquip(4);
            }else {
                var e4=0;
            }
        if(player.getEquip(5)){
            var e5=player.getEquip(5);
            }else {
                var e5=0;
            }*/
        player.addSkill('jianghun');
        player.addSkill('jianghuncold');
        player.storage.hunskill=hunskill;
        player.markSkill('hunskill');
        player.syncStorage('hunskill');
        player.discard(player.getCards('ej'));
                player.hp=Math.ceil(player.maxHp*hpp);
            player.changeHujia(hujia);
        /*var e=player.storage.eq1;
        if(e!=0){
        var card=game.createCard(e);
        //player.$gain2(card);
        player.equip(card);
            }
        var e=player.storage.eq2;
        if(e!=0){
        var card=game.createCard(e);
        //player.$gain2(card);
        player.equip(card);
            }
        var e=player.storage.eq3;
        if(e!=0){
        var card=game.createCard(e);
        //player.$gain2(card);
        player.equip(card);
            }
        var e=player.storage.eq4;
        if(e!=0){
        var card=game.createCard(e);
        //player.$gain2(card);
        player.equip(card);
            }
        var e=player.storage.eq5;
        if(e!=0){
        var card=game.createCard(e);
        //player.$gain2(card);
        player.equip(card);
            }
        player.storage.eq1=e1;
        player.storage.eq2=e2;
        player.storage.eq3=e3;
        player.storage.eq4=e4;
        player.storage.eq5=e5;*/
        player.storage._expskill=exp;
        player.storage._levelskill=level;
        player.markSkill('_expskill');
        player.syncStorage('_expskill');   
        player.markSkill('_levelskill');
        player.syncStorage('_levelskill');
        'step 1'
        player.link(false);
        'step 2'
        player.turnOver(false);
        //if(player.name.indexOf('ssr_')!=-1) player.name=player.name.slice(4);
        //if(player.name2&&player.name2.indexOf('ssr_')!=-1) player.name2=player.name2.slice(4);
        player.update();
    },
                ai:{
                    basic:{
                        order:2,
                    },
                    result:{
                        player:function (player){
            if(player.storage.hunskill!='simayi'&&player.storage.hunskill!='caocao'&&player.storage.hunskill!='guojia'&&player.storage.hunskill!='xiahoudun'&&player.storage.hunskill!='xuchu'&&player.storage.hunskill!='zhangliao'&&player.storage.hunskill!='zhenji'&&player.storage.hunskill!='guanyu'&&player.storage.hunskill!='huangyueying'&&player.storage.hunskill!='liubei'&&player.storage.hunskill!='machao'&&player.storage.hunskill!='zhangfei'&&player.storage.hunskill!='zhaoyun'&&player.storage.hunskill!='zhugeliang'&&player.storage.hunskill!='daqao'&&player.storage.hunskill!='ganning'&&player.storage.hunskill!='huanggai'&&player.storage.hunskill!='luxun'&&player.storage.hunskill!='lvmeng'&&player.storage.hunskill!='sunquan'&&player.storage.hunskill!='sunshangxiang'&&player.storage.hunskill!='zhouyu'&&player.storage.hunskill!='diaochan'&&player.storage.hunskill!='huatuo'&&player.storage.hunskill!='lvbu'&&player.storage.hunskill!='huaxiong'&&player.storage.hunskill!='yuanshu'&&player.storage.hunskill!='caozhang'&&player.storage.hunskill!='xf_yiji'&&player.storage.hunskill!='gongsunzan') {
            return 1;
            } else {
    for (var i=0;i<game.players.length;i++) {
        var pla=game.players[i];
                //-魏-//
                if(pla.countCards('j')&&player.countCards('h')>=3&&player.storage.hunskill=='simayi') return 1;
                if((player.countCards('j')||player.hp>=3)&&player.storage.hunskill=='guojia') return 1;
                if((player.hp>=3||player.countCards('h',{name:'shan'})<=0)&&player.storage.hunskill=='xiahoudun') return 1;
                if((player.hp>=3||player.countCards('h',{name:'shan'})<=0)&&player.storage.hunskill=='caocao') return 1;
                if((player.getEquip(1)||player.countCards('h',{name:'sha'}))&&player.storage.hunskill=='xuchu') return 1;
                if(game.players.length>=3&&get.attitude(player,pla)<0&&player.countCards('h')<pla.countCards('h')&&player.storage.hunskill=='zhangliao') return 1;
                if(player.countCards('h',{color:'black'})>=2&&player.storage.hunskill=='zhenji') return 1;
                //-蜀-//
                if((player.countCards('h',{color:'red'})>=2)&&player.storage.hunskill=='guanyu') return 1;
                if((player.countCards('h',{type:'trick'})>=2)&&player.storage.hunskill=='huangyueying') return 1;
                if((player.needsToDiscard()>0||player.hp<player.maxHp||(get.attitude(player,pla)>0&&pla.countCards('h')<2))&&player.storage.hunskill=='liubei') return 1;
                if((player.getEquip(1)||player.countCards('h',{name:'sha'}))&&player.storage.hunskill=='machao') return 1;
                if(player.countCards('h',{name:'sha'})>=2&&player.storage.hunskill=='zhangfei') return 1;
                if((player.countCards('h',{name:'sha'})||player.countCards('h',{name:'shan'}))&&player.storage.hunskill=='zhaoyun') return 1;
                if(player.countCards('h')<=1&&player.storage.hunskill=='zhugeliang') return 1;
                //-吴-//
                if((player.hp<=2||player.countCards('h',{suit:'diamond'})>=2)&&player.storage.hunskill=='daqiao') return 1;
                if(player.countCards('he',{color:'black'})>=2&&player.storage.hunskill=='ganning') return 1;
                if((player.hp>=3||player.countCards('h')<=player.hp-2)&&player.storage.hunskill=='huanggai') return 1;
                if(player.countCards('h')<=1&&player.storage.hunskill=='luxun') return 1;
                if(player.needsToDiscard()>2&&player.storage.hunskill=='lvmeng') return 1;
                if(player.countCards('h')>=3&&player.storage.hunskill=='sunquan') return 1;
                if((player.countCards('e')>=2||(get.attitude(player,pla)>0&&pla.hp<pla.maxHp&&player.countCards('h')>=2))&&player.storage.hunskill=='sunshangxiang') return 1;
                if(player.countCards('h')<3&&player.storage.hunskill=='zhouyu') return 1;
                //-群-//
                if(((player.countCards('he')>=2&&get.attitude(player,pla)<0&&pla.sex=='male')||player.countCards('h')<=2)&&player.storage.hunskill=='diaochan') return 1;
                if(get.attitude(player,pla)>0&&pla.hp<pla.maxHp&&player.countCards('h')>=3&&player.storage.hunskill=='huatuo') return 1;
                if((player.countCards('h',{name:'juedou'})||player.countCards('h',{name:'sha'}))&&player.storage.hunskill=='lvbu') return 1;
                //-2013-//
                if(player.hp<player.maxHp&&player.storage.hunskill=='huaxiong') return 1;
                if(player.countCards('h')==player.hp&&player.storage.hunskill=='yuanshu') return 1;
                //-2019-//
                if((player.countCards('h')<=2||player.countCards('h',{name:'sha'})>=2)&&player.storage.hunskill=='caozhang') return 1;
                if(get.attitude(player,pla)>0&&pla.hp<=1&&player.storage.hunskill=='xf_yiji') return 1;
                if((!player.getEquip(1)||(!player.getEquip(3)&&!player.getEquip(4)))&&player.storage.hunskill=='gongsunzan') return 1;
                }
            }
    },
                    },
                },
            },
            hunskill:{
                charlotte:true,
                mark:true,
                marktext:"将",
                init:function (player){
    player.storage.hunskill=0;
    player.markSkill('hunskill');
    player.syncStorage('hunskill');   
    },
                intro:{
                    content:function (storage,player,skill){
                        var str='<li>你的将魂：'+get.translation(player.storage.hunskill);
                        return str;
                    },
                },
            },
            jianghuncold:{
                silent:true,
                charlotte:true,
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                mark:true,
                marktext:"冷",
                init:function (player){
                    var spmod=[2,3,4];
                    if(spmod.contains(parseFloat(lib.config['extension_祖安武将_mode']))) {
                        var round=2;
                    }else {
                        var round=1;
                    }
                    player.storage.jianghuncold=round;
                    player.markSkill('jianghuncold');
                    player.syncStorage('jianghuncold');
                },
                content:function (){
        player.storage.jianghuncold-=1;
        player.markSkill('jianghuncold');
        player.syncStorage('jianghuncold');
        if(player.storage.jianghuncold<1){
            player.removeSkill('jianghuncold');
        }
    },
                intro:{
                    content:"mark",
                },
                popup:false,
            },
            revivehun:{
                priority:-99,
                unique:true,
                enable:"chooseToUse",
                skillAnimation:true,
                animationStr:"重生",
                animationColor:"orange",
                filter:function (event,player){
        if(event.type=='dying'){
            if(player!=event.dying) return false;
            return true;
        }
        return false;
    },
                content:function (){
        'step 0'
        player.removeSkill('jianghun');
        player.unmarkSkill('hunskill');
        player.unmarkSkill('jianghuncold');
        player.discard(player.getCards('hej'));
        'step 1'
        if(player.hp<3){
            player.recover(3-player.hp);
        }
        'step 2'
        player.draw(3);
        'step 3'
        player.link(false);
        'step 4'
        player.turnOver(false);
    },
                ai:{
                    order:1,
                    save:true,
                    result:{
                        player:function (player){
                return 10;
            },
                    },
                    threaten:function (player,target){
            return 0.3;
        },
                },
            },
            jiwuskill:{
                charlotte:true,
                trigger:{
                    source:"damageBegin",
                },
                priority:50,
                filter:function (event,player){
        return event.card.name=='sha';
    },
                forced:true,
                content:function (){
        player.removeSkill('jiwuskill');
},
            },
            taoluo:{
                charlotte:true,
                enable:"phaseUse",
                filter:function (event,player){
        return player.countCards('h','tao')>0;
    },
                filterCard:{
                    name:"tao",
                },
                prepare:function (cards,player){
        player.$throw(cards,1000);
    },
                discard:false,
                delay:0.5,
                content:function (){
        "step 0"
        player.draw();
        "step 1"
        for(i=0;i<cards.length;i++){
            cards[i].discard();
        }
    },
                ai:{
                    basic:{
                        order:1,
                    },
                    result:{
                        player:1,
                    },
                },
            },
            dis:{
                silent:true,
                forced:true,
                trigger:{
                    global:["useCard","phaseBegin","phaseEnd","damageBegin"],
                },
                filter:function (event,player){
        return player.countCards('hej');
    },
                content:function (){
        player.discard(player.getCards('hej'));
    },
                popup:false,
            },
            nolink:{
                silent:true,
                trigger:{
                    player:"linkAfter",
                },
                forced:true,
                filter:function (event,player){
        return player.isLinked();
    },
                content:function (){
        player.link(false);
    },
                popup:false,
            },
            plusdistance:{
                charlotte:true,
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-1;
        },
                },
            },
            "ansha_nei":{
                group:["ansha_nei_zhong","ansha_nei_die"],
                subSkill:{
                    zhong:{
                        silent:true,
                        trigger:{
                            player:["phaseEnd"],
                        },
                        forced:true,
                        popup:false,
                        filter:function (event,player){
        return player.identity!='fan';
    },
                        content:function (){
                         if (lib.config['extension_祖安武将_balance']) {
                         player.identity='zhong';
                         } else {
                         player.identity='nei';
                         }
            },
                        sub:true,
                    },
                    die:{
                        trigger:{
                            player:["dying"],
                        },
                        priority:-99,
                        forced:true,
                        popup:false,
                        filter:function (event,player){
        return player.identity!='fan';
    },
                        content:function (){
                        player.identity='nei';
                        for(i=0;i<game.players.length;i++){
                        if(game.players[i].hasSkill('ansha_zhong')) game.players[i].identity='zhong';
                        }
            },
                        sub:true,
                    },
                },
                charlotte:true,
                //marktext:"身",
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_shenfen.png>",
                mark:true,
                intro:{
                    mark:function (dialog,content,player){
                if(player==game.me||player.isUnderControl()){
                    return '你的身份是：刺客';
                }
                else{
                    return '身份牌已隐藏';
                }
        },
                    content:function (content,player){
                if(player==game.me||player.isUnderControl()){
                    return '你的身份是：刺客';
                }
                return '身份牌已隐藏';
        },
                },
                silent:true,
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return player.identity!='fan';
    },
                forced:true,
                content:function (){
                         if (!lib.config['extension_祖安武将_balance']) {
                         player.identity='zhong';
                         } else {
                         player.identity='nei';
                         }
    },
                popup:false,
            },
            "ansha_zhong":{
                group:["ansha_zhong_nei","ansha_zhong_die"],
                subSkill:{
                    nei:{
                        silent:true,
                        trigger:{
                            player:["phaseEnd"],
                        },
                        filter:function (event,player){
        return true;
    },
                        forced:true,
                        popup:false,
                        content:function (){
                         if (lib.config['extension_祖安武将_balance']) {
                         player.identity='zhong';
                         } else {
                         player.identity='nei';
                         }
            },
                        sub:true,
                    },
                    die:{
                        trigger:{
                            player:["dying"],
                        },
                        priority:-99,
                        forced:true,
                        popup:false,
                        content:function (){
                         if (lib.config['extension_祖安武将_balance']) {
                         for(i=0;i<game.players.length;i++){
                         if(game.players[i].hasSkill('ansha_zhong')&&game.players[i]!=player) game.players[i].identity='nei';
                         }
                         player.identity='zhong';
                         } else {
                         player.identity='zhong';
                         }
            },
                        sub:true,
                    },
                },
                charlotte:true,
                //marktext:"身",
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/mode_shenfen.png>",
                mark:true,
                intro:{
                    mark:function (dialog,content,player){
                if(player==game.me||player.isUnderControl()){
                    return '你的身份是：忠臣';
                }
                else{
                    return '身份牌已隐藏';
                }
        },
                    content:function (content,player){
                if(player==game.me||player.isUnderControl()){
                    return '你的身份是：忠臣';
                }
                return '身份牌已隐藏';
        },
                },
                silent:true,
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return true;
    },
                forced:true,
                content:function (){
                         if (!lib.config['extension_祖安武将_balance']) {
                         player.identity='zhong';
                         } else {
                         player.identity='nei';
                         }
    },
                popup:false,
            },
            qunxiongdraw:{
                silent:true,
                charlotte:true,
                trigger:{
                    global:"phaseDrawAfter",
                },
                filter:function (event,player){
                    return event.player!=player&&(lib.config['extension_祖安武将_balance']);
                },
                content:function (){
                    player.draw(trigger.num);
                },
                forced:true,
                popup:false,
            },
            qunxiongdis:{
                silent:true,
                charlotte:true,
                trigger:{
                    global:"phaseDiscardAfter",
                },
                filter:function (event,player){
                    return event.player!=player&&(lib.config['extension_祖安武将_balance']);
                },
                content:function (){
                    var num=Math.min(trigger.num,player.countCards('h'));
                    var card=player.getCards('h');
                    player.discard(card.randomGets(num));
                },
                forced:true,
                popup:false,
            },
            qunxiongsha:{
                charlotte:true,
                trigger:{
                    source:["dieBegin"],
                },
                forced:true,
                filter:function (event,player){
        return event.player!=player&&(lib.config['extension_祖安武将_balance']); 
    },
                content:function (){
player.storage.batime-=1;
player.markSkill('batime');
player.syncStorage('batime');
if(player.storage.batime<=0){
for(i=0;i<game.players.length;i++){
if(game.players[i]!=player){
game.players[i].die();
}
}
}
    },
            },
            anyezhu:{
                skillAnimation:true,
                animationStr:"夜幕降临",
                animationColor:"purple",
                charlotte:true,
                silent:true,
                forced:true,
                direct:true,
                priority:-50,
                trigger:{
                    player:"phaseAfter",
                },
                filter:function (event,player){
        return player.identity=='zhu'&&game.dead.length>0;
    },
                content:function (){
        for(j=0;j<game.players.length;j++){
            game.players[j].turnOver(true);
            }
        for(i=0;i<game.dead.length;i++){
            var dead=game.dead[i];
            dead.revive(1);
            game.addVideo('revive',dead);
            dead.hp=dead.maxHp;
            dead.draw(4);
            dead.setIdentity('鬼');
            dead.node.identity.dataset.color='nei';
            dead.identityShown=true;
            dead.addSkill('anyezhu_gui');
            dead.storage.zuan_identity=['鬼','nei'];
        }
    },
                subSkill:{
                    gui:{
                        trigger:{
                            player:"phaseAfter",
                        },
                        forced:true,
                        content:function (){
                    player.removeSkill('anyezhu_gui');
                player.setIdentity();
                player.identityShown=false;
                player.die();
                player.storage.zuan_identity=[];
    },
                        mod:{
                            targetEnabled:function (card,player,target,now){
            return false;
        },
                        },
                        mark:true,
                        marktext:"鬼",
                        init:function (player){
    player.storage.anyezhu_gui=0;
    player.markSkill('anyezhu_gui');
    player.syncStorage('anyezhu_gui');
            },
                        sub:true,
                        intro:{
                            content:"mark",
                        },
                    },
                },
            },
            "zuan_hudun":{
                charlotte:true,
                group:["zuan_hudun_rec","zuan_gaindun","zuan_hudun_link"],
                subSkill:{
                    link:{
                        trigger:{
                            player:["damageBegin4"],
                        },
                        locked:true,
                        silent:true,
                        forced:true,
                        priority:-40,
                        filter:function (event,player){
                            if(player.hasSkill('jingcheng')) return false;
                            return event.num>0&&event.nature&&player.isLinked(); 
                        },
                        content:function (){
                            'step 0'
                            //trigger.cancel();
                            /*event.num=trigger.num;
                            event.nature=trigger.nature;
                            event.card=trigger.card;
                            event.cards=trigger.cards;
                            event.skill=trigger.skill;
                            event.source=trigger.source;
                            player.storage.yuanqi_players=[];*/
                            game.yuanqilinkdamage=[];
                            game.yuanqilinkdamage['num']=trigger.num;
                            game.yuanqilinkdamage['nature']=trigger.nature;
                            game.yuanqilinkdamage['card']=trigger.card;
                            game.yuanqilinkdamage['skill']=trigger.skill;
                            game.yuanqilinkdamage['source']=trigger.source;
                            'step 1'
                            player.link(false);
                            //player.damage(event.num,event.nature,event.card,event.cards,event.skill,event.source);
                            for(i=0;i<game.players.length;i++) {
                                if(game.players[i].isLinked()&&game.players[i]!=player) {
                                    game.players[i].link(false);
                                    game.players[i].addTempSkill('zuan_hudun_linkdam');
                                    //player.storage.yuanqi_players.push(game.players[i]);
                                    //game.players[i].damage(event.num,event.nature,event.card,event.skill,event.source);
                                }
                            }
                        },
                        sub:true,
                        popup:false,
                    },
                    linkdam:{
                        trigger:{
                            global:["damageEnd","yuanqilinkdamage"],
                        },
                        charlotte:true,
                        locked:true,
                        silent:true,
                        forced:true,
                        priority:-1,
                        filter:function (event,player){
                            if(player.hasSkill('jingcheng')) return false;
                            return game.yuanqilinkdamage; 
                        },
                        content:function (){
                            'step 0'
                            event.num=game.yuanqilinkdamage['num'];
                            event.nature=game.yuanqilinkdamage['nature'];
                            event.card=game.yuanqilinkdamage['card'];
                            event.skill=game.yuanqilinkdamage['skill'];
                            event.source=game.yuanqilinkdamage['source'];
                            player.removeSkill('zuan_hudun_linkdam');
                            'step 1'
                            player.damage(event.num,event.nature,event.card,event.skill,event.source);
                        },
                        sub:true,
                        popup:false,
                    },
                    norec:{
                        sub:true,
                    },
                    rec:{
                        trigger:{
                            player:"phaseBegin",
                        },
                        silent:true,
                        locked:true,
                        forced:true,
                        filter:function (event,player){
                            return !player.hasSkill('jingcheng');
                        },
                        content:function (){
                'step 0'
                if(player.hasSkill('yuanqi_xiudun')&&player.hasSkill('zuan_hudun_norec')) player.removeSkill('zuan_hudun_norec');
                'step 1'
        if(player.hasSkill('zuan_hudun_norec')) {
            player.removeSkill('zuan_hudun_norec');
        }else if(player.countMark('zuan_hudun')<player.storage.zuan_maxhujia) {
        player.addMark('zuan_hudun',false);
        game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
            }
    },
                        sub:true,
                        popup:false,
                    },
                },
                mod:{
                    maxHandcardBase:function (player,num){
                        return num+player.countMark('zuan_hudun');
                    },
                },
                priority:-50,
                marktext:"<img style=width:15px src="+lib.assetURL+"extension/祖安武将/basic/zuan_hudun.png>",
                unique:true,
                trigger:{
                    player:["damageBegin4","loseHpBegin"],
                },
                locked:true,
                silent:true,
                forced:true,
                filter:function (event,player){
                    if(player.hasSkill('jingcheng')) return false;
                    return event.num>0; 
                },
                content:function (){
                    event.linkdamage=false;
                    player.addTempSkill('zuan_hudun_norec',{player:'die'});
                    var hurt=0;
                    event.linkplayer=[];
                    if(player.countMark('zuan_hudun')) {
                        if(trigger.source!=undefined&&trigger.source.hasSkill('yuanqi_zhenshang')) {
                    }else {
                        var num=trigger.num;
                        if(player.hasSkill('yuanqi_suidun')) {
                            if (trigger.source!=undefined) trigger.source.chooseToDiscard(1,'h',true);
                                player.addTempSkill('yuanqi_suidun_detect');
                            }
                            if(trigger.num<=player.countMark('zuan_hudun')&&trigger.name=='damage') event.linkdamage=true;
                            if(trigger.num>=player.countMark('zuan_hudun')) {
                                if(player.hasSkill('yuanqi_landun')) {
                                    trigger.cancel();
                                    player.addTempSkill('yuanqi_landun_detect',{player:'phaseBegin'});
                                }else {
                                    if(num==player.countMark('zuan_hudun')) {
                                        trigger.cancel();
                                    }else trigger.num=num-player.countMark('zuan_hudun');
                                }
                                var hurt=player.countMark('zuan_hudun');
                                player.removeMark('zuan_hudun',player.countMark('zuan_hudun'),false);
                            }else {
                                trigger.cancel();
                                var hurt=num;
                                player.removeMark('zuan_hudun',num,false);
                            }
                        }
                    }
                    player.markSkill('zuan_hudun');
                    if(hurt>0) {
                        if(trigger.name=='damage') {
                            if(trigger.animate!==false){
                                player.$damage(trigger.source);
                                game.broadcastAll(function(nature,player){
                                    if(lib.config.animation&&!lib.config.low_performance){
                                        if(nature=='fire'){
                                            player.$fire();
                                        }
                                        else if(nature=='thunder'){
                                            player.$thunder();
                                        }
                                    }
                                },trigger.nature,player);
                                player.$damagepop(-hurt,trigger.nature);
                            }
                            var str='的护盾承受了';
                            if(trigger.source) str+='来自<span class="bluetext">'+(trigger.source==player?'自己':get.translation(trigger.source))+'</span>的';
                            str+=get.cnNumber(hurt)+'点';
                            if(trigger.nature) str+=get.translation(trigger.nature)+'属性';
                            str+='伤害';
                            if(trigger.source) game.zuanExp(trigger.source,hurt*7);
                        }else {
                            player.$damagepop(-hurt,'water');
                            var str='失去了'+get.cnNumber(num)+'点护盾';
                        }
                        game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
                        if(player.hasSkill('yuanqi_guidun')) player.draw(Math.abs(hurt));
                        /*next.setContent(function(){
                            var hs=player.getCards('he');
                            if(hs.length) player.discard(hs);
                        });*/
                        game.log(player,str);
                        player.update();
                        if(event.linkdamage) event.trigger("yuanqilinkdamage");
                    }
                },
                intro:{
                    name:"护盾",
                    content:function (storage,player,skill){
                        var maxhujia=player.storage.zuan_maxhujia;
                        if(player.hasSkill('yuanqi_hudun')) {
                            maxhujia='<span class=\"hujia\" style=\"color:#00BFFF\">'+player.storage.zuan_maxhujia+'</span>';
                        }
                        if(player.hasSkill('yuanqi_jindun')&&player.storage.yuanqi_jindun&&player.storage.yuanqi_jindun>0) {
                            maxhujia='<span class=\"hujia\" style=\"color:#FFA500\">'+player.storage.zuan_maxhujia+'</span>';
                        }
                        var str='护盾值：'+player.countMark('zuan_hudun')+'/'+maxhujia;
                        if(player.hasSkill('yuanqi_xiudun')||!player.hasSkill('zuan_hudun_norec')) var str=str+'<li>下回合开始你恢复一点护盾';
                        var skillnum=0;
                        var str=str+'<br>——————<br>天赋加成：';
                        var list=lib.config.yuanqilist;
                        for(i=0;i<list.length;i++) {
                            if(player.hasSkill(list[i])) {
                                var str=str+'<br>◈'+get.translation(list[i]);
                                skillnum++;
                            }
                        }
                        if(skillnum==0) {
                            var str=str+'<br>（尚未获得天赋）';
                        }
                        var str=str+'<br>——————<br>已获得（'+skillnum+'/6）';
                        return str;
                    },
                },
                popup:false,
            },
            "yuanqi_landun":{
                charlotte:true,
                subSkill:{
                    detect:{
                        trigger:{
                            player:"damageBegin",
                        },
                        priority:25,
                        forced:true,
                        mark:true,
                        marktext:"免伤",
                        intro:{
                            content:"<li>免疫下一次伤害",
                        },
                        content:function (){
        trigger.cancel();
        player.removeSkill('yuanqi_landun_detect');
    },
                        sub:true,
                    },
                },
            },
            "yuanqi_huodun":{
                charlotte:true,
                trigger:{
                    player:"damageBegin",
                },
                priority:25,
                filter:function (event){
        return event.nature=='fire';
    },
                forced:true,
                content:function (){
        trigger.cancel();
    },
                ai:{
                    nofire:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'fireDamage')) return 'zerotarget';
            },
                    },
                },
            },
            "yuanqi_dudun":{
                charlotte:true,
                trigger:{
                    player:"loseHpBefore",
                },
                priority:25,
                filter:function (event){
        return true;
    },
                forced:true,
                content:function (){
        trigger.cancel();
    },
                ai:{
                    nodu:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'loseHp')) return 'zerotarget';
            },
                    },
                },
            },
            "yuanqi_cidun":{
                charlotte:true,
                trigger:{
                    player:"damageBegin",
                },
                priority:25,
                filter:function (event,player){
        if(event.source!=undefined) {
        return get.distance(player,event.source)<=1&&event.card.name!='sha';
        }else return true;
    },
                logTarget:"source",
                forced:true,
                content:function (){
        trigger.cancel();
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'damage')&&card.name!='sha'&&get.distance(target,player)<=1) return 'zerotarget';
            },
                    },
                },
            },
            "yuanqi_xuedun":{
                charlotte:true,
                init:function (player,skill){
        player.gainMaxHp();
        player.recover();
        player.update();
    },
                onremove:function (player,skill){
        if(player.maxHp>1) {
        player.loseMaxHp();
            }
    },
            },
            "yuanqi_hudun":{
                charlotte:true,
                init:function (player,skill){
        player.storage.zuan_maxhujia++;
        game.log(player,'增加了一点护盾上限');
        player.addMark('zuan_hudun',false);
        game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
        player.update();
    },
                onremove:function (player,skill){
        player.storage.zuan_maxhujia--;
        game.log(player,'失去了一点护盾上限');
        if(player.storage.zuan_maxhujia<player.countMark('zuan_hudun')) {
            player.removeMark('zuan_hudun');
            game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
        }
    },
            },
            "yuanqi_suidun":{
                charlotte:true,
                subSkill:{
                    detect:{
                        trigger:{
                            player:"damageBegin",
                        },
                        priority:25,
                        forced:true,
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "yuanqi_zishou":{
                charlotte:true,
                trigger:{
                    target:"useCardToTargeted",
                },
                priority:3,
                forced:true,
                filter:function (event,player){
        return event.card.name=='sha';
    },
                content:function (){
        "step 0"
        var eff=get.effect(player,trigger.card,trigger.player,trigger.player);
        trigger.player.chooseCard('h','弃置一张手牌，否则杀对'+get.translation(player.name)+'无效',function(card){
            return true;
        }).set('ai',function(card){
            if(_status.event.eff>0){
                return 9-get.value(card);
            }
            return 0;
        }).set('eff',eff);
        "step 1"
        if(result.bool==false){
            trigger.player.discard(result.cards);
            trigger.getParent().excluded.add(player);
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha'&&get.attitude(player,target)<0){
                    if(_status.event.name=='xiangle') return;
                    var bs=player.getCards('h');
                    if(bs.length<2) return 0;
                    if(player.hasSkill('jiu')||player.hasSkill('tianxianjiu')) return;
                    if(bs.length<=3&&player.countCards('h','sha')<=1){
                        for(i=0;i<bs.length;i++){
                            if(bs[i].name!='sha'&&get.value(bs[i])<7){
                                return [1,0,1,-0.5];
                            }
                        }
                        return 0;
                    }
                    return [1,0,1,-0.5];
                }
            },
                    },
                },
            },
            "yuanqi_yaoshui":{
                charlotte:true,
                trigger:{
                    target:"taoBegin",
                },
                forced:true,
                filter:function (event,player){
        if(event.player==player) return true;
        return false;
    },
                content:function (){
        trigger.baseDamage++;
    },
            },
            "yuanqi_xilan":{
                charlotte:true,
                trigger:{
                    global:"dying",
                },
                forced:true,
                filter:function (event,player){
        return _status.currentPhase==player;
    },
                content:function (){
        player.draw(2);
    },
            },
            "yuanqi_xixue":{
                charlotte:true,
                trigger:{
                    source:"damageSource",
                },
                filter:function (event,player){
        return event.num>0;
    },
                forced:true,
                content:function (){
        "step 0"
        event.num=trigger.num;
        'step 1'
        event.num--;
        player.judge(function(card){
                if(get.color(card)=='red') return 2;
            return -0.5;
        });
        "step 2"
        if(result.bool){
            player.recover();
        }
        if(event.num>0) event.goto(1);
    },
            },
            "yuanqi_xuli":{
                charlotte:true,
                trigger:{
                    player:"phaseJieshuBegin",
                },
                priority:-1,
                forced:true,
                filter:function (event,player){
        if(player.getHistory('skipped').contains('phaseUse')) return true;
        var history=player.getHistory('useCard').concat(player.getHistory('respond'));
        for(i=0;i<history.length;i++){
            if(history[i].card.name=='sha'&&history[i].isPhaseUsing()) return false;
        }
        return true;
    },
                content:function (){
        player.draw(2);
    },
            },
            "yuanqi_xiandan":{
                charlotte:true,
                mod:{
                    selectTarget:function (card,player,range){
            if(range[1]==-1) return;
            if(card.name=='sha') range[1]+=1;
        },
                },
            },
            "yuanqi_miaozhun":{
                charlotte:true,
                forced:true,
                shaRelated:true,
                trigger:{
                    player:"useCardToPlayered",
                },
                priority:5,
                check:function (event,player){
        return get.attitude(player,event.target)<=0;
    },
                filter:function (event,player){
        return event.card.name=='sha';
    },
                logTarget:"target",
                content:function (){
        "step 0"
        player.judge(function(card){
                if(get.color(card)=='black') return 2;
            return -0.5;
        });
        "step 1"
        if(result.bool){
            trigger.getParent().directHit.add(trigger.target);
        }
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function (player,tag,arg){
            if(get.attitude(player,arg.target)>0||arg.card.name!='sha'||!ui.cardPile.firstChild||get.color(ui.cardPile.firstChild,player)!='black') return false;
        },
                },
            },
            "yuanqi_jiguang":{
                charlotte:true,
                trigger:{
                    source:"damageBegin",
                },
                priority:-50,
                filter:function (event,player){
                if(event.nature&&event.nature!='thunder') return false;
                return event.num>0;
    },
                forced:true,
                content:function (){
        trigger.nature='thunder';
        trigger.player.chooseToDiscard(1,'he',true);
    },
            },
            "yuanqi_fanshe":{
                charlotte:true,
                usable:1,
                trigger:{
                    player:"shaMiss",
                },
                direct:true,
                filter:function (event,player){
        return true;
        return player.canUse('sha',event.target,false)&&(player.hasSha()||_status.connectMode&&player.countCards('h'));
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt2('yuanqi_fanshe'),'为此【杀】指定另外一个目标',1,function(card,player,target){
            return player.canUse(trigger.card,target,false)&&trigger.target!=target;
        },function(target){
            return -get.attitude(player,target);
        });
        'step 1'
        if(result.bool) {
            player.useCard(trigger.card,result.targets[0],false);
        }
    },
            },
            "yuanqi_yuansu":{
                charlotte:true,
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event,player){
        return event.nature&&event.num>0;
    },
                forced:true,
                content:function (){
        "step 0"
        player.judge(function(card){
                if(get.color(card)=='black') return 2;
            return -0.5;
        });
        "step 1"
        if(result.bool){
            trigger.num++;
        }
    },
            },
            "yuanqi_chuantou":{
                charlotte:true,
                group:"qinggang_skill",
                ai:{
                    "unequip_ai":true,
                    skillTagFilter:function (player,tag,arg){
            if(arg&&arg.name=='sha') return true;
            return false;
        },
                },
            },
            "yuanqi_fangyu":{
                charlotte:true,
                trigger:{
                    player:["damageBegin","loseHpBegin"],
                },
                priority:25,
                forced:true,
                filter:function (event,player){
        if(event.num<=1) return false;
        return true;
    },
                content:function (){
        trigger.num=1;
    },
                ai:{
                    filterDamage:true,
                },
            },
            "yuanqi_xiudun":{
                charlotte:true,
            },
            "zuan_gaindun":{
                trigger:{
                    player:"phaseBefore",
                },
                priority:5,
                silent:true,
                forced:true,
                filter:function (event,player){
                    if(player.hasSkill('jingcheng')) return false;
                    return true;
                },
                filter:function (event,player){
                    var spmod=[2,3,4];
                    if(spmod.contains(parseFloat(lib.config['extension_祖安武将_mode']))) {
                        var round=3;
                    }else {
                        var round=2;
                    }
                    var skillnum=0;
                    event.list=lib.config.yuanqilist;
                    for(i=0;i<event.list.length;i++) {
                        if(player.hasSkill(event.list[i])) skillnum++;
                    }
                    return skillnum<Math.ceil(game.roundNumber/round)&&skillnum<6;
                },
                content:function (){
        'step 0'
        event.dun=[];
        event.list=lib.config.yuanqilist;
        for(i=0;i<event.list.length;i++) {
            if(!player.hasSkill(event.list[i])) event.dun.push(event.list[i]);
        }
        var num=3;
        if(player.hasSkill('yuanqi_xuanze')) var num=5;
        event.skills=event.dun.randomGets(num);
        var info='- 请选择一个天赋 -<br><br>';
        var tips=[];
        for(i=0;i<event.skills.length;i++) {
            var info=info+'<li>〖'+get.translation(event.skills[i])+'〗 '+get.translation(event.skills[i]+'_info');
            tips.push('<li>〖'+get.translation(event.skills[i])+'〗 '+get.translation(event.skills[i]+'_info'));
        }
        var info=info+'<br><br><br><br>';
        /*
        player.chooseControl().set('prompt','征建：请选择一种效果').set('choiceList',[
            '令“出牌阶段内未使用过非基本牌”的其他角色受到惩罚',
            '令“出牌阶段内未获得过牌”的其他角色受到惩罚',
            ]).set('ai',()=>Math.random()<=0.5?0:1);
        player.chooseControl(event.skills,function(){
            return event.skills.randomGet();
        }).set('prompt',info);
        */
        player.chooseControl(event.skills,function(){
            return event.skills.randomGet();
        }).set('choiceList',tips);
        'step 1'
        player.addSkill(result.control);
        game.log(player,'获得了<span class=\"zuantext\" style=\"color: #00FFFF\">天赋〖'+get.translation(result.control)+'〗</span>');
        player.logSkill(result.control);
    },
                popup:false,
            },
            "yuanqi_xuanze":{
                charlotte:true,
            },
            "yuanqi_yiwang":{
                charlotte:true,
                trigger:{
                    player:"phaseBefore",
                },
                priority:-20,
                forced:true,
                content:function (){
        'step 0'
        event.skills=[];
        event.list=lib.config.yuanqilist;
        for(i=0;i<event.list.length;i++) {
            if(player.hasSkill(event.list[i])&&event.list[i]!='yuanqi_yiwang') event.skills.push(event.list[i]);
        }
        if(event.skills.length>0) {
        player.chooseControl(event.skills,function(){
            return event.skills.randomGet();
        }).set('prompt','<li>〖遗忘天赋〗<br>请选择遗忘的天赋<br><br><br><br>');
            }
        'step 1'
        if(result.control) player.removeSkill(result.control);
        player.removeSkill('yuanqi_yiwang');
    },
                popup:false,
            },
            "yuanqi_shangdian":{
                charlotte:true,
                trigger:{
                    player:"phaseDrawBegin2",
                },
                priority:7,
                forced:true,
                filter:function (event,player){
        return !event.numFixed;
    },
                content:function (){
        trigger.num++;
    },
            },
            "yuanqi_bingdun":{
                charlotte:true,
                init:function (player,skill){
        if(player.isTurnedOver()) player.turnOver();
        player.disableJudge();
    },
                onremove:function (player,skill){
        player.enableJudge();
    },
                trigger:{
                    player:["turnOverBefore"],
                },
                priority:20,
                forced:true,
                filter:function (event,player){
        return !player.isTurnedOver();
    },
                content:function (){
        trigger.cancel();
        game.log(player,'取消了翻面');
    },
                ai:{
                    noturn:true,
                    effect:{
                        target:function (card,player,target){
                if(get.type(card)=='delay') return -1;
            },
                    },
                },
            },
            "yuanqi_jinzhan":{
                charlotte:true,
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-1;
        },
                },
            },
            "yuanqi_lengque":{
                charlotte:true,
                init:function (player,skill){
        var skills=player.getSkills(true,false);
        for(i=0;i<skills.length;i++){
             var info=get.info(skills[i]);
             if(typeof info.usable=='number'){
                  info.usable++;
             }
        }
    },
                onremove:function (player,skill){
        var skills=player.getSkills(true,false);
        for(i=0;i<skills.length;i++){
             var info=get.info(skills[i]);
             if(typeof info.usable=='number'){
                  info.usable--;
             }
        }
    },
            },
            "yuanqi_nengliang":{
                charlotte:true,
                mod:{
                    maxHandcardBase:function (player,num){
            return num+3;
        },
                },
            },
            "yuanqi_suji":{
                charlotte:true,
                mod:{
                    cardUsable:function (card,player,num){     
            if(card.name=='sha') return num+1;
        },
                },
            },
            "yuanqi_leidun":{
                charlotte:true,
                trigger:{
                    player:"damageBegin",
                },
                priority:25,
                filter:function (event){
        return event.nature=='thunder';
    },
                forced:true,
                content:function (){
        trigger.cancel();
    },
                ai:{
                    nofire:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'thunderDamage')) return 'zerotarget';
            },
                    },
                },
            },
            "yuanqi_zhenshang":{
                charlotte:true,
            },
            "firedam3":{
                trigger:{
                    global:["roundStart"],
                },
                forced:true,
                filter:function (event,player){
                    if(lib.config['extension_祖安武将_balance']) {
                        return game.countPlayer(function(current){
                            return current.canAddJudge('huoshan');
                        })>0&&game.countPlayer(function(current){
                            return current.hasJudge('huoshan');
                        })<1;
                    }
                },
                content:function (){
                    'step 0'
                    event.card=game.createCard('huoshan');
                    //player.$gain(event.card);
                    'step 1'
                    event.players=game.filterPlayer(function(current){
                        return current.canAddJudge('huoshan');
                    });
                    'step 2'
                    var target=event.players.randomGet();
                    player.line(target,'fire');
                    target.addJudge(event.card);
                },
            },
            "yuanqi_diaoxiang":{
                charlotte:true,
                global:"yuanqi_diaoxiang2",
                trigger:{
                    player:"phaseBefore",
                },
                priority:-20,
                forced:true,
                filter:function (event,player){
        if(player.storage.zhuSkill_yuanqi_diaoxiang) return false;
        var mode=get.mode();
        return (mode=='identity'||(mode=='versus'&&_status.mode=='four'));
    },
                onremove:function (player,skill){
        if(player.storage.zhuSkill_yuanqi_diaoxiang) {
        var list=player.storage.zhuSkill_yuanqi_diaoxiang;
        player.removeSkill(list);
            }
    },
                content:function (){
        var list=[];
        var zhu=get.zhu(player);
        if(zhu&&zhu!=player&&zhu.skills){
            for(i=0;i<zhu.skills.length;i++){
                if(lib.skill[zhu.skills[i]]&&lib.skill[zhu.skills[i]].zhuSkill){
                    list.push(zhu.skills[i]);
                }
            }
        }
        player.addAdditionalSkill('yuanqi_diaoxiang',list);
        player.storage.zhuSkill_yuanqi_diaoxiang=list;
        game.broadcastAll(function(list){
            game.expandSkills(list);
            for(var i of list){
                var info=lib.skill[i];
                if(!info) continue;
            }
        },list);
    },
                popup:false,
            },
            "yuanqi_diaoxiang2":{
                charlotte:true,
                enable:"phaseUse",
                filterCard:true,
                selectCard:[1,Infinity],
                discard:false,
                lose:false,
                delay:0,
                filter:function (card,player,target){
        var mode=get.mode();
        if (mode=='identity'||(mode=='versus'&&_status.mode=='four')) return false;
        var num=0;
        for(i=0;i<game.players.length;i++){
            if(game.players[i].hasSkill('yuanqi_diaoxiang')) num++;
            }
        if(num==0) return false;
        return player.countCards('h')>0&&(num>1||!player.hasSkill('yuanqi_diaoxiang'));
    },
                filterTarget:function (card,player,target,skill){
        return player.group==target.group&&player!=target&&target.hasSkill('yuanqi_diaoxiang');
    },
                check:function (card){
        if(ui.selected.cards.length>1) return 0;
        var player=get.owner(card);
        if(player.needsToDiscard()>0){
            if(ui.selected.cards.length){
                return -1;
            }
            if(player.needsToDiscard()>0) return 10-get.value(card);
            var players=game.players;
            for(i=0;i<players.length;i++){
                if(players[i].hasSkill('yuanqi_diaoxiang')&&
                   (player.countCards('h')>=2||player.needsToDiscard()>0)&&
                    get.attitude(player,players[i])>=1) {
                    if(get.attitude(player,target)>0) {
                    return 9-get.value(card);
                        }else {
                    return -1;
                        }
                }
            }
            if(player.countCards('h')>2) return 6-get.value(card);
            return -1;
        }
            if(player.countCards('h')>2) return 5-get.value(card);
            return -1;
    },
                content:function (){
        target.gain(cards,player,'giveAuto');
    },
                ai:{
                    order:1,
                    result:{
                        player:function (player,target){
                if(get.attitude(player,target)<=0) return -1;
                if(target.countCards('h')<=1&&player.countCards('h')>=3) return 5;
                if(player.needsToDiscard()>0) return 4;
                return 1;
            },
                    },
                },
            },
            "yuanqi_taoyi":{
                charlotte:true,
                mod:{
                    globalTo:function (from,to,distance){
            return distance+1;
        },
                },
            },
            "yuanqi_fantan":{
                charlotte:true,
                forced:true,
                trigger:{
                    global:"shaMiss",
                },
                priority:-5,
                filter:function (event,player){
        return event.target==player&&event.player!=player;
    },
                check:function (event,player,source){
        return get.attitude(player,event.player)<0;
    },
                logTarget:"target",
                content:function (){
        player.useCard(trigger.player,trigger.card,{name:'sha'});
    },
            },
            "yuanqi_xuexiang":{
                charlotte:true,
                enable:"chooseToUse",
                viewAsFilter:function (player){
        return player.countCards('hes',{suit:'heart'})>0;
    },
                filterCard:function (card){
        return get.suit(card)=='heart';
    },
                position:"hes",
                viewAs:{
                    name:"tao",
                },
                prompt:"将一张红桃牌当【桃】使用",
                check:function (card){return 15-get.value(card)},
                ai:{
                    threaten:1.5,
                    basic:{
                        order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                        useful:[8,6.5,5,4],
                        value:[8,6.5,5,4],
                    },
                    result:{
                        target:2,
                        "target_use":function (player,target){
                // if(player==target&&player.hp<=0) return 2;
                if(player.hasSkillTag('nokeep',true,null,true)) return 2;
                var nd=player.needsToDiscard();
                var keep=false;
                if(nd<=0){
                    keep=true;
                }
                else if(nd==1&&target.hp>=2&&target.countCards('h','tao')<=1){
                    keep=true;
                }
                var mode=get.mode();
                if(target.hp>=2&&keep&&target.hasFriend()){
                    if(target.hp>2||nd==0) return 0;
                    if(target.hp==2){
                        if(game.hasPlayer(function(current){
                            if(target!=current&&get.attitude(target,current)>=3){
                                if(current.hp<=1) return true;
                                if((mode=='identity'||mode=='versus'||mode=='chess')&&current.identity=='zhu'&&current.hp<=2) return true;
                            }
                        })){
                            return 0;
                        }
                    }
                }
                if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                var att=get.attitude(player,target);
                if(att<3&&att>=0&&player!=target) return 0;
                var tri=_status.event.getTrigger();
                if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                        var num=game.countPlayer(function(current){
                            if(current.identity=='fan'){
                                return current.countCards('h','tao');
                            }
                        });
                        if(num>1&&player==target) return 2;
                        return 0;
                    }
                }
                if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                        return 0;
                    }
                }
                if(mode=='stone'&&target.isMin()&&
                player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                tri.source!=target.getEnemy()){
                    return 0;
                }
                return 2;
            },
                    },
                    tag:{
                        recover:1,
                        save:1,
                    },
                },
            },
            "yuanqi_qianghua":{
                charlotte:true,
                position:"he",
                enable:"phaseUse",
                filter:function (event,player){
        var he=player.getCards('he');
        for(i=0;i<he.length;i++){
            if(["bagua","baiyin","lanyinjia","renwang","tengjia"].contains(he[i].name)) return true;
        }
                    return false;
                },
                filterCard:function (card){
                    return ["bagua","baiyin","lanyinjia","renwang","tengjia"].contains(card.name);
                },
                discard:false,
                lose:false,
                delay:false,
                check:function (){
                    return 1;
                },
                content:function (){
        "step 0"
        player.showCards(cards);
        "step 1"
        var card=cards[0];
        var bool=(get.position(card)=='e');
        if(bool) player.removeEquipTrigger(card);
        game.addVideo('skill',player,['yuanqi_qianghua',[bool,get.cardInfo(card)]])
        game.broadcastAll(function(card){
            card.init([card.suit,card.number,'rewrite_'+card.name]);
        },card);
        if(bool){
            var info=get.info(card);
            if(info.skills){
                for(i=0;i<info.skills.length;i++){
                    player.addSkillTrigger(info.skills[i]);
                }
            }
        }
    },
                ai:{
                    basic:{
                        order:10,
                    },
                    result:{
                        player:1,
                    },
                },
            },
            "yuanqi_shuangwu":{
                charlotte:true,
                trigger:{
                player:"loseAfter",
                global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
            },
            forced:true,
            priority:7,
            filter:function(event,player){
        var evt=event.getl(player);
        if(evt&&evt.player==player) {
        if (['useCard'].contains(event.getParent().name)) return false;
        var sumcard=[];
        if(evt.es&&evt.es.length>0) {
        var sumcard=sumcard.concat(evt.es);
        }
        /*if(evt.hs&&evt.hs.length>0) {
        var sumcard=sumcard.concat(evt.hs);
        }*/
        if(sumcard&&sumcard.length>0) {
            for(i=0;i<sumcard.length;i++){
                if(get.subtype(sumcard[i])=='equip1') return true;
            }
        }
    }
    },
    onremove:function (player,skill){
        if(player.storage.yuanqi_shuangwu&&player.hasSkill(player.storage.yuanqi_shuangwu)) {
            player.removeSkill(player.storage.yuanqi_shuangwu);
        }
    },
            content:function(){
        'step 0'
        if(player.storage.yuanqi_shuangwu&&player.hasSkill(player.storage.yuanqi_shuangwu)) {
            player.removeSkill(player.storage.yuanqi_shuangwu);
        }
        event.name='none';
        var evt=trigger.getl(player);
        var sumcard=[];
        if(evt.es&&evt.es.length>0) {
        var sumcard=sumcard.concat(evt.es);
        }
        for(i=0;i<sumcard.length;i++){
            if(get.subtype(sumcard[i])=='equip1') event.name=sumcard[i].name+'_skill';
        }
        'step 1'
        if(event.name=='none') event.finish();
        'step 2'
        if(!player.hasSkill('event.name')) player.storage.yuanqi_shuangwu=event.name;
        'step 3'
        player.addTempSkill(event.name,{player:'die'});
    },
            ai:{
                noe:true,
                reverseEquip:true,
            },
            },
            "yuanqi_chongwu":{
                charlotte:true,
                forced:true,
                 trigger:{
        player:"damageBegin",
    },
    priority:-35,
    filter:function(event,player){
        return player.countCards('hes',function(card){
            return (get.subtype(card)=='equip3'||get.subtype(card)=='equip4');
        })>0&&event.num>0;
      },
    content:function(){
        'step 0'
        event.cards=player.getCards('hes',function(card){
            return (get.subtype(card)=='equip3'||get.subtype(card)=='equip4');
        });
        'step 1'
        event.num=Math.min(trigger.num,event.cards.length);
        player.discard(event.cards.randomGets(event.num));
        game.log(player,'的坐骑承受了',get.cnNumber(event.num),'点伤害');
        trigger.num-=event.num;
    },
    ai:{
        "maixie_defend":true,
    },
            },
            "yuanqi_guidun":{
                charlotte:true,
            },
            "yuanqi_shixue":{
                subSkill:{
                    sha:{
    charlotte:true,
    shaRelated:true,
    trigger:{
        player:"useCardToPlayered",
    },
    filter:function(event,player){
        return event.card.name=='sha';
    },
                        mark:true,
                        marktext:"暴击",
                        intro:{
                            content:"<li>使用【杀】不可被闪避",
                        },
    priority:5,
    forced:true,
    logTarget:"target",
    preHidden:true,
    content:function(){
        "step 0"
        trigger.getParent().directHit.add(trigger.target);
    },
    ai:{
        "directHit_ai":true,
        skillTagFilter:function(player,tag,arg){
            return true;
        },
    },
                        sub:true,
                    },
                },
                charlotte:true,
                forced:true,
                priority:-2,
    preHidden:true,
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return true;
    },
    content:function(){
        player.addTempSkill('yuanqi_shixue_sha',{player:['phaseAfter','die']});
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.85];
            },
        },
    },
            },
            "yuanqi_kuangbao":{
                charlotte:true,
                forced:true,
                priority:-2,
    trigger:{
        source:"damageSource",
    },
    forced:true,
    filter:function(event,player){
        return event.card&&event.card.name=='sha';
    },
    content:function(){
        player.draw(trigger.num);
    },
            },
            "yuanqi_zhadan":{
                charlotte:true,
                forced:true,
    trigger:{
        global:"dieAfter",
    },
    content:function(){
        'step 0'
        player.chooseTarget(get.prompt2('yuanqi_zhadan'),'令一名其他角色受到随机一至两点火焰伤害',function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
                var att=get.attitude(_status.event.player,target);
                return -att;
        });
        'step 1'
        if(result.bool) {
            var target=result.targets[0];
            var num=[1,2].randomGet();
            target.damage('fire',num,'nosource');
        }
    },
            },
            "yuanqi_jindun":{
                charlotte:true,
                forced:true,
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                },
                priority:4,
                init:function (player,skill){
                    var num=Math.min(Math.floor(player.countCards('h')/2),3);
                    player.storage.yuanqi_jindun=num;
                    player.storage.zuan_maxhujia+=num;
                    if(num>0) game.log(player,'增加了',get.cnNumber(num)+'点护盾上限');
                },
                filter:function(event,player){
                    var num=Math.min(Math.floor(player.countCards('h')/2),3);
                    return num!=player.storage.yuanqi_jindun;
                },
                onremove:function (player,skill){
                    var num=0;
                    player.storage.zuan_maxhujia-=player.storage.yuanqi_jindun;
                    player.storage.yuanqi_jindun=0;
                        game.log(player,'失去了',get.cnNumber(num)+'点护盾上限');
                    if(player.countMark('zuan_hudun')>player.storage.zuan_maxhujia) {
                        var decrease=player.countMark('zuan_hudun')-player.storage.zuan_maxhujia;
                        player.removeMark('zuan_hudun',decrease);
                        game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
                    }
                },
                content:function(){
                    var num=Math.min(Math.floor(player.countCards('h')/2),3);
                    var change=num-player.storage.yuanqi_jindun;
                    player.storage.yuanqi_jindun=num;
                    player.storage.zuan_maxhujia+=change;
                    if(change>0) {
                        game.log(player,'增加了',get.cnNumber(change)+'点护盾上限');
                    }else {
                        game.log(player,'失去了',get.cnNumber(-change)+'点护盾上限');
                    }
                    if(player.countMark('zuan_hudun')>player.storage.zuan_maxhujia) {
                        var decrease=player.countMark('zuan_hudun')-player.storage.zuan_maxhujia;
                        player.removeMark('zuan_hudun',decrease);
                        game.dyingShow(player,parseFloat(lib.config['extension_祖安武将_newui']));
                    }
                },
            },
            "ssr_qianxun":{
                priority:45,
                audio:"reqianxun",
                trigger:{
                    target:"useCardToBefore",
                },
                filter:function(event,player){
        if(player.countCards('h')==1) return false;
        if(event.name=='judge') return false;
        if(event.targets&&event.targets.length>1) return false;
        if(event.card&&event.player!=player) return (get.type(event.card)=='trick'||get.type(event.card)=='delay');
    },
                content:function(){
        if(player.countCards('h')>1){
            var num=player.countCards('h')-1;
            player.chooseToDiscard('h',num,true);
            }else {
        player.draw();
            }
    },
            },
            "ssr_jueji":{
                subSkill:{
                    draw:{
                        trigger:{
                            player:["useCard","respond"],
                        },
                        silent:true,
                        forced:true,
                        popup:false,
                        filter:function(event,player){
        return event.skill=='ssr_jueji_backup'||event.skill=='ssr_jueji_shan'||event.skill=='ssr_jueji_wuxie';
    },
                        content:function(){
        'step 0'
        player.draw();
    },
                        sub:true,
                    },
                    wuxie:{
                        audio:"lianying",
                        enable:"chooseToUse",
                        prompt:"将最后一张牌当做【无懈可击】使用",
                        viewAsFilter:function(player){
        return !player.getStorage('ssr_jueji').contains('wuxie')&&!player.hasSkill('ssr_jueji_forbid')&&player.countCards('h')==1;
    },
                        onuse:function(result,player){
        player.storage.ssr_jueji.add('wuxie');
    },
                        filterCard:true,
                        position:"h",
                        selectCard:-1,
                        viewAs:{
                            name:"wuxie",
                        },
                        ai:{
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:1,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                    response:{
                audio:"lianying",
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
                    if(event.responded) return false;
                    if(!event.filterCard({name:'shan'})&&!event.filterCard({name:'sha'})) return false;
                    if(!lib.filter.cardRespondable({name:'shan'},player,event)&&!lib.filter.cardRespondable({name:'sha'},player,event)) return false;
                    if(player.countCards('h')!=1) return false;
                    return true;
                },
                direct:true,
                content:function (){
                    "step 0"
                        if(trigger.filterCard({name:'shan'})&&lib.filter.cardRespondable({name:'shan'},player,trigger)) event.name='shan';
                        else event.name='sha';
                        if(player.getStorage('ssr_jueji').contains(event.name)||player.hasSkill('ssr_jueji_forbid')) event.finish();
                    "step 1"
                        player.chooseCard('绝计：将最后一张手牌当做【'+get.translation(event.name)+'】打出');
                    "step 2"
                    if(result.bool){
                        event.card=result.cards[0];
                        player.lose(event.card,ui.special);
                        trigger.untrigger();
                        trigger.responded=true;
                        trigger.result={bool:true,card:{name:event.name},cards:[event.card],noanimate:true};
                        player.storage.ssr_jueji.add(event.name);
                        player.draw();
                    }
                },
                ai:{
                    order:11,
                    useful:-1,
                    value:-1,
                },
                    },
                    shan:{
                        audio:"lianying",
                        prompt:"将最后一张牌当做【闪】使用",
                        enable:"chooseToUse",
                        filter:function(event,player){
        return !player.getStorage('ssr_jueji').contains('shan')&&!player.hasSkill('ssr_jueji_forbid')&&player.countCards('h')==1;//&&!_status.dying.length;
    },
                        onuse:function(result,player){
        player.storage.ssr_jueji.add('shan');
    },
                        filterCard:true,
                        position:"hes",
                        selectCard:-1,
                        viewAs:{
                            name:"shan",
                        },
                        ai:{
                            skillTagFilter:function(player){
            return player.countCards('hes')&&!player.getStorage('taoluan').contains('shan')&&!player.hasSkill('taoluan3');
        },
                            threaten:1.5,
                            respondShan:true,
                            order:11,
                            basic:{
                                useful:[7,2],
                                value:[7,2],
                            },
                            result:{
                                player:1,
                            },
                        },
                        sub:true,
                    },
                    backup:{
                        sub:true,
                    },
                    forbid:{
                        sub:true,
                    },
                    clear:{
                        trigger:{
                            player:["phaseBefore","phaseEnd"],
                        },
                        forced:true,
                        silent:true,
                        content:function(){
        player.storage.ssr_jueji=[];
    },
                        sub:true,
                        popup:false,
                    },
                },
                group:["ssr_jueji_shan","ssr_jueji_wuxie","ssr_jueji_response","ssr_jueji_draw","ssr_jueji_clear"],
                audio:"lianying",
                enable:"chooseToUse",
                filter:function(event,player){
        return event.type!='wuxie'&&event.type!='respondShan'&&!player.hasSkill('ssr_jueji_forbid')&&player.countCards('h')==1;//&&!_status.dying.length;
    },
                hiddenCard:function(player,name){
        return (!player.getStorage('ssr_jueji').contains(name)&&player.countCards('h')==1&&!player.hasSkill('ssr_jueji_forbid')&&lib.inpile.contains(name));
    },
                init:function(player){
        if(!player.storage.ssr_jueji) player.storage.ssr_jueji=[];
    },
                onremove:true,
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            for(i=0;i<lib.inpile.length;i++){
                var name=lib.inpile[i];
                if(player.storage.ssr_jueji&&player.storage.ssr_jueji.contains(name)) continue;
                if(name=='sha'){
                    list.push(['基本','','sha']);
                    list.push(['基本','','sha','fire']);
                    list.push(['基本','','sha','thunder']);
                    list.push(['基本','','sha','ice']);
                }
                else if(get.type(name)=='trick') list.push(['锦囊','',name]);
                else if(get.type(name)=='basic') list.push(['基本','',name]);
            }
            if(list.length==0){
                return ui.create.dialog('〖绝计〗已无可用牌');
            }
            return ui.create.dialog('绝计',[list,'vcard']);
        },
                    filter:function(button,player){
            return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function(button){
            var player=_status.event.player;
            if(player.countCards('h',button.link[2])==1) return 0;
            if(button.link[2]=='wugu') return 0;
            var effect=player.getUseValue(button.link[2]);
            if(effect>0) return effect;
            return 0;
        },
                    backup:function(links,player){
            return {
                filterCard:true,
                audio:'lianying',
                selectCard:-1,
                popname:true,
                check:function(card){
                    return 11-get.value(card);
                },
                position:'h',
                viewAs:{name:links[0][2],nature:links[0][3]},
                onuse:function(result,player){
                    player.storage.ssr_jueji.add(result.card.name);
                },
            }
        },
                    prompt:function(links,player){
            return '将最后一张牌当做【'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'】使用';
        },
                },
                ai:{
                    skillTagFilter:function(player){
            if(player.countCards('h')!=1||player.hasSkill('ssr_jueji_forbid')) return false;
            if(!player.storage.ssr_jueji.contains('tao')){}
            else if(player.isDying()&&!player.storage.ssr_jueji.contains('jiu')){}
            else return false;
        },
                    order:11,
                    result:{
                        player:function(player){
                var allshown=true,players=game.filterPlayer();
                for(i=0;i<players.length;i++){
                    if(players[i].ai.shown==0){
                        allshown=false;
                    }
                    if(players[i]!=player&&players[i].countCards('h')&&get.attitude(player,players[i])>0){
                        return 1;
                    }
                }
                if(allshown) return 1;
                return 0;
            },
                    },
                    threaten:1.3,
                },
            },
            "ssr_zhiheng":{
                subSkill:{
                    forbid:{
                        sub:true,
                    },
                },
                filterTarget:function(card,player,target){
        return !target.hasSkill('ssr_zhiheng_forbid');
    },
                audio:"zhiheng",
                enable:"phaseUse",
                position:"he",
                filterCard:true,
                selectCard:[1,Infinity],
                prompt:"弃置任意张牌并令一名角色摸等量的牌",
                check:function(card){
        return 6-get.value(card);
    },
                content:function(){
        target.draw(cards.length);
        target.addTempSkill('ssr_zhiheng_forbid');
    },
                ai:{
                    order:1,
                    result:{
                        target:2,
                    },
                    threaten:1.5,
                },
            },
            "ssr_jiuyuan":{
                audio:"jiuyuan",
    trigger:{
        player:"dying",
    },
    zhuSkill:true,
    filter:function(event,player){
        /*if(player.storage.ssr_jiuyuan_num) {
            if(player.storage.ssr_jiuyuan_num==game.roundNumber) return false;
        }*/
        if(player.hp>0) return false;
        if(!player.hasZhuSkill('ssr_jiuyuan')) return false;
        return game.hasPlayer(function(current){
            return current!=player&&current.group=='wu';
        });
    },
    unique:true,
    content:function(){
        'step 0'
        var targets=game.filterPlayer();
        targets.remove(player);
        event.targets=targets;
        event.damages=[];
        player.storage.ssr_jiuyuan_num=game.roundNumber;
        'step 1'
        if(event.targets.length){
            var current=event.targets.shift();
            if(current.group=='wu'){
                current.chooseBool('救援：是否令'+get.translation(player)+'摸一张牌？').set('ai',function(){
                    return get.attitude(_status.event.player,_status.event.target)>1;
                }).set('target',player);
                event.current=current;
            }
            else{
                event.redo();
            }
        }
        else{
            event.goto(3);
        }
        'step 2'
        if(result.bool){
            event.damages.push(event.current);
            event.current.line(player,'green');
            game.log(event.current,'令',player,'摸一张牌');
            player.draw();
        }
        if(event.targets.length){
            event.goto(1);
        }
    },
            },
            "ssr_longdan":{
                group:["ssr_longdan_ressha","ssr_longdan_usesha","ssr_longdan_shan"],
                subSkill:{
                    shan:{
                        audio:"longdan_shan",
                        trigger:{
                            player:["chooseToRespondBefore","chooseToUseBefore"],
                        },
                        prompt:"龙胆：是否将一枚“龍”标记当作【闪】使用？",
                        filter:function(event,player){
        if(event.responded) return false;
        if(player.hasSkill('ssr_longdan_ing')) return false;
        if(!event.filterCard({name:'shan'},player,event)) return false;
        return player.countMark('ssr_longdan')>0;
    },
                        check:function(event,player){
        if(get.damageEffect(player,event.player,player)>=0) return false;
        return !player.countCards('h',{name:'shan'});
    },
                        content:function(){
        "step 0"
            player.addTempSkill('ssr_longdan_ing');
            trigger.result={bool:true,card:{name:'shan',isCard:false}};
            trigger.responded=true;
            trigger.animate=false;
            player.removeMark('ssr_longdan');
        var target=_status.currentPhase;
        if(player.hasSkill('ssr_pozhen')) player.discardPlayerCard('he',target,get.prompt2('ssr_pozhen'),'破阵：弃置'+get.translation(target.name)+'的一张牌');
        game.delay();
        player.removeSkill('ssr_longdan_ing');
    },
                        ai:{
                            respondShan:true,
                            skillTagFilter:function(player){
            if(player.hasSkill('ssr_longdan_ing')) return false;
            return player.countMark('ssr_longdan')>0;
        },
                        },
                        sub:true,
                    },
                    usesha:{
                        audio:"longdan_sha",
                        enable:"chooseToUse",
                        prompt:"龙胆：是否将一枚“龍”标记当作【杀】使用？",
                        filter:function(event,player){
                    if(event.filterCard&&!event.filterCard({name:'sha'},player,event)) return false;
        if(player.hasSkill('ssr_longdan_ing')) return false;
        if(!lib.filter.cardUsable({name:'sha'},player)) return false;
        return player.countMark('ssr_longdan')>0;
    },
                        filterTarget:function(card,player,target){
        if(_status.event._backup&&
            typeof _status.event._backup.filterTarget=='function'&&
            !_status.event._backup.filterTarget({name:'sha'},player,target)){
            return false;
        }
        return player.canUse({name:'sha'},target);
    },
                        content:function(){
        "step 0"
        player.addTempSkill('ssr_longdan_ing');
        player.useCard({name:'sha',isCard:false},target).animate=false;
        player.removeMark('ssr_longdan');
        if(player.hasSkill('ssr_pozhen')) player.discardPlayerCard('he',target,get.prompt2('ssr_pozhen'),'破阵：弃置'+get.translation(target.name)+'的一张牌');
        game.delay();
        player.removeSkill('ssr_longdan_ing');
    },
                        ai:{
                            respondSha:true,
                            result:{
                                target:function(player,target){
                if(player.hasSkill('ssr_longdan_ing')) return 0;
                return get.effect(target,{name:'sha'},player,target);
            },
                            },
                            order:function(){
            return 1;
        },
                        },
                        sub:true,
                    },
                    ressha:{
                        audio:"longdan_sha",
                        trigger:{
                            player:"chooseToRespondBegin",
                        },
                        check:function(event,player){
        if(event.ssr_longdan_sha) return false;
        return !player.countCards('h',{name:'sha'});
    },
                        filter:function(event,player){
        if(!event.filterCard({name:'sha'},player,event)) return false;
        if(event.responded) return false;
        if(player.hasSkill('ssr_longdan_ing')) return false;
        return player.countMark('ssr_longdan')>0;
    },
                        prompt:"龙胆：是否将一枚“龍”标记当作【杀】打出？",
                        content:function(){
        "step 0"
        player.addTempSkill('ssr_longdan_ing');
            trigger.result={bool:true,card:{name:'sha',isCard:false}};
            trigger.responded=true;
            trigger.animate=false;
        player.removeMark('ssr_longdan');
        game.delay();
        var target=_status.currentPhase;
        if(player.hasSkill('ssr_pozhen')) player.discardPlayerCard('he',target,get.prompt2('ssr_pozhen'),'破阵：弃置'+get.translation(target.name)+'的一张牌');
        player.removeSkill('ssr_longdan_ing');
    },
                        sub:true,
                    },
                    ing:{
                        sub:true,
                    },
                },
                audio:"longdan_sha",
                marktext:"龍",
                unique:true,
                trigger:{
                    player:["useCard","respond","enterGame","phaseAfter","phaseBegin"],
                    global:"gameDrawAfter",
                },
                priority:-8,
                forced:true,
                filter:function(event,player){
        //if (player.countMark('ssr_longdan')>=7) return false;
        if (player.hasSkill('ssr_longdan_ing')) return false;
        if (event.name=='useCard'||event.name=='respond') {
            return _status.currentPhase!=player&&event.card.isCard;
            }else {
            return !player.storage.ssr_longdan_mark;
            }
    },
                content:function(){
        player.storage.ssr_longdan_mark=true;
        player.addMark('ssr_longdan',(trigger.name=='useCard'||trigger.name=='respond')?1:2);
    },
                intro:{
                    name:"龙威虎胆",
                    content:"mark",
                },
            },
            "ssr_pozhen":{
                audio:"chongzhen1",
                ai:{
        combo:"ssr_longdan",
        mingzhi:false,
        effect:{
            target:function(card,player,target,current){
                if(get.tag(card,'respondShan')||get.tag(card,'respondSha')){
                    if(get.attitude(target,player)<=0){
                        if(current>0) return;
                        if(target.countCards('h')==0) return 1.6;
                        if(target.countCards('h')==1) return 1.2;
                        if(target.countCards('h')==2) return [0.8,0.2,0,-0.2];
                        return [0.4,0.7,0,-0.7];
                    }
                }
            },
        },
    },
            },
            "ssr_tianxing":{
        audio:"guanxing",
    trigger:{
        global:"judge",
    },
    filter:function(event,player){
        if(_status.currentPhase!=player&&event.player!=player) return false;
        return player.countCards('hes')>0;
    },
    direct:true,
    content:function(){
        "step 0"
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('ssr_tianxing'),'hes',function(card){
            var player=_status.event.player;
            var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
            if(mod2!='unchanged') return mod2;
            var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
            if(mod!='unchanged') return mod;
            return true;
        }).set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            var judging=_status.event.judging;
            var result=trigger.judge(card)-trigger.judge(judging);
            var attitude=get.attitude(player,trigger.player);
            if(attitude==0||result==0) return 0;
            if(attitude>0){
                return result;
            }
            else{
                return -result;
            }
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'highlight','ssr_tianxing','noOrdering');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.$gain2(trigger.player.judging[0]);
            player.gain(trigger.player.judging[0]);
            trigger.player.judging[0]=result.cards[0];
            trigger.orderingCards.addArray(result.cards);
            game.log(trigger.player,'的判定牌改为',result.cards[0]);
        }
        "step 3"
        game.delay(2);
    },
    ai:{
        rejudge:true,
        tag:{
            rejudge:1,
        },
    },
            },
            "ssr_tianxing_old":{
                audio:"guanxing",
                trigger:{
                    player:"phaseBegin",
                },
                direct:true,
                priority:1,
                unique:true,
                content:function(){
        "step 0"
        event.cards=get.cards(7);
        player.chooseCardButton(true,event.cards,'观星：选择并获得一张牌').ai=function(button){
            return get.value(button.link);
        };
        "step 1"
        if(!result.bool){
            event.finish();
            return;
        }
        player.logSkill('ssr_tianxing',trigger.player);
        var card=result.links[0];
        event.cards.remove(card);
        if(card){
            player.gain(card,'gain2');
            game.delay();
        }
        else{
            event.finish();
        }
        "step 2"
        var first = ui.cardPile.firstChild;
        for (var i = 0; i < event.cards.length; i++) {
            ui.cardPile.insertBefore(event.cards[i], first);
        }
    },
            },
            "ssr_kongcheng":{
                subSkill:{
                    card:{
                        audio:"kongcheng1",
                        trigger:{
                            player:"loseEnd",
                        },
                        forced:true,
                        firstDo:true,
                        audioname:["re_zhugeliang"],
                        filter:function(event,player){
                            return true;
                        },
                        content:function(){},
                        sub:true,
                    },
                },
                mod:{
        targetEnabled:function(card,player,target,now){
            if(target.countCards('h',{type:'basic'})==0){
                if(get.type(card)=='basic') return false;
            }
            if(target.countCards('h',{type:'trick'})+target.countCards('h',{type:'delay'})==0){
                if(get.type(card)=='trick'||get.type(card)=='delay') return false;
            }
            if(target.countCards('h',{type:'equip'})==0){
                if(get.type(card)=='equip') return false;
            }
        },
                },
                group:"ssr_kongcheng_card",
                audio:"kongcheng1",
                ai:{
                    noh:true,
                    skillTagFilter:function(player,tag){
            if(tag=='noh'){
                if(player.countCards('h')!=1) return false;
            }
        },
                },
            },
            "ssr_tuxi":{
                skillAnimation:true,
                animationColor:"thunder",
                direct:true,
                //mark:true,
                marktext:"袭",
                init:function(player){
                    if(!player.storage.ssr_tuxi&&player.countMark('ssr_tuxi')<=0) {
                        player.addMark('ssr_tuxi',3);
                        player.markSkill('ssr_tuxi');
                    }
                    if(player.countMark('ssr_tuxi')>0) player.markSkill('ssr_tuxi');
                },
                intro:{
                    name:"袭",
                    content:"mark",
                },
                audio:"tuxi",
                trigger:{
                    player:"phaseDrawBegin2",
                },
                filter:function(event,player){
        return player.countMark('ssr_tuxi')>0;
    },
                content:function(){
        'step 0'
        var num=player.countMark('ssr_tuxi');
        player.chooseTarget(get.prompt('ssr_tuxi'),'是否弃置任意枚“突袭”标记并获得任意名角色的手牌区和装备区的所有牌？',[1,num],function(card,player,target){
            return target.countCards('he')>0&&player!=target;
        },function(target){
            var ran=0.5;
            if(player.hasSkill('ssr_mubing_dis')) var ran=1;
            if(player.skipList.contains('phaseUse')) return -1;
            if(Math.random()>ran) return -1;
            if(get.attitude(player,target)<-2) return target.countCards('he')-2;
            if(get.attitude(player,target)<0) return target.countCards('he')-4;
            return -1;
        });
        'step 1'
        if(result.bool) {
            player.removeMark('ssr_tuxi',result.targets.length);
            player.logSkill(event.name,result.targets);
        for(i=0;i<result.targets.length;i++){
        var target=result.targets[i];
        player.gain(target.getCards('he'),target,'giveAuto');
            }
            }
            if(!player.countMark('ssr_tuxi')>0) player.awakenSkill('ssr_tuxi');
    },
                ai:{
                    threaten:function(player,target){
                            return 0.5+player.countMark('ssr_tuxi')*0.8;
                    },
                },
            },
    "ssr_mubing":{
        subSkill:{
            dis:{
                mark:true,
                marktext:"募兵",
                intro:{
                    name:"招兵买马",
                    content:"<li>跳过你的下一个弃牌阶段",
                },
    audio:'mubing',
    trigger:{
        player:"phaseDiscardBefore",
    },
    frequent:function(event,player){
        return player.needsToDiscard();
    },
    filter:function(event,player){
        return true;
    },
    content:function(){
        trigger.cancel();
    },
                sub:true,
            },
        },
    audio:'mubing',
    preHidden:true,
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return !player.hasSkill('ssr_mubing_dis');
    },
    priority:-17,
    frequent:true,
    content:function(){
        "step 0"
        player.addTempSkill('ssr_mubing_dis',{player:'phaseAfter'});
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.7];
            },
        },
    },
    },
            "ssr_qixi":{
                audio:"qixi",
                trigger:{
                player:"loseAfter",
                global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
            },
            forced:true,
            filter:function(event,player){
        var evt=event.getl(player);
        if(evt&&evt.player==player) {
        var sumcard=[];
        if(evt.es&&evt.es.length>0) {
        var sumcard=sumcard.concat(evt.es);
        }
        if(evt.hs&&evt.hs.length>0) {
        var sumcard=sumcard.concat(evt.hs);
        }
        if(sumcard&&sumcard.length>0) {
        if (['useCard'].contains(event.getParent().name)) {
            if(get.type(sumcard[0])=='equip') return false;
            if(sumcard[0].name=='shandian') return false;
            if(sumcard[0].name=='fulei') return false;
            if(sumcard[0].name=='hongshui') return false;
        }
            for(i=0;i<sumcard.length;i++){
                if(get.color(sumcard[i])=='black') return true;
            }
        }
    }
    },
            content:function(){
        'step 0'
        event.num=0;
        var evt=trigger.getl(player);
        var sumcard=[];
        if(evt.es&&evt.es.length>0) {
        var sumcard=sumcard.concat(evt.es);
        }
        if(evt.hs&&evt.hs.length>0) {
        var sumcard=sumcard.concat(evt.hs);
        }
        for(i=0;i<sumcard.length;i++){
        if(get.color(sumcard[i])=='black') event.num++;
            }
        var num=event.num;
        'step 1'
        event.num--;
        player.chooseTarget(get.prompt('ssr_qixi'),'是否弃置一名角色区域内的一张牌？',1,function(card,player,target){
            return target.countDiscardableCards(player,get.is.single()?'he':'hej')&&player!=target;
        },function(target){
            return -get.attitude(player,target);
        });
        'step 2'
            event.okay=0;
        if(result.bool) {
            event.target=result.targets[0];
        var target=result.targets[0];
        if(!get.is.single()&&target.countDiscardableCards(player,'hej')){
            player.choosePlayerCard('hej',target,true);
            event.okay=1;
        }
        else{
            var bool1=target.countDiscardableCards(player,'h');
            var bool2=target.countDiscardableCards(player,'e');
            if(bool1&&bool2){
                player.chooseControl('手牌区','装备区').set('ai',function(){
                    return Math.random()<0.5?1:0;
                }).set('prompt','弃置'+(get.translation(target.name))+'装备区的一张牌，或观看其手牌并弃置其中的一张牌。');
            }
            else event._result={control:bool1?'手牌区':'装备区'};
        }
            }
        'step 3'
        if(event.okay==0&&result.bool) {
        var target=result.targets[0];
        var pos=result.control=='手牌区'?'h':'e';
        player.choosePlayerCard(target,pos,true,'visible');
        }
        'step 4'
        if(result.bool) {
            if(target.countCards('h')>0) {
            var cards=target.getCards('h');
            var card=result.links;
            }else {
            var cards=[];
            }
            //player.chooseControl('ok').set('dialog',['手牌',cards,'弃牌',card]);
            target.discard(result.links,ui.special);
            //if(card.contains(cards)) {
            if(cards.length==1) {
                var cs=cards[0];
                var cd=card[0];
                if(get.type(cs)==get.type(cd)&&get.suit(cs)==get.suit(cd)&&get.number(cs)==get.number(cd)) {
                    target.damage();
                }
            }
        }
        'step 5'
        if(event.num>0) event.goto(1);
    },
            },
            "ssr_tieji":{
                marktext:"锦",
                audio:"tieji",
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                filter:function(event,player){
        return event.card.name=='sha';
    },
                logTarget:"target",
                content:function(){
        "step 0"
        if(!trigger.target.hasSkill('fengyin')){
            trigger.target.addTempSkill('fengyin');
        }
        event.card=get.cards()[0];
        if(player.storage.ssr_tieji==undefined) player.storage.ssr_tieji=[];
        player.storage.ssr_tieji.push(event.card);
        player.syncStorage('ssr_tieji');
        event.trigger("addCardToStorage");
        player.showCards(player.storage.ssr_tieji,'锦');
        player.markSkill('ssr_tieji');
        "step 1"
        event.directhit=false;
        for(i=0;i<player.storage.ssr_tieji.length-1;i++){
            if(get.suit(event.card)&&get.suit(event.card)==get.suit(player.storage.ssr_tieji[i])){
                player.storage.ssr_tieji.remove(event.card);
                player.syncStorage('ssr_tieji');
                player.markSkill('ssr_tieji');
                game.cardsDiscard(event.card);
                //player.gain(event.card);
                //game.log(player,'获得了',event.card);
                trigger.getParent().directHit.add(trigger.target);
                event.directhit=true;
                }
            }
        if(1==0&&!event.directhit) {
            var target=trigger.target;
            var position='h';
            if(target.countGainableCards(player,position)){
            player.gainPlayerCard(position,target,1,true);
            }
            }
    },
                intro:{
                    name:"锦",
                    content:"cards",
                    onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage);
                game.cardsDiscard(storage);
                delete player.storage.ssr_tieji;
            }
        },
                },
                ai:{
                    ignoreSkill:true,
                    skillTagFilter:function(player,tag,arg){
            if(tag=='directHit_ai'){
                return get.attitude(player,arg.target)<=0;
            }
            if(!arg||arg.isLink||!arg.card||arg.card.name!='sha') return false;
            if(!arg.target||get.attitude(player,arg.target)>=0) return false;
            if(!arg.skill||!lib.skill[arg.skill]||lib.skill[arg.skill].charlotte||get.is.locked(arg.skill)||!arg.target.getSkills(true,false).contains(arg.skill)) return false;
        },
                    "directHit_ai":true,
                },
            },
            "ssr_zhuiji":{
                trigger:{
                    source:"damageSource",
                },
                direct:true,
                filter:function(event,player){
                    return get.distance(player,event.player)<=1&&event.player.countGainableCards(player,'he')&&event.player!=player;
                },
                content:function(){
                    player.gainPlayerCard('he',trigger.player,1);
                },
                mod:{
                    globalFrom:function(from,to,distance){
            if(from.hp<from.maxHp){
            var number=from.getDamagedHp();
            return distance-number;
                }
        },
                },
            },
            "ssr_yingzi":{
                locked:true,
                mod:{
                    maxHandcardBase:function(player,num){
                        return 4;
                    },
                },
                audio:"yingzi",
                trigger:{
                    player:"phaseDrawBegin2",
                },
                forced:true,
                filter:function(event,player){
                    return !event.numFixed;
                },
                content:function(){
                    trigger.num++;
                },
                ai:{
                    threaten:1.4,
                },
            },
            "ssr_yeyan":{
    trigger:{
        player:"damageBegin4",
        source:"damageBegin4",
    },
    filter:function(event){
        return event.nature=='fire';
    },
    direct:true,
    content:function(){
                'step 0'
                    if(trigger.player==player) {
                        var cho=player.chooseCard(1,'he','业炎：是否弃置一张牌，然后使受到的伤害值减一？');
                    }else {
                        var cho=player.chooseCard(1,'he','业炎：是否弃置一张牌，然后使造成的伤害值加一？');
                    }
                cho.set('check',function(card){
                    return 9-get.value(card);
                });
                'step 1'
                if(result.bool) {
                    player.discard(result.cards);
                    if(trigger.player==player) {
                        trigger.num--;
                    }else {
                        trigger.num++;
                    }
                }
    },
    /*ai:{
        nofire:true,
        effect:{
            target:function(card,player,target,current){
                if(get.tag(card,'fireDamage')) return 'zerotarget';
            },
        },
    },*/
            },
            "ssr_fanjian":{
                group:"ssr_fanjian_recycle",
                subSkill:{
                    fear:{
                        trigger:{
                            player:"useCardBefore",
                        },
                        filter:function(event,player,card){
                            if (player==game.me||player.isUnderControl()) return false;
                            return true;
                        },
                                    frequent:true,
                        silent:true,
                        content:function(){
                            if(!player.storage.ssr_fanjian_nouse) player.storage.ssr_fanjian_nouse=[];
                            if(Math.random()<0.35) {
                                player.storage.ssr_fanjian_nouse.push(trigger.card);
                                trigger.cancel();
                            }
                        },
                        mod:{
                            cardEnabled:function(card,player){
                                if(player.storage.ssr_fanjian_nouse&&player.storage.ssr_fanjian_nouse.length) {
                                    for (var i=0;i<player.storage.ssr_fanjian_nouse.length;i++) {
                                        if(get.name(player.storage.ssr_fanjian_nouse[i])==get.name(card)&&get.suit(player.storage.ssr_fanjian_nouse[i])==get.suit(card)&&get.number(player.storage.ssr_fanjian_nouse[i])==get.number(card)) return false;
                                    }
                                }
                            },
                        },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    used:{
                        sub:true,
                    },
                    recycle:{
                        trigger:{
                            global:"phaseBegin",
                        },
                        priority:25,
                        filter:function(event,player,card){
                            return player.storage.ssr_fanjian&&player.storage.ssr_fanjian.length>0;
                        },
                        content:function(){
                            'step 0'
                            if(player.hasSkill('ssr_fanjian_use')) {
                                player.removeSkill('ssr_fanjian_use');
                                event.goto(5);
                            }
                            'step 1'
                            if(_status.currentPhase==player) {
                                event.goto(4);
                            }
                            'step 2'
                            player.chooseControl('确定','取消',trigger.card,function(){
                                if(get.attitude(player,trigger.player)<0) return '确定';
                                return '取消';
                            }).set('dialog',['反间：是否更新〖反间〗牌库？',player.storage.ssr_fanjian]);
                            'step 3'
                            if(result.control=='取消') {
                                event.finish();
                            }
                            'step 4'
                            player.gain(player.storage.ssr_fanjian,'fromStorage');
                            'step 5'
                            player.storage.ssr_fanjian=[];
                            player.unmarkSkill('ssr_fanjian');
                            //player.removeSkill('ssr_fanjian_recycle');
                        },
                        sub:true,
                        silent:true,
                        forced:true,
                        popup:false,
                    },
                    use:{
                        check:function(event,player){
        return (get.attitude(player,event.player)<0);
    },
                        audio:"fanjian",
                        trigger:{
                            global:["useCard","respond"],
                        },
                        filter:function(event,player,card){
        if (!player.storage.ssr_fanjian||!event.card.isCard||player.storage.ssr_fanjian.length<=0) return false;
        if(get.type(event.card)!=get.type(player.storage.ssr_fanjian[0])) return false;
        if(get.name(event.card)!=get.name(player.storage.ssr_fanjian[0])) return false;
        if(get.suit(event.card)!=get.suit(player.storage.ssr_fanjian[0])) return false;
        if(get.number(event.card)!=get.number(player.storage.ssr_fanjian[0])) return false;
        return true;
    },
    direct:true,
                        content:function(){
        'step 0'
        player.chooseControl('确定','取消',trigger.card,function(){
            if(get.attitude(player,trigger.player)<0) return '确定';
            return '取消';
        }).set('prompt','反间：'+get.translation(trigger.player.name)+'的【'+get.translation(trigger.card.name)+'】即将生效，是否令此牌无效，对该角色造成一点火焰伤害并回收此牌？');
        'step 1'
        if(result.control=='取消') event.finish();
        'step 2'
        player.logSkill('ssr_fanjian',trigger.player,'fire');
        trigger.player.damage('fire');
        trigger.cancel();
        'step 3'
        trigger.player.discard(trigger.card);
        player.addTempSkill('ssr_fanjian_used',{player:'phaseBegin'});
        'step 4'
        player.gain(player.storage.ssr_fanjian,'gain2');
        player.storage.ssr_fanjian=[];
        player.unmarkSkill('ssr_fanjian');
        //player.removeSkill('ssr_fanjian_recycle');
        player.removeSkill('ssr_fanjian_use');
        if(trigger.player.hasSkill('ssr_fanjian_fear')) trigger.player.removeSkill('ssr_fanjian_fear');
    },
                ai:{
                            result:{
                                target:-2,
                            },
                            expose:0.2,
                },
                        sub:true,
                    },
                },
                marktext:"反间",
                intro:{
                    mark:function(dialog,content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()||player.classList.contains('dead')==true){
                    dialog.addAuto(content);
                }
                else{
                    return '〖反间〗指定的牌';
                }
            }
        },
                    content:function(content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()||player.classList.contains('dead')==true){
                    return get.translation(content);
                }
                    return '〖反间〗指定的牌';
            }
        },
                },
                audio:"fanjian",
                trigger:{
                    global:"phaseDrawBegin",
                },
                priority:-5,
                filter:function(event,player,card){
    return event.player!=player&&player.countCards('h')>0&&!(player.storage.ssr_fanjian&&player.storage.ssr_fanjian.length>0);
    },
                direct:true,
                content:function(){
        "step 0"
        player.chooseCard('〖反间〗<br>请先选择一张手牌','h',true,function(card,player){
        if(get.attitude(player,trigger.player)<0&&!player.hasSkill('ssr_fanjian_used')) {
                if(card.name=='tao'&&event.player.hp>=event.player.maxHp) return -1;
                if(card.name=='shandian'||card.name=='tiesuo') return 0.1;
            }
                if(card.name=='shan'||card.name=='wuxie') return -1;
                return get.value(card);
        });
        'step 1'
        if(result.cards){
            event.card=result.cards[0];
            player.lose(result.cards,ui.special);
            game.broadcastAll(function(player){
                var cardx=ui.create.card();
                cardx.classList.add('infohidden');
                cardx.classList.add('infoflip');
                player.$throw(cardx,1000,'nobroadcast');
            },player);
        }
        else{
            event.card=null;
        }
        if(!player.hasSkill('ssr_fanjian_used')){
        player.chooseControl('隐藏','反间',function(){
            if(get.attitude(player,trigger.player)<0) return '反间';
            return '隐藏';
        }).set('prompt','〖反间〗<br>请选择此牌的效果');
            }else {
                result.control='隐藏';
            }
        'step 2'
        if(result.control=='反间'&&!player.hasSkill('ssr_fanjian_used')) {
            event.boolt=1;
            }else {
            event.boolt=0;
            }
        if(player==game.me) game.delay(0.5);
        'step 3'
        if(event.boolt==1) {
        if(event.card){
            event.card.fix();
            ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            game.updateRoundNumber();
            event.cardl=game.createCard(event.card);
            player.storage.ssr_fanjian=game.cardsGotoSpecial(event.cardl).cards;
            player.markSkill('ssr_fanjian')
            player.syncStorage('ssr_fanjian');
            player.addSkill('ssr_fanjian_use');
        }
        if(player.isUnderControl()){
            game.modeSwapPlayer(player);
        }
            }else {
            player.storage.ssr_fanjian=game.cardsGotoSpecial(event.card).cards;
            player.markSkill('ssr_fanjian')
            player.syncStorage('ssr_fanjian');
            //if(player.hasSkill('ssr_fanjian_use')) player.removeSkill('ssr_fanjian_use');
            }
        'step 4'
        if(event.boolt==1) {
            player.update();
        event.cards=get.cards(3);
        player.chooseCardButton(event.cards,3,'按顺序调整牌堆顶',true).set('ai',ai.get.buttonValue);
        }
        "step 5"
        if(event.boolt==1) {
            if(get.attitude(trigger.player,player)<0) {
                trigger.player.addTempSkill('ssr_fanjian_fear');
                trigger.player.storage.ssr_fanjian_nouse=[];
            }
            var choice=[];
            for(i=0;i<result.links.length;i++){
                choice.push(result.links[i]);
                cards.remove(result.links[i]);
            }
            for(i=0;i<cards.length;i++){
                ui.cardPile.appendChild(cards[i]);
            }
            while(choice.length){
                ui.cardPile.insertBefore(choice.pop(),ui.cardPile.firstChild);
            }
            get.bottomCards(1);
            }
    },
                forced:true,
                popup:false,
            },
            "ssr_jijiang":{
                subSkill:{
                    sha:{
                shaRelated:true,
                audio:"shichou",
                forced:true,
                locked:true,
                group:["ssr_shichou"],
                        mark:true,
                        marktext:"激将",
                        intro:{
                            name:"义愤填膺",
                            content:"〖激将〗<li>你的回合内你可以额外使用一张【杀】<br><br>〖誓仇〗<li>当你使用【杀】指定一名角色为目标后，你可以进行一次判定：该角色不能使用或打出与判定结果花色相同的牌直到你的回合开始。",
                        },
                        mod:{
                            cardUsable:function(card,player,num){
            if(card.name=='sha') return num+1;
        },
                        },
                        sub:true,
                    },
                },
                audio:"jijiang1",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                direct:true,
                unique:true,
                zhuSkill:true,
                filter:function(event,player){
        if(!player.hasZhuSkill('ssr_jijiang')||!game.hasPlayer(function(current){
            return current!=player&&current.group=='shu'&&!current.hasSkill('ssr_jijiang_sha');
        })) return false;
        if(player.getHistory('skipped').contains('phaseUse')) return true;
        var history=player.getHistory('useCard');
        for(i=0;i<history.length;i++){
            if(history[i].card.name=='sha'&&history[i].isPhaseUsing()) return false;
        }
        return true;
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt2('ssr_jijiang'),function(card,player,target){
         return target!=player&&!target.hasSkill('ssr_jijiang_sha')&&target.group=='shu';
        }).ai=function(target){
            return get.attitude(player,target);
        };
        "step 1"
        if(result.bool){
            player.logSkill('ssr_jijiang',result.targets,'fire');
            event.target=result.targets[0];
            event.target.addTempSkill('ssr_jijiang_sha',{player:'phaseEnd'});
        }
    },
            },
            "ssr_qiangxi":{
                locked:true,
                group:["ssr_qiangxi_use","ssr_qiangxi_equip"],
                subSkill:{
                    use:{
                        filter:function(event,player){
        return player.countMark('ssr_qiangxi')>0;
    },
                        audio:"qiangxi",
                        enable:"phaseUse",
                        usable:2,
                        filterTarget:function(card,player,target){
        if(target==player) return false;
        return true;
    },
                        content:function(){
        player.removeMark('ssr_qiangxi');
        target.damage();
    },
                        ai:{
                            order:8.5,
                            threaten:1.5,
                            result:{
                                target:function (player,target){
                return get.damageEffect(target,player);
            },
                            },
                        },
                        sub:true,
                    },
                    equip:{
    audio:"qiangxi",
    trigger:{
        player:"loseAfter",
        global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
    },
    forced:true,
    filter:function(event,player){
        var evt=event.getl(player);
        if(evt&&evt.player==player) {
        if (['useCard'].contains(event.getParent().name)) return false;
        var sumcard=[];
        if(evt.es&&evt.es.length>0) {
        var sumcard=sumcard.concat(evt.es);
        }
        if(evt.hs&&evt.hs.length>0) {
        var sumcard=sumcard.concat(evt.hs);
        }
        if(sumcard&&sumcard.length>0) {
            for(i=0;i<sumcard.length;i++){
                if(get.subtype(sumcard[i])=='equip1') return true;
            }
        }
    }
    },
    content:function(){
        'step 0'
        event.num=0;
        var evt=trigger.getl(player);
        var sumcard=[];
        if(evt.es&&evt.es.length>0) {
        var sumcard=sumcard.concat(evt.es);
        }
        if(evt.hs&&evt.hs.length>0) {
        var sumcard=sumcard.concat(evt.hs);
        }
        for(i=0;i<sumcard.length;i++){
        if(get.subtype(sumcard[i])=='equip1') event.num++;
            }
        var num=event.num;
        'step 1'
        player.addMark('ssr_qiangxi',event.num);
    },
    ai:{
        noe:true,
        reverseEquip:true,
    },
    sub:true,
                    },
                },
                audio:"qiangxi",
                marktext:"戟",
                unique:true,
                trigger:{
                    player:["damageEnd","enterGame","phaseAfter","phaseBegin"],
                    global:"gameDrawAfter",
                },
                priority:-1,
                forced:true,
                filter:function(event,player){
        return (event.name!='damage'&&!player.storage.ssr_qiangxi_mark)||event.num>0; 
    },
                content:function(){
        player.storage.ssr_qiangxi_mark=true;
        player.addMark('ssr_qiangxi',trigger.name=='damage'?trigger.num:2);
    },
                intro:{
                    name:"双戟",
                    content:"mark",
                },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "ssr_yunchou":{
                 group:"ssr_yunchou_wuxie",
                subSkill:{
                    forbid:{
                        sub:true,
                    },
                    basic:{
                        sub:true,
                    },
                    trick:{
                        sub:true,
                    },
                    equip:{
                        sub:true,
                    },
                    
                    wuxie:{
                        audio:"kanpo",
                        enable:"chooseToUse",
                        prompt:"将某种类型的一张牌当做【无懈可击】使用",
                        viewAsFilter:function(player){
                var types=['basic','trick','delay','equip'];
                for(i=0;i<types.length;i++){
                    if(types[i]=='delay') {
                        var type='trick';
                    }else {
                        var type=types[i];
                    }
                    if(!player.hasSkill('ssr_yunchou_'+type)&&player.countCards('hes',{type:types[i]})) return true;
                }
            return false;
    },
                        onuse:function(result,player){
                if(get.type(result.cards[0])=='delay') {
                    var type='trick';
                    }else {
                    var type=get.type(result.cards[0]);
                    }
        player.addTempSkill('ssr_yunchou_'+type,{player:'phaseBegin'});
    },
                        filterCard:function(card,player){
                if(get.type(card)=='delay') {
                    var type='trick';
                }else {
                    var type=get.type(card);
                    }
                if(player.hasSkill('ssr_yunchou_'+type)) return false;
        return true;
    },
                        position:"he",
                        selectCard:1,
                        viewAs:{
                            name:"wuxie",
                        },
                        ai:{
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:1,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                },
                audio:"kanpo",
                enable:"chooseToUse",
                filter:function(event,player){
        if(event.type=='dying') return false;
        if(event.type=='shan') return false;
        if(event.type=='wuxie') return false;
        var types=['basic','trick','delay','equip'];
                for(i=0;i<types.length;i++){
                    if(types[i]=='delay') {
                        var type='trick';
                    }else {
                        var type=types[i];
                    }
                    if(!player.hasSkill('ssr_yunchou_'+type)&&player.countCards('hes',{type:types[i]})) return true;
                }
        return false;
    },
                hiddenCard:function(player,name){
        if(!lib.inpile.contains(name)) return false;
        var types=['basic','trick','delay','equip'];
                for(i=0;i<types.length;i++){
                    if(types[i]=='delay') {
                        var type='trick';
                    }else {
                        var type=types[i];
                    }
                    if(!player.hasSkill('ssr_yunchou_'+type)&&player.countCards('hes',{type:types[i]})) return true;
                }
        return false;
    },
                onremove:true,
                chooseButton:{
                    dialog:function(event,player){
        var list=[];
            for(i=0;i<lib.inpile.length;i++){
                var name=lib.inpile[i];
                if(get.type(name)=='trick') list.push(['锦囊','',name]);
            }
            if(list.length==0){
                return ui.create.dialog('〖运筹〗已无可用牌');
            }
            return ui.create.dialog('运筹帷幄',[list,'vcard']);
        },
                    filter:function(button,player){
            return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function(button){
            var player=_status.event.player;
            if(player.countCards('h',button.link[2])==1) return 0;
            if(button.link[2]=='wugu') return 0;
            var effect=player.getUseValue(button.link[2]);
            if(effect>0) return effect;
            return 0;
        },
                    backup:function(links,player){
            return {
    filterCard:function(card){
        if(get.type(card)=='delay') {
                    var type='trick';
                }else {
                    var type=get.type(card);
                    }
                if(player.hasSkill('ssr_yunchou_'+type)) return false;
        return true;
    },
                audio:'lianying',
                selectCard:1,
                popname:true,
                check:function(card){
                    return 6-get.value(card);
                },
                position:'he',
                viewAs:{name:links[0][2],nature:links[0][3]},
                onuse:function(result,player){
                    if(get.type(result.cards[0])=='delay') {
                    var type='trick';
                    }else {
                    var type=get.type(result.cards[0]);
                    }
        player.addTempSkill('ssr_yunchou_'+type,{player:'phaseBegin'});
                },
            }
        },
                    prompt:function(links,player){
            return '将某种类型的一张牌当做【'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'】使用';
        },
                },
                ai:{
                    order:4,
                    result:{
                        player:function(player){
                var allshown=true,players=game.filterPlayer();
                for(i=0;i<players.length;i++){
                    if(players[i].ai.shown==0){
                        allshown=false;
                    }
                    if(players[i]!=player&&players[i].countCards('h')&&get.attitude(player,players[i])>0){
                        return 1;
                    }
                }
                if(allshown) return 1;
                return 0;
            },
                    },
                    threaten:1.9,
                },
            },
            "ssr_tianyun":{
                subSkill:{
                    dam:{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        content:function(){
        "step 0"
        player.judge(function(card){
            if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -1;
            return 1;
        });
        "step 1"
        if(!result.bool){
            player.damage('thunder','nosource','nocard');
        }
        game.delay();
    },
                        sub:true,
                    },
                },
                locked:true,
                audio:"tiandu",
                group:"ssr_tianyun_dam",
                trigger:{
                    player:"judgeEnd",
                },
                frequent:function(event){
        if(event.result.card.name=='du') return false;
        //if(get.mode()=='guozhan') return false;
        return true;
    },
                check:function(event){
        if(event.result.card.name=='du') return false;
        return true;
    },
                filter:function(event,player){
        return get.position(event.result.card,true)=='o';
    },
                content:function(){
        player.gain(trigger.result.card,'gain2');
    },
            },
            "ssr_yice":{
                audio:"yiji",
                trigger:{
                    player:"damage",
                },
                frequent:true,
                filter:function(event,player){
        return event.num>0;
    },
                content:function(){
        "step 0"
        event.count=trigger.num;
        "step 1"
        event.count--;
        event.cards=[];
        //event.cards=get.cards(3);
        "step 2"
        var card=get.cardPile(function(card){
            for(var a=0;a<event.cards.length;a++) {
                if(get.name(card)==get.name(event.cards[a])) return false;
            }
            if(get.type(card)=='trick'||get.type(card)=='delay') return true;
            return false;
        },'cardPile');
        if(card) {
            event.cards=event.cards.concat(card);
        }
        if(event.cards.length>=3||!card) {
            event.num=event.cards.length;
        }else {
            event.redo();
        }
        "step 3"
        var num=event.num;
        if(num>0){
            player.chooseCardButton('将'+get.cnNumber(num)+'张〖遗策〗牌分配给任意角色',true,event.cards,[1,num]).set('ai',function(button){
                if(ui.selected.buttons.length==0) return 1;
                return 0;
            });
        }
        else if(num==1){
            event._result={links:event.cards.slice(0),bool:true};
        }
        else{
            event.goto(6);
        }
        "step 4"
        if(result.bool){
            for(i=0;i<result.links.length;i++){
                event.cards.remove(result.links[i]);
                event.num--;
            }
            event.togive=result.links.slice(0);
            player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
                var att=get.attitude(_status.event.player,target);
                if(_status.event.enemy){
                    return -att;
                }
                else if(att>0){
                    return att/(1+target.countCards('h'));
                }
                else{
                    return att/100;
                }
            }).set('enemy',get.value(event.togive[0],player,'raw')<0);
        }
        "step 5"
        if(result.targets.length){
            result.targets[0].gain(event.togive,'draw');
            player.line(result.targets[0],'green');
            game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
            event.goto(3);
        }
        "step 6"
        if(event.count>0) player.chooseBool(get.prompt2(event.name)).set('frequentSkill',event.name);
        else event.finish();
        "step 7"
        if(result.bool){
            player.logSkill(event.name);
            event.goto(1);
        }
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function(card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
                    var num=1;
                    if(get.attitude(player,target)>0){
                        if(player.needsToDiscard()){
                            num=0.7;
                        }
                        else{
                            num=0.5;
                        }
                    }
                    if(target.hp>=4) return [1,num*2];
                    if(target.hp==3) return [1,num*1.5];
                    if(target.hp==2) return [1,num*0.5];
                }
            },
                    },
                },
            },
            "ssr_jianxiong":{
                audio:"jianxiong",
                trigger:{
                    player:"damageEnd",
                },
                priority:-16,
                direct:true,
                filter:function(event,player){
                    return true;
                },
                content:function(){
                "step 0"
                if(!trigger.cards) {
                    event.goto(3);
                }else if(get.itemtype(trigger.cards)!='cards') {
                    event.goto(3);
                }else if(get.position(trigger.cards[0],true)!='o') event.goto(3);
                "step 1"
                var cardname='是否获得';
                for(i=0;i<trigger.cards.length;i++) {
                    if(i>0) cardname=cardname+'、';
                    cardname=cardname+'【'+get.translation(trigger.cards[i].name)+'('+get.translation(trigger.cards[i].suit)+trigger.cards[i].number+')】';
                }
                player.chooseControl('确定','取消',function(){
                    return '确定';
                }).set('prompt','奸雄：'+cardname+'？').set('logSkill','ssr_jianxiong').setHiddenSkill('ssr_jianxiong');
                "step 2"
                if(result.control=='确定') {
                    player.gain(trigger.cards,'gain2');
                }
                "step 3"
                if(!player.canMoveCard()) event.finish();
                "step 4"
                var check;
                if(!player.canMoveCard(true)){
                    check=false;
                }
                else{
                    check=game.hasPlayer(function(current){
                        return get.attitude(player,current)>0&&current.countCards('j');
                    });
                    check=true;
                }
                player.chooseToDiscard(get.prompt('ssr_jianxiong'),'h','是否弃置一张手牌并移动场上的一张牌？',lib.filter.cardDiscardable).set('ai',function(card){
                    if(!_status.event.check) return 0;
                    return 7-get.value(card);
                }).set('check',check).set('logSkill','ssr_jianxiong').setHiddenSkill('ssr_jianxiong');
                "step 5"
                if(result.bool){
                    player.moveCard();
                }
            },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')&&player!=target) return [1,0.6];
            },
                    },
                },
            },
            "ssr_hujia":{
                global:"ssr_hujia_dam",
                audio:"hujia",
                zhuSkill:true,
                subSkill:{
                    dam:{
                        priority:-10,
                        audio:"hujia",
                        trigger:{
                            player:"dying",
                        },
                        check:function(event,player){
        for(i=0;i<game.players.length;i++) {
                        if(game.players[i].hasZhuSkill('ssr_hujia')) {
                            return get.attitude(player,game.players[i])>0;
                        }
                    }
    },
                        filter:function(event,player){
                if(player.group!='wei') return false;
        return game.hasPlayer(function(current){
        if(!current.hasZhuSkill('ssr_hujia')) return false;
            return current!=player;
        });
    },
                        content:function(){
        for(i=0;i<game.players.length;i++) {
            if(game.players[i].hasZhuSkill('ssr_hujia')) {
                game.players[i].draw(2);
            }
        }
    },
                        ai:{
                            maixie:true,
                            "maixie_hp":true,
                            effect:{
                                player:function(card,player,target){
                    for(i=0;i<game.players.length;i++) {
                        if(game.players[i].hasZhuSkill('ssr_hujia')) {
                            return get.attitude(player,game.players[i]);
                        }
                    }
                    },
                                target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.55];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_zhujiu":{
                global:"ssr_zhujiu_jiu",
                audio:"guixin",
                subSkill:{
                    jiu:{
                        usable:1,
                        audio:"guixin",
                        enable:"chooseToUse",
                        hiddenCard:function(player,name){
        return (name=='jiu');
    },
                        filter:function(event,player){
                if(!game.hasPlayer(function(current){
            return current.hasSkill('ssr_zhujiu');
        })) return false;
        return event.filterCard({name:'jiu',isCard:true},player,event);
    },
                check:function(event,player){
        var num=game.countPlayer(function(current){
            return current.hasSkill('ssr_zhujiu')&&get.attitude(player,current)>0;
        });
        return num>=1;
    },
                        content:function(){
        'step 0'
        event.current=player;
        event.okay=false;
        'step 1'
                        if(event.current==player&&event.okay) {
                        event.finish();
                        }else {
                            if(event.current==player&&!event.okay) event.okay=true;
                            if(event.current.hasSkill('ssr_zhujiu')){
                        var next=event.current.chooseToRespond('煮酒：是否为'+get.translation(player.name)+'打出一张黑色手牌，视为其使用了一张【酒】？',{color:'black'});
                        next.set('ai',function(){
                            var event=_status.event;
                            return (get.attitude(event.player,event.source)-2);
                        });
                        next.set('source',player);
                        next.set('ssr_zhujiu',true);
                        next.set('skillwarn','令'+get.translation(player.name)+'使用了一张【酒】');
                        next.noOrdering=true;
                        next.autochoose=lib.filter.autoUseJiu;
                    }
                    else{
                        event.current=event.current.next;
                        event.redo();
                    }
                            }
                    "step 2"
                    if(result.bool){
        if(_status.event.getParent(2).type=='dying'){
            event.dying=player;
            event.type='dying';
        }
        player.useCard({name:'jiu',isCard:true},result.cards,player);
                        if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                            event.current.ai.shown+=0.3;
                            if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                        }
                        event.finish();
                    }
                    else{
                        event.current=event.current.next;
                        event.goto(1);
                    }
    },
                        ai:{
                            threaten:1.4,
                            order:function(){
            return get.order({name:'sha'})+0.2;
        },
                            result:{
                                player:function(player){
                        var num=game.countPlayer(function(current){
                                return current.hasSkill('ssr_zhujiu')&&get.attitude(player,current)>0;
                            });
                        //alert(get.translation(player.name)+'player'+num);
                        if(num<1) return 0;
                        if(_status.event.parent.name=='phaseUse'){
                            if(player.countCards('h','jiu')>0) return 0;
                            if(player.getEquip('zhuge')&&player.countCards('h','sha')>1) return 0;
                            if(!player.countCards('h','sha')) return 0;
                            var targets=[];
                            var target;
                            var players=game.filterPlayer();
                            for(i=0;i<players.length;i++){
                                if(get.attitude(player,players[i])<0){
                                    if(player.canUse('sha',players[i],true,true)){
                                        targets.push(players[i]);
                                    }
                                }
                            }
                            if(targets.length){
                                target=targets[0];
                            }
                            else{
                                return 0;
                            }
                            var num=get.effect(target,{name:'sha'},player,player);
                            for(var i=1;i<targets.length;i++){
                                var num2=get.effect(targets[i],{name:'sha'},player,player);
                                if(num2>num){
                                    target=targets[i];
                                    num=num2;
                                }
                            }
                            if(num<=0) return 0;
                            var e2=target.getEquip(2);
                            if(e2){
                                if(e2.name=='tengjia'){
                                    if(!player.countCards('h',{name:'sha',nature:'fire'})&&!player.getEquip('zhuque')) return 0;
                                }
                                if(e2.name=='renwang'){
                                    if(!player.countCards('h',{name:'sha',color:'red'})) return 0;
                                }
                                if(e2.name=='baiyin') return 0;
                            }
                            if(player.getEquip('guanshi')&&player.countCards('he')>2) return 1;
                            return target.countCards('h')>3?0:1;
                        }
                        if(player==_status.event.dying) return 3;
            },
                                target:function(player,target){
                        var num=game.countPlayer(function(current){
                                return current.hasSkill('ssr_zhujiu')&&get.attitude(player,current)>0;
                            });
                        //alert(get.translation(player.name)+'target'+num);
                        if(num<1) return 0;
                if(target&&target.isDying()) return 2;
                if(target&&!target.isPhaseUsing()) return 0;
                if(lib.config.mode=='stone'&&!player.isMin()){
                    if(player.getActCount()+1>=player.actcount) return 0;
                }
                var shas=player.getCards('h','sha');
                if(shas.length>1&&(player.getCardUsable('sha')>1||player.countCards('h','zhuge'))){
                    return 0;
                }
                shas.sort(function(a,b){
                    return get.order(b)-get.order(a);
                })
                var card;
                if(shas.length){
                    for(i=0;i<shas.length;i++){
                        if(lib.filter.filterCard(shas[i],target)){
                            card=shas[i];break;
                        }
                    }
                }
                else if(player.hasSha()&&player.needsToDiscard()){
                    if(player.countCards('h','hufu')!=1){
                        card={name:'sha'};
                    }
                }
                if(card){
                    if(game.hasPlayer(function(current){
                        return (get.attitude(target,current)<0&&
                            target.canUse(card,current,true,true)&&
                            !current.hasSkillTag('filterDamage',null,{
                                player:player,
                                card:card,
                                jiu:true,
                            })&&
                            get.effect(current,card,target)>0);
                    })){
                        return 1;
                    }
                }
                return 0;
            },
                            },
                            tag:{
                                save:1,
                            },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_wushuang":{
                shaRelated:true,
                audio:"wushuang",
                forced:true,
                locked:true,
                group:["ssr_wushuang_sha","ssr_wushuang_juedou"],
                subSkill:{
                    sha:{
                        audio:"wushuang",
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        priority:2,
                        forced:true,
                        filter:function(event,player){
                return event.card.name=='sha'&&!event.getParent().directHit.contains(event.target);
            },
                        logTarget:"target",
                        content:function(){
                var id=trigger.target.playerid;
                var map=trigger.getParent().customArgs;
                if(!map[id]) map[id]={};
                if(typeof map[id].shanRequired=='number'){
                    map[id].shanRequired++;
                }
                else{
                    map[id].shanRequired=2;
                }
            },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
                    if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
                },
                        },
                        sub:true,
                    },
                    juedou:{
                        audio:"wushuang",
                        trigger:{
                            player:"useCardToPlayered",
                            target:"useCardToTargeted",
                        },
                        priority:2,
                        forced:true,
                        logTarget:function(trigger,player){
                return player==trigger.player?trigger.target:trigger.player
            },
                        filter:function(event,player){
                return event.card.name=='juedou';
            },
                        content:function(){
                var id=(player==trigger.player?trigger.target:trigger.player)['playerid'];
                var idt=trigger.target.playerid;
                var map=trigger.getParent().customArgs;
                if(!map[idt]) map[idt]={};
                if(!map[idt].shaReq) map[idt].shaReq={};
                if(!map[idt].shaReq[id]) map[idt].shaReq[id]=1;
                map[idt].shaReq[id]++;
            },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
                    if(arg.card.name!='juedou'||Math.floor(arg.target.countCards('h','sha')/2)>player.countCards('h','sha')) return false;
                },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_zhanshen":{
                subSkill:{
                    juexing:{
                        skillAnimation:true,
                        animationColor:"grey",
                        audio:"shenfen",
                        enable:"phaseUse",
                        unique:true,
                        juexingji:true,
                        filter:function(event,player){
                            var num=game.players.length;
                            return player.countMark('ssr_zhanshen')>=num&&!player.storage.ssr_zhanshen_juexing;
                        },
                        check:function(event,player){
                            return true;
                        },
                        content:function(){
        "step 0"
            player.setBackground('shen_lvbu','character');
            player.flashAvatar('ssr_zhanshen','shen_lvbu');
            var num=game.players.length;
        player.removeMark('ssr_zhanshen',num);
        if(player.countCards('e')>0) player.gain(player.getCards('e'),'gain2');
        player.disableEquip('equip1');
        player.disableEquip('equip2');
        player.disableEquip('equip3');
        player.disableEquip('equip4');
        player.disableEquip('equip5');
        player.disableJudge();
        'step 1'
        player.addSkill('ssr_shenwei');
        player.addSkill('ssr_shenji');
        player.addSkill('ssr_pojia');
        game.log(player,'获得了技能','#g〖破甲〗、〖神威〗和〖神戟〗')
        player.awakenSkill('ssr_zhanshen');
        player.storage.ssr_zhanshen_juexing=true;
    },
                ai:{
                        order:15,
                    result:{
                        player:function(player){
                            return 5;
                        },
                    },
                },
                        sub:true,
                    },
                },
                group:"ssr_zhanshen_juexing",
                derivation:["ssr_shenwei","ssr_shenji","ssr_pojia"],
                audio:"baonu",
                marktext:"神",
                trigger:{
                    source:"damageSource",
                    player:["damageEnd","enterGame"],
                    global:"gameDrawAfter",
                },
                init:function(player){
        player.storage.ssr_zhanshen_juexing=false;
    },
                unique:true,
                juexingji:true,
                forced:true,
                filter:function(event,player){
        if(player.storage.ssr_zhanshen_juexing) return false;
        return event.name!='damage'||event.num>0; 
    },
                content:function(){
        player.addMark('ssr_zhanshen',trigger.name=='damage'?trigger.num:2);
    },
                intro:{
                    name:"战神",
                    content:"mark",
                },
                ai:{
                    combo:"ssr_zhanshen_juexing",
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "ssr_shenji":{
                audio:'xiuluo',
                group:["fangtian_skill","fangtian_guozhan","ssr_shenji_equip"],
                mod:{
                    attackFrom:function(from,to,distance){
                        return distance-3;
                    },
                },
                subSkill:{
                    equip:{
    usable:1,
    audio:'xiuluo',
    enable:"chooseToUse",
    filterCard:function(card){
        return get.type(card)=='equip';
    },
    viewAs:{
        name:"jiu",
    },
    viewAsFilter:function(player){
        if(!player.countCards('hes',{type:'equip'})>0) return false;
        return true;
    },
    prompt:"将一张装备牌当【酒】使用",
    check:function(card){
        if(_status.event.type=='dying') return 1/Math.max(0.1,get.value(card));
        return 4-get.value(card);
    },
    ai:{
        threaten:1.5,
        basic:{
            useful:function(card,i){
                if(_status.event.player.hp>1){
                    if(i==0) return 4;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
            value:function(card,player,i){
                if(player.hp>1){
                    if(i==0) return 5;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
        },
        order:function(){
            return get.order({name:'sha'})+1;
        },
        result:{
            target:function(player,target){
                if(target&&target.isDying()) return 2;
                if(target&&!target.isPhaseUsing()) return 0;
                if(lib.config.mode=='stone'&&!player.isMin()){
                    if(player.getActCount()+1>=player.actcount) return 0;
                }
                var shas=player.getCards('h','sha');
                if(shas.length>1&&(player.getCardUsable('sha')>1||player.countCards('h','zhuge'))){
                    return 0;
                }
                shas.sort(function(a,b){
                    return get.order(b)-get.order(a);
                })
                var card;
                if(shas.length){
                    for(i=0;i<shas.length;i++){
                        if(lib.filter.filterCard(shas[i],target)){
                            card=shas[i];break;
                        }
                    }
                }
                else if(player.hasSha()&&player.needsToDiscard()){
                    if(player.countCards('h','hufu')!=1){
                        card={name:'sha'};
                    }
                }
                if(card){
                    if(game.hasPlayer(function(current){
                        return (get.attitude(target,current)<0&&
                            target.canUse(card,current,true,true)&&
                            !current.hasSkillTag('filterDamage',null,{
                                player:player,
                                card:card,
                                jiu:true,
                            })&&
                            get.effect(current,card,target)>0);
                    })){
                        return 1;
                    }
                }
                return 0;
            },
        },
        tag:{
            save:1,
        },
    },
                    },
                },
            },
            "ssr_shenwei":{
                subSkill:{
                    use:{
                        audio:'shenwei',
                        trigger:{
                            source:"damageBegin",
                            player:["recoverBegin","drawBegin"],
                        },
                        forced:true,
                        content:function(){
                trigger.num++;
            },
                        sub:true,
                    },
                    card:{
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        audio:'shenwei',
                        content:function(){
                if(player.storage.ssr_shenwei_card.length>0) player.gain(player.storage.ssr_shenwei_card,'fromStorage','draw');
                player.storage.ssr_shenwei_card.length=0;
                player.removeSkill('ssr_shenwei_card');
                game.addVideo('storage',player,['ssr_shenwei_card',get.cardsInfo(player.storage.ssr_shenwei_card),'cards']);
            },
                        mark:true,
                        marktext:"神",
                        intro:{
                            name:"神威",
                            content:"cardCount",
                            onunmark:function(storage,player){
                    if(storage&&storage.length){
                        player.$throw(storage,1000);
                        game.cardsDiscard(storage);
                        game.log(storage,'被置入了弃牌堆');
                        player.storage.ssr_shenwei_card.length=0;
                    }
                },
                        },
                        sub:true,
                    },
                    sha:{
                        audio:"baonu",
                        trigger:{
                            source:"damageSource",
                        },
                        filter:function(event,player){
        return event.num>0&&event.card&&event.card.name=='sha';
    },
                        frequent:true,
                        content:function(){
        'step 0'
        player.draw();
    },
                        sub:true,
                    },
                },
                        audio:'shenwei',
                enable:"phaseUse",
                init:function(player){
        if(!player.storage.ssr_shenwei_card) player.storage.ssr_shenwei_card=[];
    },
                filter:function(event,player){
        return player.countCards('h')>0;
    },
                usable:1,
                content:function(){
        'step 0'
        'step 1'
        player.storage.ssr_shenwei_card=player.storage.ssr_shenwei_card.concat(player.getCards('h'));
        game.addVideo('storage',player,['ssr_shenwei_card',get.cardsInfo(player.storage.ssr_shenwei_card),'cards']);
        player.lose(player.getCards('h'),ui.special,'toStorage');
        'step 2'
        player.chooseCardButton('从〖神威〗中获得一张牌',true,player.storage.ssr_shenwei_card,1).set('ai',function(button){
            if(get.name(button.link)=='sha') return 5;
            return 0;
        });
        'step 3'
        player.storage.ssr_shenwei_card.remove(result.links.slice(0));
        player.gain(result.links.slice(0),'draw');
        player.line(player,'yellow');
        game.log(player,'获得了一张牌');
        'step 4'
        player.addSkill('ssr_shenwei_card');
        player.addTempSkill('ssr_wansha');
        //player.addTempSkill('ssr_shenwei_use',{player:'phaseEnd'});
    },
                ai:{
                    order:function(name,player){
                        var cards=player.getCards('h');
                        if(player.countCards('h','sha')==0){
                            return 1;
                        }
                        return get.order({name:'sha'})+0.5;
                    },
                    result:{
                        player:function(player){
                            return 5;
                        },
                    },
                },
            },
            "ssr_liegong":{
                group:'qilin_skill',
                locked:true,
                forced:true,
                audio:"liegong",
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                logTarget:"target",
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        return true;
    },
                content:function(){
        'step 0'
        if(player.countCards('he')>0) {
            player.chooseCard('he',get.prompt('ssr_liegong'),'是否弃置一张牌令此【杀】不可被响应？',function(card){
                var value=1;
            if(trigger.player.countCards('hs',{name:'shan'})||trigger.player.countCards('e',{name:'bagua'})) {
                var value=9;
            }
               if(get.attitude(player,trigger.player)<0) return value-get.value(card);
            return -1;
        });
            }
        'step 1'
        if(result.bool) {
            player.discard(result.cards);
            trigger.getParent().directHit.push(trigger.target);
            }
    },
                mod:{
                    targetInRange:function(card,player,target,now){
            var name=get.name(card);
            if(name=='sha') return true;
        },
                },
            },
            "ssr_pojia":{
                subSkill:{
                    ext:{
                        firstDo:true,
                        ai:{
                            "unequip2":true,
                        },
                        init:function(player,skill){
                if(!player.storage[skill]) player.storage[skill]=[];
            },
                        onremove:true,
                        trigger:{
                            player:["damage","damageCancelled","damageZero"],
                            source:["damage","damageCancelled","damageZero"],
                            target:["shaMiss","useCardToExcluded","useCardToEnd"],
                            global:["useCardEnd"],
                        },
                        charlotte:true,
                        filter:function(event,player){
                return player.storage.ssr_pojia_ext&&event.card&&player.storage.ssr_pojia_ext.contains(event.card)&&(event.name!='damage'||event.notLink());
            },
                        silent:true,
                        forced:true,
                        popup:false,
                        priority:12,
                        content:function(){
                player.storage.ssr_pojia_ext.remove(trigger.card);
                if(!player.storage.ssr_pojia_ext.length) player.removeSkill('ssr_pojia_ext');
            },
                        sub:true,
                    },
                },
                priority:25,
                trigger:{
                    player:"useCardToPlayered",
                },
                filter:function(event){
        return event.card.name=='sha';
    },
                forced:true,
                logTarget:"target",
                content:function(){
        trigger.target.addTempSkill('ssr_pojia_ext');
        trigger.target.storage.ssr_pojia_ext.add(trigger.card);
    },
                ai:{
                    "unequip_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg&&arg.name=='sha') return true;
            return false;
        },
                },
            },
            "ssr_wansha":{
                subSkill:{
                    kill:{
                        mod:{
                            cardSavable:function(card,player){
                    if(!_status.currentPhase) return;
                    if(_status.currentPhase.isAlive()&&_status.currentPhase.hasSkill('ssr_wansha')&&_status.currentPhase!=player){
                        if(card.name=='tao'&&!player.isDying()) return false;
                    }
                },
                            cardEnabled:function(card,player){
                    if(!_status.currentPhase) return;
                    if(_status.currentPhase.isAlive()&&_status.currentPhase.hasSkill('ssr_wansha')&&_status.currentPhase!=player){
                        if(card.name=='tao'&&!player.isDying()) return false;
                    }
                },
                        },
                        sub:true,
                    },
                },
                locked:true,
                audio:"wansha",
                global:"ssr_wansha_kill",
                trigger:{
                    global:"dying",
                },
                priority:15,
                forced:true,
                filter:function(event,player,name){
        return _status.currentPhase==player&&event.player!=player;
    },
                content:function(){},
            },
            "ssr_ganglie":{
                audio:"ganglie",
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
        return (event.source!=undefined);
    },
                check:function(event,player){
        return (get.attitude(player,event.source)<=0);
    },
                logTarget:"source",
                content:function(){
        "step 0"
        event.num=trigger.num;
        'step 1'
        player.useCard({name:'sha'},trigger.source);
        'step 2'
        if(result.bool);
        else {
        if(trigger.source.countDiscardableCards(player,'he')){
            player.discardPlayerCard('he',trigger.source,true);
        }
        }
        'step 3'
        event.num--;
        if(event.num>0){
            event.goto(1);
        }
        else{
            event.finish();
        }
    },
                ai:{
                    "maixie_defend":true,
                    effect:{
                        target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                return 0.8;
                // if(get.tag(card,'damage')&&get.damageEffect(target,player,player)>0) return [1,0,0,-1.5];
            },
                    },
                },
            },
            "ssr_danjing":{
                audio:"fenyong",
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
        return event.card&&event.card.name=='wanjian';
    },
                forced:true,
                content:function(){
        "step 0"
        player.recover();
    },
                ai:{
                    notrick:true,
                    notricksource:true,
                    effect:{
                        target:function(card,player,target,current){
                if(get.name(card)=='wanjian'&&get.tag(card,'damage')){
                    return 'zeroplayertarget';
                }
            },
                    },
                },
            },
            "ssr_chuli":{
                subSkill:{
                    spade:{
                        charlotte:true,
                        sub:true,
                    },
                    club:{
                        charlotte:true,
                        sub:true,
                    },
                    diamond:{
                        charlotte:true,
                        sub:true,
                    },
                    heart:{
                        charlotte:true,
                        sub:true,
                    },
                    forbid:{
                        charlotte:true,
                        sub:true,
                    },
                },
                mark:true,
                marktext:"药",
                audio:"qingnang",
                enable:"phaseUse",
                init:function(player){
        if(!player.storage.ssr_chuli) player.storage.ssr_chuli=[];
    },
                filter:function(event,player){
        return !player.hasSkill('ssr_chuli_forbid');
    },
                filterTarget:function(card,player,target){
        return target.countCards('h');
    },
                content:function(){
        "step 0"
            player.choosePlayerCard(target,'h',true).set('ai',function(card){
                var value=1000;
                var suit=['spade','club','diamond','heart'];
                var suits=[0,0,0,0];
                var storage=player.storage.ssr_chuli;
                for(i=0;i<storage.length;i++) {
                    for(j=0;j<suit.length;j++) {
                        if(get.suit(storage[i])==suit[j]) {
                            suits[j]++;
                        }
                    }
                }
                if(player.hasSkill('ssr_chuli_'+get.suit(card))) {
                    value-=3;
                }
                for(i=0;i<suit.length;i++) {
                    if(get.suit(card)==suit[i]) {
                        return value-suits[i];
                    }
                }
            });
        "step 1"
            if(result.bool){
                player.storage.ssr_chuli=player.storage.ssr_chuli.concat(result.links);
                player.markSkill('ssr_chuli');
                player.syncStorage('ssr_chuli');
                target.lose(result.links,ui.special,'toStorage');
                target.$give(result.links,player,false);
                target.recover();
                if(get.suit(result.links)) {
                    if(player.hasSkill('ssr_chuli_'+get.suit(result.links))) {
                        player.addTempSkill('ssr_chuli_forbid');
                    }else {
                        player.addTempSkill('ssr_chuli_'+get.suit(result.links));
                    }
                }
            }
        },
                intro:{
                    name:"灵丹妙药",
                    //content:"cards",
                    content:function (storage,player,skill){
                        var said='◈本回合已获得过的花色：';
                        var suit=['spade','club','diamond','heart'];
                        var gets=false;
                        for(i=0;i<suit.length;i++) {
                            if(player.hasSkill('ssr_chuli_'+suit[i])) {
                                if(gets) var said=said+'、';
                                var said=said+get.translation(suit[i]);
                                gets=true;
                            }
                        }
                        if(!gets) {
                            var said='◈本回合尚未获得过任何花色';
                        }
                        if(player.hasSkill('ssr_chuli_forbid')) {
                            var said=said+'<br>(本回合内你不能再使用〖除疠〗)';
                        }
                        var suits=[0,0,0,0];
                        for(i=0;i<storage.length;i++) {
                            for(j=0;j<suit.length;j++) {
                                if(get.suit(storage[i])==suit[j]) {
                                    suits[j]++;
                                }
                            }
                        }
                        for(i=0;i<suit.length;i++) {
                            var said=said+'<li>拥有'+get.translation(suit[i])+'花色共'+suits[i]+'张';
                        }
                        return said;
                        },
                    onunmark:function(storage,player){
                        if(storage&&storage.length){
                            player.$throw(storage,1000);
                            game.cardsDiscard(storage);
                            game.log(storage,'被置入了弃牌堆');
                            storage.length=0;
                        }
                    },
                },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function(player,target){
                            if(player==target) {
                                var value=4;
                                var suit=['spade','club','diamond','heart'];
                                for(i=0;i<player.storage.ssr_chuli.length;i++) {
                                    for(j=0;j<suit.length;j++) {
                                        if(get.suit(player.storage.ssr_chuli[i])==suit[j]) {
                                            value--;
                                        }
                                    }
                                }
                                if(player.needsToDiscard()>0) value++;
                                return target.maxHp-target.hp+value;
                            }
                            if(target.hp==target.maxHp) {
                                return -target.countCards('h');
                            }else {
                                return target.maxHp-target.hp;
                            }
                        },
                    },
                    order:10,
                    expose:0.2,
                },
            },
            "ssr_xianfang":{
                audio:"jijiu",
                skillAnimation:true,
                animationColor:"green",
                trigger:{
                    global:"dying",
                },
                priority:-7,
                filter:function(event,player){
                if(event.player.hp>0) return false;
                if(player.storage.ssr_chuli&&player.storage.ssr_chuli.length) {
                    for(i=0;i<player.storage.ssr_chuli.length;i++) {
                        if(get.suit(player.storage.ssr_chuli[i])=='spade') var spade=true;
                        if(get.suit(player.storage.ssr_chuli[i])=='club') var club=true;
                        if(get.suit(player.storage.ssr_chuli[i])=='diamond') var diamond=true;
                        if(get.suit(player.storage.ssr_chuli[i])=='heart') var heart=true;
                    }
                if(spade&&club&&diamond&&heart) return true;
                }
            },
                check:function(event,player){
                    var att=get.attitude(player,event.player);
                    return att>0;
                },
                content:function(){
                    "step 0"
                    for(i=0;i<player.storage.ssr_chuli.length;i++) {
                        if(get.suit(player.storage.ssr_chuli[i])=='spade'&&!spade) {
                            var spade=true;
                            player.storage.ssr_chuli.remove(player.storage.ssr_chuli[i]);
                        }
                        if(get.suit(player.storage.ssr_chuli[i])=='club'&&!club) {
                            var club=true;
                            player.storage.ssr_chuli.remove(player.storage.ssr_chuli[i]);
                        }
                        if(get.suit(player.storage.ssr_chuli[i])=='diamond'&&!diamond) {
                            var diamond=true;
                            player.storage.ssr_chuli.remove(player.storage.ssr_chuli[i]);
                        }
                        if(get.suit(player.storage.ssr_chuli[i])=='heart'&&!heart) {
                            var heart=true;
                            player.storage.ssr_chuli.remove(player.storage.ssr_chuli[i]);
                        }
                    }
                    trigger.player.recover(3);
                    player.markSkill('ssr_chuli');
                    player.update();
                },
                ai:{
                    save:true,
                    expose:0.3,
                    result:{
                        target:15,
                    },
                },
            },
            "ssr_yizhong":{
                group:"ssr_yizhong_jia",
                locked:true,
                audio:"yizhong",
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                check:function(event,player){
        if(player==event.player) return true;
        return false;
    },
                filter:function(event,player){
        if(event.card&&get.color(event.card)=='red') return false;
        return true;
    },
                content:function(){
        player.addMark('ssr_yizhong_jia',trigger.num);
    },
    subSkill:{
        jia:{
    audio:'jieyue',
    preHidden:true,
    trigger:{
        player:["damageBegin"],
    },
    forced:true,
    locked:true,
    priority:-30,
    filter:function(event,player){
        return event.num>0&&player.countMark('ssr_yizhong_jia')>0;
    },
    content:function(){
        if(trigger.num>player.countMark('ssr_yizhong_jia')) {
            var num=player.countMark('ssr_yizhong_jia');
        }else {
            var num=trigger.num;
        }
        if(trigger.name=='damage') {
           if(trigger.animate!==false){
              player.$damage(trigger.source);
                 game.broadcastAll(function(nature,player){
                    if(lib.config.animation&&!lib.config.low_performance){
                        if(nature=='fire'){
                           player.$fire();
                        }
                        else if(nature=='thunder'){
                           player.$thunder();
                        }
                     }
                  },trigger.nature,player);
               player.$damagepop(-num,trigger.nature);
           }
        }
        game.log(player,'的护甲抵挡了',get.cnNumber(num),'点伤害');
        player.removeMark('ssr_yizhong_jia',num);
        trigger.num-=num;
    },
    marktext:"甲",
    intro:{
        name:"铁甲钢躯",
        content:"mark",
    },
    mod:{
        maxHandcardBase:function (player,num){
            return num+player.countMark('ssr_yizhong_jia');
        },
    },
    sub:true,
        },
    },
            },
            "ssr_zhenjun":{
                audio:"jieyue",
                subSkill:{
                    break:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
        return event.player==player.storage.ssr_zhenjun_break;
    },
                        forced:true,
                        silent:true,
                        intro:{
                    name:"铁令如山",
                    content:"你不能使用或打出黑色的牌。",
                },
                mark:true,
                marktext:"禁令",
                        content:function(){
        player.removeSkill('ssr_zhenjun_break');
    },
                        mod:{
                            cardSavable:function(card,player){
                        if(get.color(card)=='black') return false;
                },
                            cardEnabled:function(card,player){
                        if(get.color(card)=='black') return false;
                },
                            cardResponsabled:function(card,player){
                        if(get.color(card)=='black') return false;
                },
                        },
                        sub:true,
                    },
                },
                enable:"phaseUse",
                filterCard:function (card){
        return get.suit(card)=='spade';
    },
                selectCard:function (){
        return 1;
    },
                        filter:function (event,player){
        return player.countCards('he',{suit:'spade'})>0;
    },
                filterTarget:function (card,player,target){
        if(player==target) return false;
        if(target.hasSkill('ssr_zhenjun_break')) return false;
        return true;
    },
                content:function (){
        "step 0"
        target.storage.ssr_zhenjun_break=player;
        "step 1"
        target.addSkill('ssr_zhenjun_break');
    },
                check:function (card){
        return 10-get.value(card);
    },
                position:"he",
                ai:{
                    order:9,
                    result:{
                        target:function (player,target){
                if(!ui.selected.cards.length){
                    if(player.hp<2) return 0;
                }
                return -target.countCards('h',{color:'black'});
            },
                },
                threaten:1.2,
                },
            },
            "ssr_huanhua":{
                init:function (player){
    if(!player.storage.ssr_huanhua_name) {
        player.storage.ssr_huanhua_name=player.name;
        }
    },
                intro:{
                    name:"幻化",
                    content:function (storage,player,skill){
var name=player.storage.ssr_huanhua_name;
var str='<li>武将本体：'+get.translation(name);
return str;
        },
                },
                marktext:"化身",
                priority:20,
                audio:"huashen",
                trigger:{
                    player:["phaseBegin","phaseEnd"],
                },
                filter:function(event,player){
                    var num=game.countPlayer(function(current){
                                return player.name!=current.name&&player!=current&&current.group!='shen';
                            });
                return num>0;
    },
                direct:true,
                content:function(){
        "step 0"
        if(!player.storage.ssr_huanhua_maxhp) {
            player.storage.ssr_huanhua_maxhp=player.maxHp;
        }else {
            player.maxHp=player.storage.ssr_huanhua_maxhp;
        }
        var num=player.countDisabled();
        if(num){
            for(var i=1;i<6;i++){
                if(player.isDisabled(i)) trigger.player.enableEquip(i);
            }
        }
        player.chooseTarget(get.prompt2('ssr_huanhua'),function(card,player,target){
            return player!=target&&player.name!=target.name&&target.group!='shen';
        }).set('ai',function(target){
            var player=_status.event.player;
            return 6-target.maxHp;
        });
        player.update();
        "step 1"
        if(result.bool){
            player.logSkill(event.name,result.targets);
            event.target=result.targets[0];
            event.skills=event.target.getSkills(true,false).slice(0);
            for(i=0;i<event.skills.length;i++) {
             var info=get.info(event.skills[i]);
             if(event.skills[i]=='boss_baonu'||info.juexingji){
                  event.skills.splice(i--,1);
             }
            }
            player.name=event.target.name;
            player.addAdditionalSkill('ssr_huanhua',event.skills);
            player.storage.ssr_huanhua=0;
            player.markSkill('ssr_huanhua');
            player.syncStorage('ssr_huanhua');
            player.storage.ssr_huanhua_skills=event.skills;
            player.setBackground(event.target.name,'character');
            player.flashAvatar('ssr_huanhua',event.target.name);
        }
        player.update();
    },
            },
            "ssr_xinsheng":{
                derivation:["qianxing"],
                audio:"xinsheng",
                enable:"chooseToUse",
                filter:function(event,player){
        if(event.type=='dying'){
            if(player!=event.dying) return false;
        if(player.storage.ssr_huanhua_name) {
        return player.name!=player.storage.ssr_huanhua_name;
            }else {
                return false;
            }
        }
    },
                content:function(){
        'step 0'
        player.name=player.storage.ssr_huanhua_name;
        'step 1'
        player.removeSkill(player.storage.ssr_huanhua_skills);
        player.unmarkSkill('ssr_huanhua');
        'step 2'
        if(player.hp<1){
            player.recover(1-player.hp);
        }
        if(player.countCards('he',{suit:'heart'})) player.chooseToDiscard(get.prompt('ssr_xinsheng'),'he',{suit:'heart'},'是否弃置一张红桃牌并获得〖潜行〗直到你的回合开始？',lib.filter.cardDiscardable).set('ai',function(card){
            return 9-get.value(card);
        }).set('logSkill','ssr_xinsheng').setHiddenSkill('ssr_xinsheng');
        'step 3'
        if(result.bool){
            player.addTempSkill('qianxing',{player:'phaseBegin'});
        }
        player.setBackground(player.storage.ssr_huanhua_name,'character');
        player.flashAvatar('ssr_huanhua',player.storage.ssr_huanhua_name);
        player.update();
    },
                ai:{
                    order:3,
                    save:true,
                    result:{
            player:function(player){
                return 5;
            },
        },
                    threaten:function(player,target){
            if(player.storage.ssr_huanhua_name) {
            if(player.name!=player.storage.ssr_huanhua_name) return 0.6;
            }
        },
                },
            },
            "ssr_shiyong":{
                subSkill:{
                    lose:{
                        forced:true,
                        audio:"shiyong",
                        trigger:{
                            global:"shaMiss",
                        },
                        filter:function(event,player){
        return event.target==player;
    },
                        check:function(event,player,source){
        return get.attitude(player,event.player)<0;
    },
                        logTarget:"target",
                        content:function(){
        trigger.player.loseHp();
    },
                        sub:true,
                    },
                },
                locked:true,
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha'&&(get.color(card)=='red')){
                    return [1,-2];
                }
                if(card.name=='sha'&&(get.color(card)=='black')){
                    return [0,-0.6];
                }
            },
                    },
                },
                group:"ssr_shiyong_lose",
                audio:"shiyong",
                trigger:{
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
            return get.color(event.card)=='red';
    },
                check:function(event,player){
        return player==event.player;
    },
                content:function(){
        var id=player.playerid;
        var map=trigger.getParent().customArgs;
        if(!map[id]) map[id]={};
        if(typeof map[id].shanRequired=='number'){
            map[id].shanRequired++;
        }
        else{
            map[id].shanRequired=2;
        }
    },
            },
            "ssr_qingjian":{
                audio:"qingjian",
                trigger:{
                    player:"phaseDrawBegin2",
                },
                direct:true,
                filter:function(event,player){
        return event.num>0&&!event.numFixed&&game.hasPlayer(function(target){
            return player!=target;
        });
    },
                content:function (){
        "step 0"
        var num=2;
        player.chooseTarget(get.prompt('ssr_qingjian'),'少摸一张牌，然后令至多'+get.translation(num)+'名其他角色各摸一张牌',[1,num],function(card,player,target){
            return player!=target;
        },function(target){
            var att=get.attitude(_status.event.player,target);
            return att;
        });
        "step 1"
        if(result.bool){
            result.targets.sortBySeat();
            player.logSkill('ssr_qingjian',result.targets);
            for(i=0;i<result.targets.length;i++) {
                result.targets[i].draw();
            }
            trigger.num--;
        }
        else{
            event.finish();
        }
        "step 2"
        if(trigger.num<=0) game.delay();
    },
                ai:{
                    threaten:1.1,
                    expose:0.2,
                },
            },
            "ssr_yaowu":{
                shaRelated:true,
                audio:"yaowu",
                trigger:{
                    player:"shaMiss",
                },
                filter:function(event){
        return event.target.countCards('h')>0&&get.color(event.card)=='black';
    },
                check:function(event,player){
        return get.attitude(player,event.target)<0;
    },
                logTarget:"target",
                content:function(){
        player.discardPlayerCard('h',trigger.target,true);
    },
            },
            "ssr_kurou":{
                audio:"kurou",
                enable:"phaseUse",
                usable:2,
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('h');
    },
                content:function(){
        "step 0"
        player.loseHp();
        event.videoId=lib.status.videoId++;
        var cards=target.getCards('h');
        if(player.isOnline2()){
            player.send(function(cards,id){
                ui.create.dialog('苦肉',cards).videoId=id;
            },cards,event.videoId);
        }
        event.dialog=ui.create.dialog('苦肉',cards);
        event.dialog.videoId=event.videoId;
        if(!event.isMine()){
            event.dialog.style.display='none';
        }
        player.chooseButton([1,2]).set('filterButton',function(button){
            return true;
        }).set('dialog',event.videoId);
        "step 1"
        if(result.bool){
            event.card=result.links;
            var func=function(card,id){
                var dialog=get.idDialog(id);
                if(dialog){
                    for(i=0;i<dialog.buttons.length;i++){
                        if(dialog.buttons[i].link==card){
                            dialog.buttons[i].classList.add('selectedx');
                        }
                        else{
                            dialog.buttons[i].classList.add('unselectable');
                        }
                    }
                }
            }
            if(player.isOnline2()){
                player.send(func,event.card,event.videoId);
            }
            else if(event.isMine()){
                func(event.card,event.videoId);
            }
        }
        else{
            if(player.isOnline2()){
                player.send('closeDialog',event.videoId);
            }
            event.dialog.close();
            event.finish();
        }
        "step 2"
        if(player.isOnline2()){
            player.send('closeDialog',event.videoId);
        }
        event.dialog.close();
        var card=event.card;
            player.showCards(card,'苦肉');
            game.log(player,'将',event.card,'苦肉');
            player.gain(card,target,'gain2');
    },
                ai:{
                    order:8,
                    expose:0.2,
                    result:{
                        target:function(player,target){
                var value=-2;
                if(target.countCards('h')<=1) var value=value+1;
                if(target.countCards('h',{name:'shan'})&&target.countCards('h',{name:'shan'})<=2) var value=value-target.countCards('h',{name:'shan'});
                if(target.countCards('h',{name:'tao'})) var value=value-target.countCards('h',{name:'tao'})*2;
                if(target.countCards('h',{name:'jiu'})) var value=value-2;
                if(player.hp<2) var value=0;
                return value;
            },
                        player:function(player){
                if(player.hp<2&&!player.countCards('hs',{name:'tao'})>0&&!player.countCards('hs',{name:'jiu'})>0) return -5;
                if(player.hp<=2) return player.countCards('h')==0?1:0;
                if(player.countCards('h',{name:'sha'})) return 1;
                if(player.hp<2) return -1;
                return player.countCards('h')<=player.hp?1:0;
            },
                    },
                    effect:function(card,player,target){
            if(get.tag(card,'damage')){
                if(player.hasSkillTag('jueqing',false,target)) return [1,1];
                return 1.2;
            }
            if(get.tag(card,'loseHp')){
                if(player.hp<=1) return;
                return [0,0];
            }
        },
                },
            },
            "ssr_lihun":{
                subSkill:{
                    hun:{
                        mark:true,
                        marktext:"傀儡",
                        intro:{
                            name:"魂魄附体",
                            content:"武将正在被操控",
                        },
                        trigger:{
                            player:["useCardBefore"],
                        },
                        priority:2,
                        filter:function(event,player){
        return player.storage.ssr_lihun_benti;
    },
                        forced:true,
                        silent:true,
                        content:function(){
        var him=player.storage.ssr_lihun_benti;
        him.line(player,'grey');
    },
                        sub:true,
                        popup:false,
                    },
                    dam:{
                        mark:true,
                        marktext:"离魂",
                        intro:{
                            name:"魂离本体",
                            content:"离魂期间本体防止受到的任何伤害或体力流失",
                        },
                        trigger:{
                            player:["damageBefore","loseHpBefore"],
                        },
                        filter:function(event,player){
                            return true;
                        },
                        priority:100,
                        forced:true,
                        content:function(){
                            trigger.cancel();
                        },
                        ai:{
                            nofire:true,
                            nothunder:true,
                            effect:{
                                target:function(card,player,target,current){
                                    if(get.tag(card,'damage')) return 'zerotarget';
                                    if(get.tag(card,'fireDamage')) return 'zerotarget';
                                    if(get.tag(card,'thunderDamage')) return 'zerotarget';
                                },
                            },
                        },
                        sub:true,
                    },
                },
                audio:"lihun",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                priority:-2,
                direct:true,
                content:function(){
        'step 0'
        event.cards=get.cards(2);
        player.chooseControl('ok').set('dialog',['〖离魂〗牌堆顶的牌',event.cards]);
        'step 1'
        player.chooseTarget(get.prompt('ssr_lihun'),'跳过本回合，将'+get.translation(event.cards)+'交给一名男性角色并替其执行一个出牌阶段和弃牌阶段',1,function(card,player,target){
            return target.sex=='male';
        },function(target){
            if(player.hp*2+player.countCards('h')>5) {
                return 1;
            }else {
                return -1;
            }
        });
        "step 2"
        if(result.bool){
            event.realgameme=game.me;
            player.skip('phaseJudge');
            player.skip('phaseDraw');
            player.skip('phaseUse');
            player.skip('phaseDiscard');
            event.target=result.targets[0];
            player.logSkill(event.name,event.target);
            if(event.cards.length>0) event.target.gain(event.cards,'draw');
            event.target._trueMe=player;
            game.addGlobalSkill('autoswap');
            if(event.target==game.me){
            game.notMe=true;
            if(!_status.auto) ui.click.auto();
            }
            player.addTempSkill('ssr_lihun_dam');
            event.target.addTempSkill('ssr_lihun_hun');
            event.target.storage.ssr_lihun_benti=player;
            if(player==event.realgameme) {
            game.swapPlayerAuto(event.target);
        }
            }else {
                var first = ui.cardPile.firstChild;
                var cards = event.cards;
                for (var i = 0; i < cards.length; i++) {
                    ui.cardPile.insertBefore(cards[i], first);
                }
                event.finish();
            }
        'step 3'
        if(result.bool){
            event.target.phaseUse();
            event.target.phaseDiscard();
            //if(event.cards.length>0) event.target.chooseToDiscard(event.cards.length,'h',true);
            }
        'step 4'
        if(result.bool){
            player.removeSkill('ssr_lihun_dam');
            event.target.removeSkill('ssr_lihun_hun');
            if(event.target==game.me){
                if(!game.notMe) game.swapPlayerAuto(event.target._trueMe)
                else delete game.notMe;
                if(_status.auto) ui.click.auto();
            }
            delete event.target._trueMe;
        }
    },
                ai:{
                    result:{
                        player:1,
                    },
                    expose:0.2,
                    threaten:1.2,
                },
            },
            "ssr_biyue":{
                audio:"biyue",
                locked:true,
                mod:{
                    globalTo:function(from,to,distance){
                        var num=0;
                        if(to.countCards('h')<1) num++;
                        if(to.countCards('e')<1) num++;
                        if(to.countCards('j')<1) num++;
                        return distance+num;
                    },
                },
                priority:1,
                marktext:"月",
                intro:{
                    name:"闭月羞花",
                    content:function (storage,player,skill){
                        var str='<li>没有牌的区域：';
                        var num=0;
                        var cnname=['h','手牌区','e','装备区','j','判定区'];
                        for(i=0;i*2<cnname.length;i++) {
                            if(storage.contains(cnname[i*2])) {
                                if(num>0) str+='、';
                                str+=cnname[i*2+1];
                                num++;
                            }
                        }
                        return str;
                    },
                },
                trigger:{
                    player:["loseAfter","enterGame"],
                    global:["gameDrawAfter","equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
                },
                priority:-77,
                forced:true,
                filter:function(event,player){
                    if(!player.storage.ssr_biyue) player.storage.ssr_biyue=[];
                    var all=['h','e','j'];
                    for(i=0;i<all.length;i++) {
                        if(player.storage.ssr_biyue.contains(all[i])) {
                            if(player.countCards(all[i])>0) return true;
                        }else {
                            if(player.countCards(all[i])<1) return true;
                        }
                    }
                    return false;
                },
                init:function(player){
                    player.storage.ssr_biyue=[];
                },
                content:function(){
                    'step 0'
                    player.storage.ssr_biyue=[];
                    'step 1'
                    var all=['h','e','j'];
                    for(i=0;i<all.length;i++) {
                        if(player.countCards(all[i])<1) player.storage.ssr_biyue.push(all[i]);
                    }
                    'step 2'
                    if(player.storage.ssr_biyue.length>0) {
                        player.markSkill('ssr_biyue');
                    }else {
                        player.unmarkSkill('ssr_biyue');
                    }
                },
                ai:{
                    result:{
                        player:1.5,
                    },
                    threaten:1.2,
                },
            },
            "ssr_yuxi_cardskill":{},
            "ssr_yongsi":{
                derivation:"ssr_yuxi_cardskill",
                audio:"drlt_yongsi",
                global:"ssr_yongsi_lose",
                init:function (player,skill){
                    if(player.hasZhuSkill('ssr_yongsi')) {
                        //lib.arenaReady.push(function(){
                        var name='ssr_yongsi_yuxi_card';
                        lib.card[name]={
                            skills:["ssr_yongsi_yuxi"],
                            fullskin:true,
                            type:"equip",
                            image:'ext:祖安武将/card/yongsi_yuxi.png',
                            color:'white',
                            opacity:1,
                            textShadow:'black 0 0 2px',
                            subtype:"equip5",
                            enable:true,
                            selectTarget:-1,
                            filterTarget:function(card,player,target){
                                return target==player;
                            },
                            modTarget:true,
                            allowMultiple:false,
                            content:function(){
                                if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
                            },
                            toself:true,
                            ai:{
                                equipValue:9,
                                basic:{
                                    order:function(card,player){
                                        if(player&&player.hasSkillTag('reverseEquip')){
                                            return 8.5-get.equipValue(card,player)/20;
                                        }
                                        else{
                                            return 8+get.equipValue(card,player)/20;
                                        }
                                    },
                                    useful:2,
                                    equipValue:1,
                                    value:function(card,player,index,method){
                                        if(player.isDisabled(get.subtype(card))) return 0.01;
                                        var value=0;
                                        var info=get.info(card);
                                        var current=player.getEquip(info.subtype);
                                        if(current&&card!=current){
                                            value=get.value(current,player);
                                        }
                                        var equipValue=info.ai.equipValue;
                                        if(equipValue==undefined){
                                            equipValue=info.ai.basic.equipValue;
                                        }
                                        if(typeof equipValue=='function'){
                                            if(method=='raw') return equipValue(card,player);
                                            if(method=='raw2') return equipValue(card,player)-value;
                                            return Math.max(0.1,equipValue(card,player)-value);
                                        }
                                        if(typeof equipValue!='number') equipValue=0;
                                        if(method=='raw') return equipValue;
                                        if(method=='raw2') return equipValue-value;
                                        return Math.max(0.1,equipValue-value);
                                    },
                                },
                                result:{
                                    target:function(player,target,card){
                                        return get.equipResult(player,target,card.name);
                                    },
                                },
                            },
                        };
                        lib.translate[name]="传国玉玺";
                        lib.translate[name+'_info']="锁定技：一、与你势力不同的角色始终视为在你的攻击范围内；二、当你成为【杀】的目标时，你可以弃置两张手牌（不足则全弃，无牌则不弃），然后摸两张牌；三、发动二效果后你可以令一名势力与你相同的角色也执行一次二效果。";
                        player.equip(game.createCard(name));
                    }
            //});
                },
                zhuSkill:true,
                lock:true,
                forced:true,
                subSkill:{
                    yuxi:{
                        audio:'drlt_yongsi',
                        trigger:{
                            target:"useCardToTargeted",
                        },
                        check:function(event,player){
                            var cards=player.getCards('h');
                            if(cards.length<=2){
                                for(var i=0;i<cards.length;i++){
                                    if(cards[i].name=='shan'||cards[i].name=='tao') return false;
                                }
                            }
                            return true;
                        },
                        filter:function(event,player){
                            return event.card.name=='sha';
                        },
                        prompt2:"当你成为【杀】的目标时，你可以弃置两张手牌（不足则全弃，无牌则不弃），然后摸两张牌；发动后你可以令一名势力与你相同的角色也执行一次此效果。",
                        content:function(){
                            "step 0"
                            player.chooseToDiscard(2,true,'h');
                            player.draw(2);
                            if(game.hasPlayer(function(current){
                                return player!=current&&player.group==current.group;
                            })) {
                            player.chooseTarget(get.prompt('ssr_yongsi_yuxi_card'),'是否令一名'+get.translation(player.group)+'势力角色执行一次【传国玉玺】的效果？',1,function(card,player,target){
                                return target!=player&&player.group==target.group;
                            },function(target){
                                return (Math.max(2-target.countCards('h'),1)*1.5+target.countCards('e',{subtype:'equip1'})+target.countCards('e',{subtype:'equip4'}))*get.attitude(player,target);
                            });
                            }else event.finish();
                            "step 1"
                            if(result.bool){
                                result.targets[0].chooseToDiscard(2,true,'he');
                                result.targets[0].draw(2);
                            }
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                                    if(card.name=='sha') return [1,0.5];
                                },
                            },
                        },
                        mod:{
                            attackFrom:function(from,to,distance){
                                //if(from.group==to.group) return distance-Infinity;
                                if(from.group!=to.group) return 0;
                            },
                            /*canBeDiscarded:function(card){
                                if(game.hasPlayer(function(current){
                                    return current.hasZhuSkill('ssr_yongsi');
                                })&&get.position(card)=='e'&&['equip5'].contains(get.subtype(card))) return false;
                            },*/
                        },
                        sub:true,
                    },
                    lose:{
                        trigger:{
                            player:"loseAfter",
                            global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
                        },
                        forced:true,
                        filter:function(event,player){
                            if(event.type!='discard') return false;
                            var evt=event.getl(player);
                            if(evt&&evt.player==player) {
                                if (['useCard'].contains(event.getParent().name)) return false;
                                var sumcard=[];
                                if(evt.es&&evt.es.length>0) {
                                    var sumcard=sumcard.concat(evt.es);
                                }
                                if(evt.hs&&evt.hs.length>0) {
                                    var sumcard=sumcard.concat(evt.hs);
                                }
                                if(sumcard&&sumcard.length>0) {
                                    for(i=0;i<sumcard.length;i++){
                                        if(get.name(sumcard[i])=='ssr_yongsi_yuxi_card') return true;
                                    }
                                }
                            }
                        },
                        init:function(player,skill){
                            player.storage.ssr_yongsi_yuxi=[];
                        },
                        content:function(){
                            'step 0'
                            event.cards=[];
                            var evt=trigger.getl(player);
                            var sumcard=[];
                            if(evt.es&&evt.es.length>0) {
                                var sumcard=sumcard.concat(evt.es);
                            }
                            if(evt.hs&&evt.hs.length>0) {
                                var sumcard=sumcard.concat(evt.hs);
                            }
                            for(i=0;i<sumcard.length;i++){
                                if(get.name(sumcard[i])=='ssr_yongsi_yuxi_card') event.cards.push(sumcard[i]);
                            }
                            'step 1'
                            if(!player.hasSkill('ssr_yongsi_gain')) {
                                player.addSkill('ssr_yongsi_gain');
                                player.storage.ssr_yongsi_yuxi=[];
                            }
                            player.lose(event.cards,ui.special,'toStorage');
                            player.$give(event.cards,player,false);
                            player.storage.ssr_yongsi_yuxi=player.storage.ssr_yongsi_yuxi.concat(event.cards);
                        },
                        sub:true,
                    },
                    gain:{
                        trigger:{
                            global:["phaseEnd"],
                        },
                        intro:{
                            name:"玉玺流亡",
                            content:"回合结束后【传国玉玺】将回到你的手牌。",
                        },
                        mark:true,
                        marktext:"玉玺",
                        priority:-101,
                        forced:true,
                        silent:true,
                        content:function(){
                            "step 0"
                            player.gain(player.storage.ssr_yongsi_yuxi,'gain2');
                            "step 1"
                            player.removeSkill('ssr_yongsi_gain');
                        },
                        sub:true,
                    },
                },
            },
            "ssr_wangzun":{
                subSkill:{
                    sha:{
                        trigger:{
                            player:"useCard",
                        },
                        mark:true,
                        forced:true,
                        filter:function (event,player){
        if(_status.currentPhase!=player) return false;
        if (event.skill=='qinglong_skill') return false;
        return (event.card.name=='sha'&&player.getStat().card.sha>1);
    },
                        content:function (){
        
    },
                        intro:{
                            content:function (storage,player,skill){
        return '你的回合内你可以额外使用一张【杀】';
        },
                        },
                        mod:{
                            cardUsable:function (card,player,num){
            if(card.name=='sha') return num+1;
        },
                        },
                        sub:true,
                    },
                },
                audio:"wangzun",
                trigger:{
                    global:"phaseDrawBegin",
                },
                check:function(event,player){
                    var att=get.attitude(player,event.player);
                    if(event.player==player) var att=0-att;
                    return !game.hasPlayer(function(current){
                        return get.attitude(player,current)<att;
                    });
                },
                filter:function(event,player){
                    return event.player.identity=='zhu';
                },
                priority:-2,
                logTarget:"player",
                content:function(){
                "step 0"
                trigger.num--;
        player.chooseTarget(get.prompt('ssr_wangzun'),'请选择移走牌的角色和获得牌的角色？',2,true,function(card,player,target){          
                    if(ui.selected.targets.length==0){
            return target.countCards('h')>=1;
        }else {
                    return true;
            }
        },function(target){
            if(ui.selected.targets.length==0){
            return -get.attitude(player,target);
        }else {
                    return get.attitude(player,target);
            }
        }).set('targetprompt',["被移走","获得牌"]);
        'step 1'
        var target=result.targets[0];
        var target2=result.targets[1];
        event.target=result.targets[0];
        event.target2=result.targets[1];
        if(target.countGainableCards(target2,'h')){
        event.videoId=lib.status.videoId++;
        var cards=target.getCards('h');
        if(player.isOnline2()){
            player.send(function(cards,id){
                ui.create.dialog('妄尊',cards).videoId=id;
            },cards,event.videoId);
        }
        event.dialog=ui.create.dialog('妄尊',cards);
        event.dialog.videoId=event.videoId;
        if(!event.isMine()){
            event.dialog.style.display='none';
        }
        player.chooseButton().set('filterButton',function(button){
            return true;
        }).set('dialog',event.videoId);
        }
        'step 2'
        event.card=result.links[0];
        var card=event.card;
        event.dialog.close();
        var target=event.target
        var target2=event.target2;
        target2.gain(card,target);
        target.$giveAuto(card,target2);
                "step 3"
                trigger.player.addTempSkill('ssr_wangzun_sha',{player:'phaseEnd'});
    },
                ai:{
                    expose:0.2,
                    result:{
                        target:function(player,target){
                var ok=false;
                var hs=player.getCards('h');
                if(hs.length<=1) return 0;
                for(i=0;i<hs.length;i++){
                    if(get.value(hs[i])<=5){
                        ok=true;
                        break;
                    }
                }
                if(!ok) return 0;
                if(ui.selected.targets.length==1){
                    if(target.hasSkillTag('nogain')) return 0;
                    return 2;
                }
                if(target.countCards('he')==0) return 0;
                if(player.hasFriend()) return -1;
                return 0;
            },
                    },
                },
            },
            "ssr_tongji":{
                audio:"tongji",
                trigger:{
                    target:"useCardToTarget",
                },
                direct:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        return game.hasPlayer(function(current){
            return current!=event.player&&
                current!=player&&lib.filter.targetEnabled(event.card,event.player,current);
        });
    },
                content:function(){
        "step 0"
        var him=trigger.player;
        var use=trigger.card;
        player.chooseTarget(get.prompt('ssr_tongji'),'是否为此【杀】额外指定一个目标？',1,function(card,player,target){
            var trigger=_status.event;
                if(target!=him){
                    if(lib.filter.targetEnabled(use,him,target)) return player.inRange(target);
                }
                return false;
        },function(target){
            if(_status.event.player.countCards('h','shan')){
                    return -get.attitude(_status.event.player,target);
                }
                if(get.attitude(_status.event.player,target)<5){
                    return 6-get.attitude(_status.event.player,target);
                }
                if(_status.event.player.hp==1&&player.countCards('h','shan')==0){
                    return 10-get.attitude(_status.event.player,target);
                }
                if(_status.event.player.hp==2&&player.countCards('h','shan')==0){
                    return 8-get.attitude(_status.event.player,target);
                }
                return -1;
        });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill(event.name,target);
            var evt=trigger.getParent();
            evt.targets.push(target);
        }
    },
            },
            "ssr_wushen":{
                group:["ssr_wushen_dam","ssr_wushen_kill"],
                subSkill:{
                    dam:{
                        audio:"wuhun",
                        trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        filter:function(event,player){
        return event.card&&event.card.name=='sha'&&get.color(event.card)=='red';
    },
                        content:function(){
        trigger.num++;
    },
                        sub:true,
                    },
                    kill:{
    shaRelated:true,
    trigger:{
        player:"useCardToPlayered",
    },
    priority:3,
    forced:true,
    logTarget:"target",
    filter:function(event,player){
        return event.card.name=='sha'&&get.color(event.card)=='red'&&event.target.hp==1;
    },
    preHidden:true,
    content:function(){
        "step 0"
            trigger.getParent().directHit.add(trigger.target);
    },
    ai:{
        "directHit_ai":true,
        skillTagFilter:function(player,tag,arg){
            if(get.attitude(player,arg.target)>0||arg.target.hp!=1||arg.card.name!='sha'||!ui.cardPile.firstChild||get.color(arg.card)!='red') return false;
        },
    },
                    },
                },
                audio:"wushen",
                enable:["chooseToRespond","chooseToUse"],
                filterCard:function(card,player){
        if(get.zhu(player,'shouyue')) return true;
        return get.color(card)=='red';
    },
                position:"hes",
                viewAs:{
                    name:"sha",
                },
                viewAsFilter:function(player){
        if(get.zhu(player,'shouyue')){
            if(!player.countCards('hes')) return false;
        }
        else{
            if(!player.countCards('hes',{color:'red'})) return false;
        }
    },
                prompt:"武神：是否将一张红色牌当【杀】使用或打出？",
                check:function(card){return 4-get.value(card)},
                ai:{
                    skillTagFilter:function(player){
            if(get.zhu(player,'shouyue')){
                if(!player.countCards('hes')) return false;
            }
            else{
                if(!player.countCards('hes',{color:'red'})) return false;
            }
        },
                    respondSha:true,
                    yingbian:function(card,player,targets,viewer){
            if(get.attitude(viewer,player)<=0) return 0;
            var base=0,hit=false;
            if(get.cardtag(card,'yingbian_hit')){
                hit=true;
                if(targets.filter(function(target){
                    return target.hasShan()&&get.attitude(viewer,target)<0&&get.damageEffect(target,player,viewer,get.nature(card))>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_all')){
                if(game.hasPlayer(function(current){
                    return !targets.contains(current)&&lib.filter.targetEnabled2(card,player,current)&&get.effect(current,card,player,player)>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_damage')){
                if(targets.filter(function(target){
                    return get.attitude(player,target)<0&&(hit||!target.mayHaveShan()||player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                    },true))&&!target.hasSkillTag('filterDamage',null,{
                        player:player,
                        card:card,
                        jiu:true,
                    })
                })) base+=5;
            }
            return base;
        },
                    canLink:function(player,target,card){
            if(!target.isLinked()&&!player.hasSkill('wutiesuolian_skill')) return false;
            if(target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                target:target,
                card:card,
            },true)) return false;
            if(player.hasSkill('jueqing')||target.hasSkill('gangzhi')||target.hasSkill('gangzhi')) return false;
            return true;
        },
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    order:function(item,player){
            if(player.hasSkillTag('presha',true,null,true)) return 10;
            if(lib.linked.contains(get.nature(item))){
                if(game.hasPlayer(function(current){
                    return current!=player&&current.isLinked()&&player.canUse(item,current,null,true)&&get.effect(current,item,player,player)>0&&lib.card.sha.ai.canLink(player,current,item);
                })&&game.countPlayer(function(current){
                    return current.isLinked()&&get.damageEffect(current,player,player,get.nature(item))>0;
                })>1) return 3.1;
                return 3;
            }
            return 3.05;
        },
                    result:{
                        target:function(player,target,card,isLink){
                var eff=function(){
                    if(!isLink&&player.hasSkill('jiu')){
                        if(!target.hasSkillTag('filterDamage',null,{
                            player:player,
                            card:card,
                            jiu:true,
                        })){
                            if(get.attitude(player,target)>0){
                                return -7;
                            }
                            else{
                                return -4;
                            }
                        }
                        return -0.5;
                    }
                    return -1.5;
                }();
                if(!isLink&&target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                },true)) return eff/1.2;
                return eff;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function(card){
                if(card.nature=='poison') return;
                if(get.color(card)=='red') return 2;
                return 1;
            },
                        natureDamage:function(card){
                if(card.nature&&get.color(card)=='red') return 2;
            },
                        fireDamage:function(card,nature){
                if(card.nature=='fire'&&get.color(card)=='red') return 2;
            },
                        thunderDamage:function(card,nature){
                if(card.nature=='thunder'&&get.color(card)=='red') return 2;
            },
                        poisonDamage:function(card,nature){
                if(card.nature=='poison'&&get.color(card)=='red') return 2;
            },
                    },
                },
            },
            "ssr_baiyi":{
                audio:"botu",
                trigger:{
                    global:"useCard",
                },
                priority:5,
                filter:function(event,player){
        if(get.type(event.card)!='trick') return false;
        //if(get.info(event.card).multitarget) return false;
        if(event.targets.length<2) return false;
        return true;
    },
                direct:true,
                content:function(){
        "step 0"
        player.chooseTarget(get.prompt('ssr_baiyi'),
            1,function(card,player,target){
            var evt=_status.event.getTrigger();
            return evt.targets.contains(target)&&!evt.excluded.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            if(game.phaseNumber>game.players.length*2&&trigger.targets.length>=game.players.length-1){
                return -get.effect(target,trigger.card,trigger.player,_status.event.player);
            }
            return -1;
        });
        "step 1"
        if(result.bool){
            player.logSkill('ssr_baiyi',result.targets);
            trigger.excluded.addArray(result.targets);
            game.delay();
        }
    },
            },
            "ssr_lianzhan":{
                        skillAnimation:true,
                        animationColor:"red",
                        audio:"wuhun22",
    trigger:{
        player:"phaseAfter",
    },
    frequent:true,
    filter:function(event,player){
        return player.getStat('kill')>0;
    },
    content:function(){
        'step 0'
        player.insertPhase();
    },
            },
            "ssr_gongxin":{
                subSkill:{
                    break:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
        return event.player==player.storage.ssr_gongxin_break;
    },
                        forced:true,
                        silent:true,
                        intro:{
                    name:"魂飞魄散",
                    content:"你不能使用或打出红色的牌。",
                },
                mark:true,
                marktext:"破魂",
                        content:function(){
        player.removeSkill('ssr_gongxin_break');
    },
                        mod:{
                            cardSavable:function(card,player){
                        if(get.color(card)=='red') return false;
                },
                            cardEnabled:function(card,player){
                        if(get.color(card)=='red') return false;
                },
                            cardResponsabled:function(card,player){
                        if(get.color(card)=='red') return false;
                },
                        },
                        sub:true,
                    },
                },
                audio:"gongxin",
                enable:"phaseUse",
                filterCard:function (card){
        return get.suit(card)=='heart';
    },
                selectCard:function (){
        return 1;
    },
                        filter:function (event,player){
        return player.countCards('he',{suit:'heart'})>0;
    },
                filterTarget:function (card,player,target){
        if(player==target) return false;
        if(target.hasSkill('ssr_gongxin_break')) return false;
        return true;
    },
                content:function (){
        "step 0"
        target.storage.ssr_gongxin_break=player;
        "step 1"
        target.addSkill('ssr_gongxin_break');
    },
                check:function (card){
        return 10-get.value(card);
    },
                position:"he",
                ai:{
                    order:9,
                    result:{
                        target:function (player,target){
                if(!ui.selected.cards.length){
                    if(player.hp<2) return 0;
                }
                return -target.countCards('h',{color:'red'});
            },
                },
                threaten:1.2,
                },
            },
            "ssr_keji":{
                trigger:{
                    player:"phaseDiscardBefore",
                },
                frequent:true,
                filter:function(event,player){
        return player.countCards('h',{type:'delay'})||player.countCards('h',{type:'trick'});
    },
                content:function(){
    },
                audio:"keji",
                mod:{
                    ignoredHandcard:function(card,player){
                        return get.name(card)=='sha';
            /*if(get.type(card)=='trick'||get.type(card)=='delay'){
                return true;
            }*/
        },
                    cardDiscardable:function(card,player,name){
                        if(name=='phaseDiscard'&&(get.name(card)=='sha')){
                return false;
            }
            /*if(name=='phaseDiscard'&&(get.type(card)=='trick'||get.type(card)=='delay')){
                return false;
            }*/
        },
                },
            },
            "ssr_shelie":{
                audio:"shelie",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                frequent:true,
                filter:function(event,player){
        return !event.numFixed;
    },
                content:function(){
        "step 0"
        trigger.changeToZero();
        event.cards=get.cards(4);
        game.cardsGotoOrdering(event.cards);
        event.videoId=lib.status.videoId++;
        game.broadcastAll(function(player,id,cards){
            var str;
            if(player==game.me&&!_status.auto){
                str='涉猎：选择获得其中的两张牌';
            }
            else{
                str='涉猎';
            }
            var dialog=ui.create.dialog(str,cards);
            dialog.videoId=id;
        },player,event.videoId,event.cards);
        event.time=get.utc();
        game.addVideo('showCards',player,['涉猎',get.cardsInfo(event.cards)]);
        game.addVideo('delay',null,2);
        "step 1"
        var next=player.chooseButton(2,true);
        next.set('dialog',event.videoId);
        next.set('filterButton',function(button){
            return true;
            for(i=0;i<ui.selected.buttons.length;i++){
                if(get.suit(ui.selected.buttons[i].link)==get.suit(button.link)) return false;
            }
        });
        next.set('ai',function(button){
            return get.value(button.link,_status.event.player);
        });
        "step 2"
        if(result.bool&&result.links){
            event.cards2=result.links;
        }
        else{
            event.finish();
        }
        var time=1000-(get.utc()-event.time);
        if(time>0){
            game.delay(0,time);
        }
        "step 3"
        game.broadcastAll('closeDialog',event.videoId);
        var cards2=event.cards2;
        player.gain(cards2,'log','gain2');
    },
                ai:{
                    threaten:1.2,
                },
            },
            "ssr_yicong":{
                subSkill:{
                    horse:{
                        locked:true,
                        /*mod:{
                            targetEnabled:function(card,player,target,now){
                                if(target.countCards('e',{subtype:'equip3'})+target.countCards('e',{subtype:'equip4'})>0) {
                                    if(get.type(card)=='delay') return false;
                                }
                            },
                        },*/
                        shaRelated:true,
                        trigger:{
                            player:"shaMiss",
                        },
                        filter:function(event,player){
                            if(player.countCards('e',{subtype:'equip3'})+player.countCards('e',{subtype:'equip4'})>0) {
                                if(event.target.countCards('e')>0&&get.color(event.card)=='black'){
                                    return event.target.countDiscardableCards(player,'e');
                                }
                            }
                        },
                        check:function(event,player){
                            return get.attitude(player,event.target)<0;
                        },
                        prompt:"义从：当你使用黑色的【杀】被【闪】抵消后，你可以弃置目标角色一张装备牌",
                        logTarget:"target",
                        content:function(){
                            player.discardPlayerCard('e',trigger.target,true);
                        },
                    },
                },
                //global:['ssr_yicong_horse'],
                audio:"reyicong",
                trigger:{
                    global:"damageBegin",
                },
                priority:-40,
                direct:true,
                filter:function(event,player){
                    if(!event.card) return false;
                    if(get.type(event.card)!='trick'&&get.type(event.card)!='delay') return false;
                    //if(event.player!=player) return false;
                    return event.player.countCards('e',function(card){
                        return (get.subtype(card)=='equip3'||get.subtype(card)=='equip4');
                    })>0&&event.num>0;
                  },
                content:function(){
        "step 0"
        var num=trigger.num;
        /*
        player.choosePlayerCard(trigger.player,pos,get.prompt('ssr_yicong'),get.translation(trigger.player.name)+'即将受到'+get.cnNumber(num)+'点伤害，是否弃置其任意张坐骑牌并减少等量的伤害？',[1,num],function(card,player){
                if(get.subtype(card)!='equip3'&&get.subtype(card)!='equip4') return false;
                return lib.filter.cardDiscardable(card,trigger.player);
        },function(card){
                return 10-get.value(card);
        });*/
        var cards=trigger.player.getCards('e',{subtype:'equip4'}).concat(trigger.player.getCards('e',{subtype:'equip3'}));
        var list=[cards,'vcard'];
        var dialog=ui.create.dialog('白马义从','义从：'+get.translation(trigger.player.name)+'即将受到来自【'+get.translation(trigger.card.name)+'】的'+get.cnNumber(num)+'点伤害，是否弃置其一张坐骑牌并减少一点伤害？',list);
        player.chooseButton(dialog,1).set('filterButton',function(button){
            //if(get.subtype(button.link[2])=='equip3'||get.subtype(button.link[2])=='equip4') return true;
            return lib.filter.cardDiscardable(button.link,player);
        }).ai=function(button){
            return 10-get.value(button.link);
            /*
            if(get.attitude(player,trigger.player)>1) {
                return 10-get.value(button.link);
            }else {
                return -1;
            }*/
        };
        "step 1"
        if(result.bool){
            player.logSkill(event.name,trigger.player);
            trigger.num-=result.links.length;
            trigger.player.discard(result.links);
        }
    },
                ai:{
                    "maixie_defend":true,
                },
                mod:{
                    canBeDiscarded:function(card){
            if(get.position(card)=='e'&&['equip3','equip4'].contains(get.subtype(card))) return false;
        },
                },
            },
            "ssr_yucong":{
                subSkill:{
                    "equip3":{
                        sub:true,
                    },
                    "equip4":{
                        sub:true,
                    },
                },
                audio:"qiaomeng",
                enable:"phaseUse",
                filterCard:true,
                usable:2,
                position:"h",
                check:function(card){
        return 5-get.value(card);
    },
                filterTarget:function(card,player,target){
        return true;
    },
                filter:function(event,player){
        return player.countCards('h')>0;
    },
                content:function(){
        'step 0'
        var cho='请选择为'+get.translation(target.name)+'装备坐骑牌的类型';
        var chooses=['equip4','equip3'];
        if(target.countCards('e',{subtype:'equip4'})+target.countCards('e',{subtype:'equip3'})>0) {
            chooses.push('弃置坐骑');
            var cho=cho+'或弃置其坐骑';
        }
        if(target.countCards('e',{subtype:'equip4'})) {
            var cho=cho+'<br>√该角色已装备攻击马';
        }else {
            var cho=cho+'<br>×该角色未装备攻击马';
        }
        if(target.countCards('e',{subtype:'equip3'})) {
            var cho=cho+'<br>√该角色已装备防御马';
        }else {
            var cho=cho+'<br>×该角色未装备防御马';
        }
        player.chooseControl(chooses,function(){
        if(get.attitude(player,target)>0) {
            if(!target.countCards('e',{subtype:'equip3'})&&!player.hasSkill('ssr_yucong_equip3')) return 'equip3';
            if(!target.countCards('e',{subtype:'equip4'})&&!player.hasSkill('ssr_yucong_equip4')) return 'equip4';
            return ['equip3','equip4'].randomGet();
        }else {
            if(chooses.contains('弃置坐骑')) {
                return '弃置坐骑';
            }else {
            if(target.countCards('e',{subtype:'equip3'})) return 'equip3';
            if(target.countCards('e',{subtype:'equip4'})) return 'equip4';
            return ['equip3','equip4'].randomGet();
            }
        }
        }).set('prompt',cho);
        'step 1'
        /*event.card=get.cardPile(function(card){
            return get.subtype(card)==result.control;
        },'cardPile');*/
        if(result.control=='弃置坐骑') {
            var cards=target.getCards('e',{subtype:'equip4'}).concat(target.getCards('e',{subtype:'equip3'}));
        var list=[cards,'vcard'];
        var dialog=ui.create.dialog('请选择弃置'+get.translation(target.name)+'的坐骑牌',list);
        player.chooseButton(dialog,1,true).set('filterButton',function(button){
            //if(get.subtype(button.link[2])=='equip3'||get.subtype(button.link[2])=='equip4') return true;
            return lib.filter.cardDiscardable(button.link,player);
        }).ai=function(button){
            return get.value(button.link);
        };
        event.goto(5);
        }
        'step 2'
        event.card=game.createCard(get.inpile(result.control).randomGet());
        if(!event.card){
            target.draw();
            player.addSkill('ssr_yucong_'+result.control);
            event.goto(3);
        }
        player.showCards([event.card]);
        "step 3"
        player.line(target,'green');
        target.equip(event.card,'gain2');
        target.$draw(event.card);
        'step 4'
        event.finish();
        'step 5'
        if(result.bool){
            player.line(target,'red');
            target.discard(result.links);
        }
    },
                ai:{
                    order:8,
                    result:{
                        target:function(player,target){
                if(get.attitude(player,target)>0) {
                var val=-1;
                if(!target.countCards('e',{subtype:'equip3'})&&!player.hasSkill('ssr_yucong_equip3')) val+=3;
                if(!target.countCards('e',{subtype:'equip4'})&&!player.hasSkill('ssr_yucong_equip4')) val+=2;
                if(val>0&&target.hasSkill('ssr_yicong')) val+=4;
                }else {
                var val=1;
                if(target.countCards('e',{subtype:'equip3'})) val-=3;
                if(target.countCards('e',{subtype:'equip4'})) val-=2;
                if(target.hasSkill('ssr_yicong')) val-=4;
                }
                return val;
            },
                    },
                    threaten:0.2,
                },
            },
            "ssr_tongque":{
                intro:{
                    name:"琉璃",
                    content:"mark",
                },
                marktext:"璃",
                audio:"tianxiang",
                trigger:{
                    player:"damageBegin4",
                },
                init:function(player){
                    if(!player.storage.ssr_tongque&&player.countMark('ssr_tongque')<=0) {
                        player.addMark('ssr_tongque',3);
                        player.markSkill('ssr_tongque');
                    }
                    if(player.countMark('ssr_tongque')>0) player.markSkill('ssr_tongque');
                },
                frequent:true,
                filter:function(event,player){
                    return event.num>0;
                },
                content:function(){
                    "step 0"
                    /*player.chooseCard(get.prompt('ssr_tongque'),'是否弃置一张红色的牌并防止此伤害？','he',1,function(card,player){
                        return get.color(card)=='red';
                    },function(card,player){
                        return 13-get.value(card);
                    });*/
                    player.judge(function(card){
                        if(get.color(card)=='red') return 2;
                        return 0;
                    });
                    "step 1"
                    if(result.color=='red'){
                        trigger.cancel();
                    }else {
                        player.addMark('ssr_tongque');
                    }
                    //player.logSkill(event.name,target);
                },
                ai:{
                    "maixie_defend":true,
                    effect:{
                        target:function(card,player,target){
                            if(player.hasSkillTag('jueqing',false,target)) return;
                            if(get.tag(card,'damage')&&target.countCards('h')>1) return 0.7;
                        },
                    },
                    threaten:function(player,target){
                        if(target.countCards('h')==0) return 2;
                    },
                },
            },
            "ssr_guose":{
                //group:['ssr_guose_lebu'],
                subSkill:{
                    lebu:{
                        audio:"guose",
                        trigger:{
                            global:["judgeAfter"],
                        },
                        forced:true,
                        filter:function(event,player){
                            return event.player!=player&&event.card&&event.cardname=='lebu';
                        },
                        content:function(){
                            player.draw();
                        },
                        sub:true,
                    },
                },
                audio:"guose",
                filter:function(event,player){
                    return player.countMark('ssr_tongque')>0;
                },
                filterTarget:function(card,player,target){
                    return player.canAddJudge('lebu')||target.hasJudge('lebu');
                },
                enable:"phaseUse",
                prompt:"弃置一枚“璃”标记并摸一张牌，然后将一张【乐不思蜀】从一名角色的判定区置入或弃置",
                content:function(){
                    'step 0'
                    //event.card=get.cards(1);
                    event.card=game.createCard('lebu');
                    'step 1'
                    player.removeMark('ssr_tongque');
                    player.draw();
                    if(target.hasJudge('lebu')) {
                        target.discard(target.getJudge('lebu'));
                    }else {
                        target.addJudge(event.card);
                    }
                    //player.useCard({name:'lebu'},target,event.card).audio=false;
                    player.line(target,'fire');
                },
                check:function(card){return 6-get.value(card)},
                ai:{
                    threaten:1.5,
                    result:{
                        target:function(player,target){
                            if(target.hasJudge('lebu')) return -get.effect(target,{name:'lebu'},player,target);
                            return get.effect(target,{name:'lebu'},player,target);
                        },
                    },
                    order:9,
                },
            },
            "ssr_tianxiang":{
                subSkill:{
                    off:{
                        sub:true,
                    },
                },
                filter:function(event,player){
        return player.countMark('ssr_tongque')>0; 
    },
                audio:"liuli",
                enable:"phaseUse",
                filterTarget:function(card,player,target){
        if(target==player) return false;
        return !target.hasSkill('ssr_tianxiang_off');
    },
                content:function(){
        'step 0'
        player.removeMark('ssr_tongque');
        target.loseHp();
        'step 1'
        player.draw();
        target.draw();
        target.addTempSkill('ssr_tianxiang_off');
    },
                ai:{
                    threaten:1.5,
                    result:{
                        player:1,
                        target:function(player,target){
                            //var att=get.attitude(player,target);
                            if(target.hp==1) return -2;
                            return -1;
                        },
                    },
                    order:10,
                    expose:0.2,
                },
            },
            "ssr_aozhan":{
                subSkill:{
                    temp:{},
                    hit:{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        silent:true,
                        priority:50,
                        filter:function (event,player){
        return event.card.name=='sha';
    },
                        content:function (){
        player.removeSkill('ssr_aozhan_hit');
    },
                        sub:true,
                        popup:false,
                    },
                },
                audio:"luoyi",
                trigger:{
                    target:"shaBegin",
                },
                check:function(event,player){
        var att=get.attitude(player,event.source);
        var num=player.countCards('h',{name:'sha'});
        if(att<=0&&num>0) return true;
        return false;
    },
                filter:function (event,player){
        return !player.hasSkill('ssr_aozhan_temp');
    },
                frequent:true,
                logTarget:"target",
                content:function(){
        'step 0'
        player.addTempSkill('ssr_aozhan_temp');
        'step 1'
        player.draw();
        trigger.cancel();
        player.addTempSkill('ssr_aozhan_hit');
        'step 2'
        player.chooseToDiscard(1,'h',true);
        'step 3'
        var triggers=_status.event.getTrigger();
        if (player.countCards('h',{name:'sha'})) {
        player.chooseToUse(get.prompt('ssr_aozhan'),'是否对'+get.translation(trigger.player)+'使用一张【杀】？',{name:'sha'},trigger.player);
        }
        'step 4'
        if(player.hasSkill('ssr_aozhan_hit')){
            player.removeSkill('ssr_aozhan_hit');
            trigger.player.useCard(trigger.card,player,false,'noai').animate=false;
        }
        'step 5'
        player.removeSkill('ssr_aozhan_temp');
    },
                ai:{
                    skillTagFilter:function(player,tag,arg){
            if(arg&&arg.name=='sha') return true;
            return false;
        },
                },
            },
            "ssr_luoyi":{
                init:function (player){
        player.disableEquip('equip2');
    },
                onremove:function (player,skill){
        player.enableEquip('equip2');
    },
                shaRelated:true,
                audio:"luoyi",
                forced:true,
                locked:true,
                group:["ssr_luoyi_sha","ssr_luoyi_juedou"],
                subSkill:{
                    sha:{
                        audio:"luoyi",
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        forced:true,
                        filter:function(event,player){
                return event.card.name=='sha'&&!event.getParent().directHit.contains(event.target);
            },
                        logTarget:"target",
                        content:function(){
                var id=trigger.target.playerid;
                var map=trigger.getParent().customArgs;
                if(!map[id]) map[id]={};
                if(typeof map[id].shanRequired=='number'){
                    map[id].shanRequired++;
                }
                else{
                    map[id].shanRequired=2;
                }
            },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
                    if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
                },
                        },
                        sub:true,
                    },
                    juedou:{
                        audio:"luoyi",
                        trigger:{
                            player:"useCardToPlayered",
                            target:"useCardToTargeted",
                        },
                        forced:true,
                        logTarget:function(trigger,player){
                return player==trigger.player?trigger.target:trigger.player
            },
                        filter:function(event,player){
                return event.card.name=='juedou';
            },
                        content:function(){
                var id=(player==trigger.player?trigger.target:trigger.player)['playerid'];
                var idt=trigger.target.playerid;
                var map=trigger.getParent().customArgs;
                if(!map[idt]) map[idt]={};
                if(!map[idt].shaReq) map[idt].shaReq={};
                if(!map[idt].shaReq[id]) map[idt].shaReq[id]=1;
                map[idt].shaReq[id]++;
            },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
                    if(arg.card.name!='juedou'||Math.floor(arg.target.countCards('h','sha')/2)>player.countCards('h','sha')) return false;
                },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_paoxiao":{
                group:'ssr_paoxiao_res',
                subSkill:{
                    ing:{
                        locked:true,
                        sub:true,
                    },
                    res:{
                        enable:["chooseToRespond"],
                        filterCard:function(card,player){
                            return true;
                        },
                        position:"hs",
                        viewAs:{
                            name:"sha",
                        },
                        viewAsFilter:function(player){
                            if(!player.countCards('hs')>0) return false;
                        },
                        filter:function(event,player){
                            return player.countCards('hs')>0;
                        },
                        prompt:"咆哮：将一张手牌当做【杀】打出",
                        check:function(card){return 15-get.value(card)},
                        ai:{
                            skillTagFilter:function(player){
                                if(!player.countCards('hs')) return false;
                            },
                            respondSha:true,
                            basic:{
                                useful:[5,3,1],
                                value:[5,3,1],
                            },
                            order:function(item,player){
                                return 15;
                            },
                            result:{
                                target:function(player,target,card,isLink){
                                    var eff=function(){
                                        if(!isLink&&player.hasSkill('jiu')){
                                            if(!target.hasSkillTag('filterDamage',null,{
                                                player:player,
                                                card:card,
                                                jiu:true,
                                            })){
                                                if(get.attitude(player,target)>0){
                                                    return -7;
                                                }
                                                else{
                                                    return -4;
                                                }
                                            }
                                            return -0.5;
                                        }
                                        return -1.5;
                                    }();
                                    if(!isLink&&target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                                        target:target,
                                        card:card,
                                    },true)) return eff/1.2;
                                    return eff;
                                },
                            },
                        },
                    },
                },
                frequent:true,
                audio:"paoxiao",
                shaRelated:true,
                trigger:{
                    player:"shaEnd",
                },
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                filter:function(event,player){
        return event.card.name=='sha'&&!player.hasSkill('ssr_paoxiao_ing');
    },
                logTarget:"target",
                content:function(){
        "step 0"
        player.addTempSkill('ssr_paoxiao_ing');
        'step 1'
        player.useCard(trigger.card,trigger.target,false);
        'step 2'
        player.removeSkill('ssr_paoxiao_ing');
    },
            },
            "ssr_zhenhun":{
                subSkill:{
                    sha:{
                        mod:{
                            cardEnabled:function(card){
                    if(get.name(card)=='sha') return false;
                },
                            cardRespondable:function(card){
                    if(get.name(card)=='sha') return false;
                },
                            cardSavable:function(card){
                    if(get.name(card)=='sha') return false;
                },
                        },
                        sub:true,
                    },
                },
                audio:"retishen",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                content:function(){
        game.countPlayer(function(current){
            if(current!=player){
                player.line(current,'red');
                if(!current.hasSkill('fengyin')) current.addTempSkill('fengyin');
                current.addTempSkill('ssr_zhenhun_sha');
            }
        });
    },
            },
            "ssr_luoshen":{
                audio:"luoshen",
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
        return event.num>0;
    },
                check:function(event,player){
        var num=player.countCards('h')-4;
        var num=num+player.countCards('h',{name:'tao'})*2;
        var num=num+player.countCards('h',{name:'jiu'})*1.2;
        var num=num+Math.min(player.countCards('h',{name:'shan'}),2)*0.8;
        var num=num-player.countCards('h',{subtype:'equip1'})*1.2;
        var num=num-player.countCards('h',{subtype:'equip3'})*0.5;
        var num=num-player.countCards('h',{subtype:'equip4'})*1.3;
        var num=num-player.countCards('h',{type:'delay'})*0.8;
        var num=num-player.countCards('h',{type:'trick'})*0.6;
        var num=num+player.countCards('h',{name:'wuxie'})*2;
        var num=num+player.countCards('h',{name:'du'})*2;
        return num<=0;
    },
                content:function(){
        'step 0'
        player.discard(player.getCards('h'));
        event.cards=[];
        'step 1'
        var suits=['spade','club','heart','diamond'];
        for (var i=0;i<suits.length;i++) {
            var suitcard=get.cardPile(function(card){
                if(get.type(card)=='equip') return false;
                return get.suit(card)==suits[i];
            },'cardPile');
            if(suitcard){
                event.cards.push(suitcard);
            }
        }
        player.showCards([event.cards]);
        "step 2"
        player.line(player,'water');
        player.gain(event.cards,'gain2');
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.55];
            },
                    },
                },
            },
            "ssr_qingcheng":{
                audio:"qingguo",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){
        return target.sex=='male'&&target!=player&&target.countGainableCards(player,get.is.single()?'he':'hej')>0;
    },
                selectTarget:-1,
                content:function(){
        'step 0'
        var position=get.is.single()?'he':'hej';
        if(target.countGainableCards(player,position)){
            player.gainPlayerCard(position,target,true);
            event.gain=true;
        }else {
            event.gain=false;
        }
        'step 1'
        if(event.gain) {
        player.chooseCard('交给'+get.translation(target.name)+'一张牌','he',true,1,function(card,player){
            if(get.attitude(player,target)>0) {
                    return get.value(card)-7;
                }else {
                    return 7-get.value(card);
                }
        });
            }
        'step 2'
            if(result.bool) {
            target.gain(result.cards,'gain2',player);
            player.logSkill(event.name,target);
                }
    },
                ai:{
                    order:9,
                    result:{
                        player:function(player,target){
                return 2;
            },
                        target:function(player,target){
                return get.attitude(player,target);
            },
                    },
                    threaten:0.4,
                },
            },
            "ssr_xiaoji":{
                audio:"xiaoji",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
                },
                frequent:true,
                filter:function(event,player){
        var evt=event.getl(player);
        return evt&&evt.player==player&&evt.es&&evt.es.length>0;
    },
                content:function(){
        "step 0"
        event.count=trigger.getl(player).es.length+1;
        "step 1"
        event.count--;
        "step 2"
        if(event.count>0){
        player.chooseTarget(get.prompt2('ssr_xiaoji'),function(card,player,target){
            return true;
        }).set('ai',function(target){
                        if (game.countPlayer(function(current){
                            return ((current.hp>3||(current.hasSkill('ssr_lianyin_recover')&&current.hp>2))&&get.attitude(player,current)>0);
                        })>0) {
                        if(target.hp>3||(target.hasSkill('ssr_lianyin_recover')&&target.hp>2)) {
                            return get.attitude(player,target);
                        }else {
                            return -get.attitude(player,target);
                        }
                    }else {
                        return -get.attitude(player,target);
                    }
        }).set('prompt','是否将此装备牌交给一名角色，令该角色摸一张牌并对该角色造成一点伤害？');
        }
        "step 3"
        if(result.bool&&event.count>0){
            var num=trigger.getl(player).es.length-event.count;
            result.targets[0].draw();
            result.targets[0].damage();
            player.$giveAuto(trigger.getl(player).es[num],result.targets[0]);
            result.targets[0].gain(trigger.getl(player).es[num],player);
            player.logSkill('ssr_xiaoji');
            event.goto(1);
        }
    },
                ai:{
                    noe:true,
                    reverseEquip:true,
                    effect:{
                        target:function(card,player,target,current){
                if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
            },
                    },
                },
            },
            "ssr_lianyin":{
                subSkill:{
                    recover:{
                        audio:"jieyin",
                        trigger:{
                            global:["damage"],
                        },
                        forced:true,
                        filter:function(event,player){
        if(!player.storage.ssr_lianyin_recover) return false;
        return event.player==player||event.player==player.storage.ssr_lianyin_recover;
    },
                        content:function(){
                            if(1==1) {
                        player.storage.ssr_lianyin_recover.draw();
                        player.draw();
                            }else {
        if(trigger.player==player) {
            var him=player.storage.ssr_lianyin_recover;
        }else {
            var him=player;
        }
        him.recover();
            }
        },
                        sub:true,
                    },
                },
                usable:1,
                enable:"phaseUse",
                audio:"jieyin",
                filterTarget:function(card,player,target){
        return target.sex=='male'&&target!=player;
    },
                filter:function(event,player){
        return true;
    },
                content:function(){
        "step 0"
        event.count=1;
        if(1==1) {
            player.addTempSkill('ssr_lianyin_recover',{player:'phaseBegin'});
            player.storage.ssr_lianyin_recover=target;
            }else {
        if(player.hp!=target.hp) {
            if(player.hp>target.hp) {
                target.recover();
            }else {
                player.recover();
            }
        }else {
            player.chooseControl(get.translation(player.name)+'(我方)',get.translation(target.name)+'(对方)',function(){
            if(player.hp<player.maxHp) return get.translation(player.name)+'(我方)';
            return get.translation(target.name)+'(对方)';
        }).set('prompt','请选择一方回复体力');
        }
                }
        "step 1"
        if(1==0) {
        if(result.bool) {
            if(result.control==get.translation(player.name)+'(我方)') {
                player.recover();
            }else {
                target.recover();
            }
        }
            }
        event.him=target;
        event.count--;
        event.cards=get.cards(2);
        player.chooseControl('ok').set('dialog',['联姻',event.cards]);
        "step 2"
        if(event.cards.length>1){
            target.chooseCardButton('联姻：选择一张牌交给'+get.translation(player.name),true,event.cards,1).set('ai',function(button){
                if(get.attitude(target,player)>0) {
                    var num=0;
                    if(get.type(button.link)=='equip') var num=3;
                return get.value(button.link,player)+num;
                    }else {
                    var num=0;
                    if(get.type(button.link)=='equip') var num=3;
                return 10-get.value(button.link,player)-num;
                    }
            });
        }
        else if(event.cards.length==1){
            event._result={links:event.cards.slice(0),bool:true};
        }
        else{
            event.goto(5);
        }
        "step 3"
        if(result.bool){
            for(i=0;i<result.links.length;i++){
                event.cards.remove(result.links[i]);
            }
            event.togive=result.links.slice(0);
        }
        "step 4"
            if(event.him==target) {
                event.him=player;
            }else {
                event.him=target;
            }
            event.him.gain(event.togive,'draw');
            player.line(event.him,'green');
            game.log(event.him,'获得了'+get.cnNumber(event.togive.length)+'张牌');
            event.goto(2);
        "step 5"
        if(event.count>0) player.chooseBool(get.prompt2(event.name)).set('frequentSkill',event.name);
        else event.finish();
        "step 6"
        if(result.bool){
            player.logSkill(event.name);
            event.goto(1);
        }
    },
                ai:{
                    order:9,
                    result:{
                        target:function(player,target){
                return 4;
            },
                    },
                    tag:{
                        draw:1,
                        multitarget:1,
                    },
                },
            },
            "ssr_langgu":{
                audio:"jilue_wansha",
                locked:true,
                mod:{
                    globalFrom:function(from,to){
            if(to.hasSkill('ssr_langgu_hurt')) return -Infinity;
        },
                },
                subSkill:{
                    hurt:{
                        trigger:{
                            global:["phaseEnd","die"],
                        },
                        filter:function(event,player){
            return event.player.hasSkill('ssr_langgu');
            },
                        content:function(){
            player.removeSkill('ssr_langgu_hurt');
            },
                        forced:true,
                        silent:true,
                        sub:true,
                        popup:false,
                    },
                },
                unique:true,
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function(event){
        return event.num>0; 
    },
                content:function(){
        player.addMark('ssr_jilue',trigger.num);
        if(trigger.source&&trigger.source.isIn()) trigger.source.addSkill('ssr_langgu_hurt');
    },
                ai:{
                    combo:"ssr_jilue",
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "ssr_fankui":{
                usable:3,
                audio:"fankui",
                enable:"phaseUse",
                prompt:"是否弃置一枚“忍戒”标记并获得距离一以内的一名角色一张牌？",
                filter:function(event,player){
                    return player.countMark('ssr_jilue')>0;
                },
                filterTarget:function(card,player,target){
                    return player!=target&&get.distance(player,target)<=1&&target.countGainableCards(player,'he')>0;
                },
                content:function(){
                    "step 0"
                    player.gainPlayerCard(target,'he',true);
                    player.removeMark('ssr_jilue');
                    game.delay();
                },
                ai:{
                    order:7.5,
                    result:{
                        target:function(player,target){
                            if(get.attitude(player,target)<=0) return (target.countCards('he',function(card){
                                return get.value(card,target)>0&&card!=target.getEquip('jinhe');
                            })>0)?-1.5:1.5;
                            return (target.countCards('ej',function(card){
                                if(get.position(card)=='e') return get.value(card,target)<=0;
                                var cardj=card.viewAs?{name:card.viewAs}:card;
                                return get.effect(target,cardj,target,player)<0;
                            })>0)?1.5:-1.5;
                        },
                        player:function(player,target){
                            if(get.attitude(player,target)<0&&!target.countCards('he',function(card){
                                return get.value(card,target)>0&&card!=target.getEquip('jinhe');
                            })){
                                return 0;
                            }
                            if(get.attitude(player,target)>1){
                                return (target.countCards('ej',function(card){
                                    if(get.position(card)=='e') return get.value(card,target)<=0;
                                    var cardj=card.viewAs?{name:card.viewAs}:card;
                                    return get.effect(target,cardj,target,player)<0;
                                })>0)?1.5:-1.5;
                            }
                            return 1;
                        },
                    },
                },
            },
            "ssr_jilue":{
                locked:true,
                group:"ssr_jilue_fix",
                subSkill:{
                    red:{
                        intro:{
                            name:"红色",
                            content:"mark",
                        },
                        marktext:"朱",
                        sub:true,
                    },
                    black:{
                        intro:{
                            name:"黑色",
                            content:"mark",
                        },
                        marktext:"墨",
                        sub:true,
                    },
                    fix:{
                        filter:function(event,player){
        return player.countMark('ssr_jilue')>0; 
    },
                        audio:"jilue_guicai",
                        trigger:{
                            global:"judge",
                        },
                        direct:true,
                        content:function(){
                "step 0"
                var str=get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
                get.translation(trigger.player.judging[0])+'，是否弃置一枚“忍戒”标记并修改判定结果？<br><br><br><br>';
                event.suitshow=[];
                event.suitbasic=[];
                event.suite=['spade','club','heart','diamond'];
                event.suity=['♠','♣','♥','♦'];
                event.suitn=['♤','♧','♡','♢'];
                for(i=0;i<4;i++) {
                    if(event.suite[i]!=get.suit(trigger.player.judging[0])) {
                        var right=event.suity[i];
                        var wrong=event.suite[i];
                    }else {
                        var right=event.suitn[i];
                        var wrong='cancel2';
                        event.suit=event.suite[i];
                    }
                    event.suitshow.push(right);
                    event.suitbasic.push(wrong);
                }
                player.chooseControl(event.suitshow).set('prompt',str).set('ai',function(){
                    //return '取消';
                    var choose='none';
                    var judging=_status.event.judging;
                    var trigger=_status.event.getTrigger();
                    var res1=trigger.judge(judging);
                    var list=lib.suit.slice(0);
                    var attitude=get.attitude(player,trigger.player);
                    if(attitude==0) return 0;
                    var getj=function(suit){
                        return trigger.judge({
                            name:get.name(judging),
                            nature:get.nature(judging),
                            suit:suit,
                            number:get.number(judging),
                        })
                    };
                    list.sort(function(a,b){
                        return (getj(b)-getj(a))*get.sgn(attitude);
                    });
                    if((getj(list[0])-res1)*attitude>0) var choose=list[0];
                    if(choose=='none'||choose==event.suit) {
                    var choose='cancel2';
                        }
                    for(i=0;i<4;i++) {
                        if(event.suitbasic[i]==choose) {
                            return event.suitshow[i];
                        }
                    }
                }).set('judging',trigger.player.judging[0]);
                "step 1"
                event.control='cancel2';
                    for(i=0;i<4;i++) {
                        if(event.suitshow[i]==result.control) {
                            event.control=event.suitbasic[i];
                        }
                    }
                if(event.control!='cancel2'){
                    player.removeMark('ssr_jilue');
                    player.logSkill('ssr_jilue');
                    //player.line(trigger.player);
                    player.popup(event.control+2);
                    game.log(player,'将判定结果改为了','#y'+get.translation(event.control+2));
                    trigger.fixedResult={
                        suit:event.control,
                        color:get.color({suit:event.control}),
                    };
                }
            },
                        ai:{
                            rejudge:true,
                            tag:{
                                rejudge:0.3,
                            },
                        },
                        sub:true,
                    },
                },
                audio:"lianpo",
                marktext:"忍",
                frequent:true,
                priority:50,
                trigger:{
                    player:["useCard","respond"],
                },
                forced:true,
                filter:function(event,player){
        if(player!=_status.currentPhase) return false;
        return event.card&&(get.color(event.card)=='red'||get.color(event.card)=='black'); 
    },
                content:function(){
        var skill='ssr_jilue_'+get.color(trigger.card);
        if(!player.hasSkill(skill)) {
            player.addTempSkill(skill);
            player.removeMark(skill,player.countMark(skill));
            }
        player.addMark(skill,1);
        if(player.countMark('ssr_jilue_red')&&player.countMark('ssr_jilue_black')) {
        player.removeMark('ssr_jilue_red');
        player.removeMark('ssr_jilue_black');
        player.addMark('ssr_jilue',1);
            }
    },
                intro:{
                    name:"忍戒",
                    content:"mark",
                },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "ssr_jiyuan":{
                trigger:{
                    global:"dying",
                },
                audio:"xinfu_jiyuan",
                filter:function (event,player){
        if(event.name=='dying') return true;
    },
                check:function (event,player){
        return get.attitude(player,event.player)>0;
    },
                logTarget:"player",
                content:function (){
    trigger.player.draw();
    player.draw();
    },
            },
            "ssr_jijie":{
                subSkill:{
                    spade:{
                        sub:true,
                    },
                    club:{
                        sub:true,
                    },
                    diamond:{
                        sub:true,
                    },
                    heart:{
                        sub:true,
                    },
                    forbid:{
                        sub:true,
                    },
                },
                usable:2,
                enable:"phaseUse",
                audio:"xinfu_jijie",
                filter:function (event,player){
                    return true;
                    //return !player.hasSkill('ssr_jijie_forbid');
                },
                content:function (){
        'step 0'
        //event.card=ui.cardPile.lastChild;
        event.card=get.bottomCards()[0];
        var content=['牌堆底的一张牌',[event.card]];
        game.log(player,'观看了牌堆底的一张牌');
        player.show(event.card);
        player.chooseControl('ok').set('dialog',content);
        'step 1'
        if(player.hasSkill('ssr_jijie_'+get.suit(event.card))) {
                player.addTempSkill('ssr_jijie_forbid');
                }else {
                player.addTempSkill('ssr_jijie_'+get.suit(event.card));
                }
        player.chooseTarget('选择获得此牌的角色').set('ai',function(target){
                var att=get.attitude(_status.event.player,target);
                if(_status.event.du){
                    if(target.hasSkillTag('nodu')) return 0.5;
                    return -att;
                }
            if(att>0){
                    if(_status.event.player!=target) att+=2;
                    return att+Math.max(0,5-target.countCards('h'));
                }
                return att;
        }).set('du',event.card.name=='du').set('same',event.same);
        'step 2'
        if(result.bool){
            event.target=result.targets[0];
            player.line(event.target,'green');
            player.give(event.card,event.target);
            var card=event.card;
            event.continue=true;
        if(!event.target.hasUseTarget(card)){
            card.fix();
            ui.cardPile.insertBefore(card,ui.cardPile.firstChild);
            game.updateRoundNumber();
            event.finish();
        }
            }
        else ui.cardPile.appendChild(event.card);
        game.updateRoundNumber();
        'step 3'
        if(event.continue) {
        var card=event.card;
        var next=event.target.chooseUseTarget(card);
        if(get.info(card).updateUsable=='phaseUse') next.addCount=false;
        }
    },
                ai:{
                    order:7.2,
                    result:{
                        player:1,
                    },
                },
            },
            "ssr_qicai":{
                //group:"ssr_qicai_trick",
                subSkill:{
                    trick:{
                        audio:"qicai",
                        trigger:{
                            player:"useCard",
                        },
                        priority:5,
                        filter:function(event,player){
        if(get.type(event.card)!='trick') return false;
        return true;
        //if(get.info(event.card).multitarget) return false;
        if(event.targets.length<2) return false;
        return true;
    },
                        direct:true,
                        content:function(){
        "step 0"
        var evt=_status.event.getTrigger();
        player.chooseTarget(get.prompt('ssr_qicai'),
            [1,game.players.length],function(card,player,target){
            return !evt.excluded.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            if(game.phaseNumber>game.players.length*2&&trigger.targets.length>=game.players.length-1){
                return get.effect(target,trigger.card,trigger.player,_status.event.player);
            }
            return -1;
        });
        "step 1"
            event.out=[];
            var evt=_status.event.getTrigger();
            for(i=0;i<game.players.length;i++) {
                    if(!result.targets.contains(game.players[i])) {
                        event.out.push(game.players[i]);
                    }
                }
            player.logSkill('ssr_qicai',result.targets);
            trigger.excluded.addArray(event.out);
            player.line(result.targets,'green');
            game.delay();
    },
                        sub:true,
                    },
                },
                locked:true,
                audio:"qicai",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                filter:function(event){
                    return (get.type(event.card)=='trick');
                },
                content:function(){
                    trigger.nowuxie=true;
                },
                ai:{
                    threaten:1.2,
                },
                mod:{
                    selectTarget:function (card,player,range){
                        var type=get.type(card);
                        var name=get.name(card);
                        if(type=='trick'&&range[1]==-1&&(name!='wuzhong')) range[1]=Infinity;
                        //if(type=='trick'&&range[1]==1) range[1]=2;
                    },
                    targetInRange:function(card,player,target,now){
                        var type=get.type(card);
                        if(type=='trick'||type=='delay') return true;
                    },
                },
            },
            "ssr_jiqiao":{
                audio:"jiqiao",
                unique:true,
                trigger:{
                    global:["gameDrawAfter","phaseBefore"],
                    player:["phaseZhunbeiBegin","phaseAfter"],
                },
                forced:true,
                priority:-5,
                filter:function(event,player){
        return !player.storage.ssr_jiqiao||player.storage.ssr_jiqiao.length<3;
    },
                content:function(){
        "step 0"
        player.storage.ssr_jiqiao=game.cardsGotoSpecial(get.cards(3)).cards;
        player.markSkill('ssr_jiqiao');
        game.addVideo('storage',player,['ssr_jiqiao',get.cardsInfo(player.storage.ssr_jiqiao),'cards']);
        "step 1"
        player.chooseCard('选择任意张手牌与“辎”交换',[1,Math.min(player.countCards('h'),player.storage.ssr_jiqiao.length)]).set('promptx',[player.storage.ssr_jiqiao]).ai=function(card){
            var val=get.value(card);
            if(val<0) return 10;
            if(player.skipList.contains('phaseUse')){
                return val;
            }
            return -val;
        };
        "step 2"
        if(result.bool){
            player.logSkill('ssr_jiqiao');
            player.lose(result.cards,ui.special,'toStorage');
            player.storage.ssr_jiqiao=player.storage.ssr_jiqiao.concat(result.cards);
            player.syncStorage('ssr_jiqiao');
            event.num=result.cards.length;
            event.choose=result.cards;
        }
        else{
            event.finish();
        }
        "step 3"
        player.chooseCardButton(player.storage.ssr_jiqiao,'选择'+event.num+'张牌作为手牌',event.num,true).set('filterButton',function(button){
            return !event.choose.contains(button.link);
        }).ai=function(button){
            var val=get.value(button.link);
            if(val<0) return -10;
            if(player.skipList.contains('phaseUse')){
                return -val;
            }
            return val;
        }
        if(player==game.me&&!event.isMine()){
            game.delay(0.5);
        }
        "step 4"
        player.gain(result.links,'fromStorage');
        for(i=0;i<result.links.length;i++){
            player.storage.ssr_jiqiao.remove(result.links[i]);
        }
        player.syncStorage('ssr_jiqiao');
        if(player==game.me&&_status.auto){
            game.delay(0.5);
        }
    },
                marktext:"辎",
                mark:true,
                intro:{
                    name:"木牛流马",
                    onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage,1000);
                game.cardsDiscard(storage);
                game.log(storage,'被置入了弃牌堆');
             storage.length=0;
            }
        },
                    mark:function(dialog,content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()){
                    dialog.addAuto(content);
                }
                else{
                    return '共有'+get.cnNumber(content.length)+'张“辎”';
                }
            }
        },
                    content:function(content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()){
                    return get.translation(content);
                }
                return '共有'+get.cnNumber(content.length)+'张“辎”';
            }
        },
                },
                global:["ssr_jiqiao_muniu"],
                subSkill:{
                    forbid:{
                        sub:true,
                    },
                    muniu:{
                        enable:"phaseUse",
                        filter:function(event,player){
                            var num=game.countPlayer(function(current){
                                return current.hasSkill('ssr_jiqiao')&&current.storage.ssr_jiqiao&&current.storage.ssr_jiqiao.length>0;
                            });
                            return num>0;
                        },
                        content:function(){
                "step 0"
                if(!player.hasSkill('ssr_jiqiao_forbid')) player.addTempSkill('ssr_jiqiao_forbid');
                var num=game.countPlayer(function(current){
                    return current.hasSkill('ssr_jiqiao');
                });
                if(num==1) {
                    if(player.hasSkill('ssr_jiqiao')) {
                        event.him=player;
                        event.goto(4);
                    }else {
                        for(i=0;i<game.players.length&&typeof(event.him)=='undefined';i++) {
                            if(game.players[i].hasSkill('ssr_jiqiao')) {
                                event.him=game.players[i];
                            }
                        }
                        if(typeof(event.him)!='undefined') {
                        event.goto(2);
                        }else {
                        event.finish();
                        }
                    }
                }else {
                    player.chooseTarget('机巧：请选择请求使用的“辎”？',get.prompt2('ssr_jiqiao'),1,function(card,player,target){
                        return target.hasSkill('ssr_jiqiao');
                    },function(target){
                        return get.attitude(player,target);
                    });
                }
                "step 1"
                    if(result.bool) {
                        event.him=result.targets[0];
                        if(event.him==player) {
                            event.goto(4);
                        }else {
                            event.goto(2);
                        }
                    }else {
                        event.finish();
                    }
                "step 2"
                event.him.chooseControl('确定','取消',function(){
                    if(get.attitude(event.him,player)>1) return '确定';
                    return '取消';
                }).set('prompt','机巧：是否允许'+get.translation(player.name)+'使用你的“辎”？');
                "step 3"
                if(result.control=='确定') {
                    event.goto(4);
                }else {
                    event.him.say('不准你用！');
                    game.log(event.him,'拒绝了',player,'使用“辎”的申请');
                    event.finish();
                }
                "step 4"
                //alert(event.him.name);
                event.first=event.him.storage.ssr_jiqiao;
                player.chooseCard('选择任意张手牌与“辎”交换',[1,Math.min(player.countCards('h'),event.him.storage.ssr_jiqiao.length)]).set('promptx',[event.him.storage.ssr_jiqiao]).ai=function(card){
                    var val=get.value(card);
                    if(get.type(card)=='trick'||get.type(card)=='delay') {
                        if(player.hasSkill('ssr_jinnang')) {
                            return val-5;
                        }else {
                            return val+3;

                        }
                    }
                    if(val<0) return 10;
                    if(player.skipList.contains('phaseUse')){
                        return val;
                    }
                    return -val;
                };
                "step 5"
                if(result.bool){
                    game.log(event.him,'通过了',player,'使用“辎”的申请');
                    player.logSkill('ssr_jiqiao');
                    player.lose(result.cards,ui.special,'toStorage');
                    event.him.storage.ssr_jiqiao=event.him.storage.ssr_jiqiao.concat(result.cards);
                    event.him.syncStorage('ssr_jiqiao');
                    event.num=result.cards.length;
                    event.choose=result.cards;
                }
                else{
                    event.finish();
                }
                "step 6"
                player.chooseCardButton(event.him.storage.ssr_jiqiao,'选择'+event.num+'张牌作为手牌',event.num,true).set('filterButton',function(button){
                    return !event.choose.contains(button.link);
                }).ai=function(button){
                    var val=get.useful(button.link);
                    if(get.type(card)=='trick'||get.type(card)=='delay') {
                        if(player.hasSkill('ssr_jinnang')) {
                            return val+5;
                        }else {
                            return val-3;

                        }
                    }
                    if(val<0) return -10;
                    if(player.skipList.contains('phaseUse')){
                        return -val;
                    }
                    return val;
                }
                if(player==game.me&&!event.isMine()){
                    game.delay(0.5);
                }
                "step 7"
                player.gain(result.links,'fromStorage');
                for(i=0;i<result.links.length;i++){
                    event.him.storage.ssr_jiqiao.remove(result.links[i]);
                }
                event.him.syncStorage('ssr_jiqiao');
                if(player==game.me&&_status.auto){
                    game.delay(0.5);
                }
                event.second=event.him.storage.ssr_jiqiao;
                if(event.him!=player) event.him.chooseControl('ok').set('dialog',['木牛流马（使用前）',event.first,'木牛流马（使用后）',event.second]);
            },
                ai:{
                order:11,
                result:{
                    player:function(player){
                        var num=game.countPlayer(function(current){
                                return current.hasSkill('ssr_jiqiao')&&get.attitude(player,current)>=0;
                            });
                        if(player.hasSkill('ssr_jiqiao_forbid')||num<1) {
                            return -1;
                        }else {
                            return 1;
                        }
                    },
                },
                },
                        sub:true,
                    },
                },
            },
            "ssr_jizhi":{
                audio:"jizhi",
                derivation:["ssr_jizhi_huoji","ssr_jizhi_bazhen","ssr_jizhi_kanpo"],
                group:["ssr_jizhi_huoji","ssr_jizhi_bazhen","ssr_jizhi_kanpo"],
                subSkill:{
                    kanpo:{
                        audio:"kanpo",
                        enable:"chooseToUse",
                        filterCard:function(card){
        var typeb=get.type(card);
        var colorb=get.color(card);
        if(ui.selected.cards.length==0) {
            return typeb=='trick'||typeb=='delay'||colorb=='black';
        }else {
        var typea=get.type(ui.selected.cards[0]);
        var colora=get.color(ui.selected.cards[0]);
        if((typea=='trick'||typea=='delay')&&colorb=='black') return true;
        if(colora=='black'&&(typeb=='trick'||typeb=='delay')) return true;
            return false;
            }
    },
                        onuse:function(result,player){
        player.draw();
    },
                        viewAsFilter:function(player){
                var a=player.countCards('hs',{color:'black'});
                var b=player.countCards('hs',{type:'trick'})+player.countCards('hs',{type:'delay'});
                var c=player.countCards('hs',{type:'trick',color:'black'})+player.countCards('hs',{type:'delay',color:'black'});
        return ((a-c)*(b-c)>0||c*(a-c)>0||c*(b-c)>0);
    },
                        viewAs:{
                            name:"wuxie",
                        },
                        selectCard:2,
                        position:"hs",
                        prompt:"将一张黑色手牌当无懈可击使用",
                        check:function(card){
        var tri=_status.event.getTrigger();
        if(tri&&tri.card&&tri.card.name=='chiling') return -1;
        return 8-get.value(card)
    },
                        threaten:1.2,
                        ai:{
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:1,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                    bazhen:{
                        audio:"bazhen",
                        equipSkill:true,
                        noHidden:true,
                        inherit:"bagua_skill",
                        filter:function(event,player){
                if(!lib.skill.bagua_skill.filter(event,player)) return false;
                if(!player.isEmpty(2)) return false;
                return (player.countCards('hs',{type:'trick'})||player.countCards('hs',{type:'delay'}));
            },
                        ai:{
                            respondShan:true,
                            effect:{
                                target:function(card,player,target){
                        if(player==target&&get.subtype(card)=='equip2'){
                            if(get.equipValue(card)<=7.5) return 0;
                        }
                        if(!target.isEmpty(2)) return;
                        return lib.skill.bagua_skill.ai.effect.target.apply(this,arguments);
                    },
                            },
                        },
                        sub:true,
                        trigger:{
                            player:["chooseToRespondBegin","chooseToUseBegin"],
                        },
                        direct:true,
                        check:function(event,player){
            if(event&&(event.ai||event.ai1)){
                var ai=event.ai||event.ai1;
                var tmp=_status.event;
                _status.event=event;
                var result=ai({name:'shan'},_status.event.player,event);
                _status.event=tmp;
                return result>0;
            }
            return true;
        },
                        content:function(){
            "step 0"
            var next=player.chooseToRespond(get.prompt2('ssr_jizhi_bazhen'));
                        next.set('filterCard',function(card){
                            return get.type(card)=='trick'||get.type(card)=='delay';
                        });
                        next.set('check',function(card){
                            return 8-get.value(card);
                        });
            'step 1'
            if(!result.bool) {
                event.finish();
                return;
                }
            player.draw();
            trigger.bagua_skill=true;
            player.judge('bagua',function(card){return (get.color(card)=='red')?1.5:-0.5});
            "step 2"
            if(result.judge>0){
                trigger.untrigger();
                trigger.set('responded',true);
                trigger.result={bool:true,card:{name:'shan',isCard:true}}
            }
        },
                    },
                    huoji:{
                        audio:"huoji",
                        enable:"phaseUse",
                        filterCard:function(card){
        var typeb=get.type(card);
        var colorb=get.color(card);
        if(ui.selected.cards.length==0) {
            return typeb=='trick'||typeb=='delay'||colorb=='red';
        }else {
        var typea=get.type(ui.selected.cards[0]);
        var colora=get.color(ui.selected.cards[0]);
        if((typea=='trick'||typea=='delay')&&colorb=='red') return true;
        if(colora=='red'&&(typeb=='trick'||typeb=='delay')) return true;
            return false;
            }
    },
                        onuse:function(result,player){
        player.draw();
    },
                        selectCard:2,
                        viewAs:{
                            name:"huogong",
                            nature:"fire",
                        },
                        viewAsFilter:function(player){
                var a=player.countCards('hs',{color:'red'});
                var b=player.countCards('hs',{type:'trick'})+player.countCards('hs',{type:'delay'});
                var c=player.countCards('hs',{type:'trick',color:'red'})+player.countCards('hs',{type:'delay',color:'red'});
        return ((a-c)*(b-c)>0||c*(a-c)>0||c*(b-c)>0);
    },
                        position:"hs",
                        prompt:"将一张红色牌当火攻使用",
                        check:function(card){
        var player=_status.currentPhase;
        if(player.needsToDiscard()>0){
            return 6-get.value(card);
        }
        return 3-get.value(card)
    },
                        ai:{
                            fireAttack:true,
                            basic:{
                                order:4,
                                value:[3,1],
                                useful:1,
                            },
                            wuxie:function(target,card,player,current,state){
            if(get.attitude(current,player)>=0&&state>0) return false;
        },
                            result:{
                                player:function(player){
                var nh=player.countCards('h');
                if(nh<=player.hp&&nh<=4&&_status.event.name=='chooseToUse'){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'},player,_status.event)){
                        return -10;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -10;
                        if(viewAs&&viewAs.name=='huogong') return -10;
                    }
                }
                return 0;
            },
                                target:function(player,target){
                if(target.hasSkill('huogong2')||target.countCards('h')==0) return 0;
                if(player.countCards('h')<=1) return 0;
                if(target==player){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'},player,_status.event)){
                        return -1.5;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -1.5;
                        if(viewAs&&viewAs.name=='huogong') return -1.5;
                    }
                    return 0;
                }
                return -1.5;
            },
                            },
                            tag:{
                                damage:1,
                                fireDamage:1,
                                natureDamage:1,
                                norepeat:1,
                            },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_weimu":{
                grouo:"ssr_weimu_defend",
                subSkill:{
                    defend:{
                        trigger:{
                            global:"useCard1",
                        },
                        audio:"weimu",
                        forced:true,
                        firstDo:true,
                        filter:function(event,player,card){
        if(get.color(event.card)!='black') return false;
        return event.card.name=='nanman'&&player!=event.player||event.card.name=='wanjian'&&player!=event.player||event.card.name=='taoyuan'&&player.hp<player.maxHp||event.card.name=='wugu';
    },
                        content:function(){},
                        sub:true,
                    },
                },
                locked:true,
                audio:"shenmou",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                filter:function(event){
        return ((get.type(event.card)=='trick'||get.type(event.card)=='delay')&&get.color(event.card)=='black');
    },
                content:function(){
        trigger.nowuxie=true;
        trigger.directHit.addArray(game.players);
    },
                ai:{
                    threaten:1.4,
                    noautowuxie:true,
                },
                mod:{
                    targetInRange:function(card,player,target,now){
             var type=get.type(card);
            if((type=='trick'||type=='delay')&&get.color(card)=='black') return true;
        },
                    targetEnabled:function(card){
            if((get.type(card)=='trick'||get.type(card)=='delay')&&
                get.color(card)=='black') return false;
        },
                },
            },
            "ssr_zhenlue":{
                audio:"zhenlue",
                unique:true,
                enable:"phaseUse",
                limited:true,
                skillAnimation:"epic",
                animationColor:"thunder",
                content:function(){
        "step 0"
        player.awakenSkill('ssr_zhenlue');
        event.num=4;
        event.cardpile=[];
        'step 1'
        event.num--;
        "step 2"
        event.card=get.cardPile(function(card){
            for(var a=0;a<event.cardpile.length;a++) {
                if(get.name(card)==get.name(event.cardpile[a])) return false;
                }
            if(get.type(card)=='trick'&&get.color(card)=='black') return true;
            return false;
        },'cardPile');
        if(!event.card){
            if(event.cardpile.length>0) {
                event.goto(4);
            }else {
                event.finish();
                return;
            }
        }
        player.showCards([event.card]);
        "step 3"
        event.cardpile.push(event.card);
        if(event.num>0) event.goto(1);
        'step 4'
        player.chooseControl('ok').set('dialog',['文和乱武',event.cardpile]);
        'step 5'
        player.gain(event.cardpile,'gain2');
    },
                ai:{
                    order:1,
                    result:{
                        player:function(player){
                if(lib.config.mode=='identity'&&game.zhu.isZhu&&player.identity=='fan'){
                    if(game.zhu.hp==1&&game.zhu.countCards('h')<=2) return 1;
                }
                var num=0;
                var players=game.filterPlayer();
                for(i=0;i<players.length;i++){
                    var att=get.attitude(player,players[i]);
                    if(att>0) att=1;
                    if(att<0) att=-1;
                    if(players[i]!=player&&players[i].hp<=3){
                        if(players[i].countCards('h')==0) num+=att/players[i].hp;
                        else if(players[i].countCards('h')==1) num+=att/2/players[i].hp;
                        else if(players[i].countCards('h')==2) num+=att/4/players[i].hp;
                    }
                    if(players[i].hp==1) num+=att*1.5;
                }
                if(player.hp==1){
                    return -num;
                }
                if(player.hp==2){
                    return -game.players.length/4-num;
                }
                return -game.players.length/3-num;
            },
                    },
                },
                mark:true,
                intro:{
                    content:"limited",
                },
                init:function(player,skill){
        player.storage[skill]=false;
    },
            },
            "ssr_juesha":{
                subSkill:{
                    kill:{
                        mark:true,
                        marktext:"殺",
                        intro:{
                            content:"你不能使用【酒】或【桃】直到回合结束",
                        },
                        mod:{
                            cardSavable:function(card,player){
                        if(card.name=='tao'||card.name=='jiu') return false;
                },
                            cardEnabled:function(card,player){
                        if(card.name=='tao'||card.name=='jiu') return false;
                },
                        },
                        sub:true,
                    },
                },
                audio:"luanwu",
                unique:true,
                enable:"phaseUse",
                limited:true,
                skillAnimation:"epic",
                animationColor:"thunder",
                filterTarget:function(card,player,target){
        return target!=player;
    },
                selectTarget:-1,
                multitarget:true,
                multiline:true,
                content:function(){
        "step 0"
        player.awakenSkill('ssr_juesha');
        event.current=player.next;
        event.currented=[];
        "step 1"
        event.currented.push(event.current);
        event.current.animate('target');
        event.current.addTempSkill('ssr_juesha_kill');
        "step 2"
        event.current=event.current.next;
        if(event.current!=player&&!event.currented.contains(event.current)){
            game.delay(0.5);
            event.goto(1);
        }
    },
                ai:{
                    order:1,
                    result:{
                        player:function(player){
                if(lib.config.mode=='identity'&&game.zhu.isZhu&&player.identity=='fan'){
                    if(game.zhu.hp==1&&game.zhu.countCards('h')<=2) return 1;
                }
                var num=0;
                var players=game.filterPlayer();
                for(i=0;i<players.length;i++){
                    var att=get.attitude(player,players[i]);
                    if(att>0) att=1;
                    if(att<0) att=-1;
                    if(players[i]!=player&&players[i].hp<=3){
                        if(players[i].countCards('h')==0) num+=att/players[i].hp;
                        else if(players[i].countCards('h')==1) num+=att/2/players[i].hp;
                        else if(players[i].countCards('h')==2) num+=att/4/players[i].hp;
                    }
                    if(players[i].hp==1) num+=att*1.5;
                }
                if(player.hp==1){
                    return -num;
                }
                if(player.hp==2){
                    return -game.players.length/4-num;
                }
                return -game.players.length/3-num;
            },
                    },
                },
                mark:true,
                intro:{
                    content:"limited",
                },
                init:function(player,skill){
        player.storage[skill]=false;
    },
            },
            "ssr_beiming":{
                filterTarget:function(card,player,target){
        return player!=target;
    },
                usable:1,
                selectTarget:-1,
                multitarget:true,
                audio:"chenqing",
                enable:"phaseUse",
                prompt:"出牌阶段限一次，你可以指定所有其他角色为目标，然后选择一项：悲愤，手牌数大于你的角色弃置两张手牌，小于你的角色摸两张牌；胡笳，手牌数大于你的角色摸两张牌，小于你的角色弃置两张手牌。",
                content:function(){
        "step 0"
        for(i=0;i<game.players.length;i++) {
            var him=game.players[i];
            if(him.countCards('h')>player.countCards('h')) {
                him.$damagepop('多');
            }else {
                him.$damagepop('少');
            }
        }
        player.chooseControl('悲愤','胡笳',function(){
        var basic=0;
        var pla=player.countCards('h');
            for(i=0;i<targets.length;i++) {
        var tar=targets[i].countCards('h');
        if(tar>pla) {
            if(get.attitude(player,targets[i])>0) {
                basic--;
            }else {
                basic++;
            }
        }else if(tar<pla) {
            if(get.attitude(player,targets[i])>0) {
                basic++;
            }else {
                basic--;
            }
        }
            }
        if(basic>=0) {
            return '悲愤';
        }else {
            return '胡笳';
        }
        }).set('prompt','请选择〖悲鸣〗的曲调：<li>悲愤，手牌数大于你的角色弃置两张手牌，小于你的角色摸两张牌<li>胡笳，手牌数大于你的角色摸两张牌，小于你的角色弃置两张手牌');
        'step 1'
        game.log(player,'选择了：',result.control);
        var pla=player.countCards('h');
            for(i=0;i<targets.length;i++) {
        var tar=targets[i].countCards('h');
        if(tar>pla) {
            if(result.control=='悲愤') {
            targets[i].chooseToDiscard(2,'h',true);
        }else {
            targets[i].draw(2);
        }
        }else if(tar<pla) {
            if(result.control=='悲愤') {
            targets[i].draw(2);
        }else {
            targets[i].chooseToDiscard(2,'h',true);
        }
        }
        }
    },
                ai:{
                    order:5,
                    expose:0.2,
                    result:{
                        player:function(player){
                            return 4;
                        },
                    },
                },
            },
            "ssr_duanxian":{
                subSkill:{
                    gong:{
                        mark:true,
                        marktext:"宫调",
                        priority:11,
                        intro:{
                            name:"思念",
                            content:"弃一张黑牌，可以减少受到伤害",
                        },
                        locked:true,
                        audio:"beige",
                        trigger:{
                            player:"damageBegin",
                        },
                        frequent:true,
                        filter:function(event){
                return event.num>0;
            },
                        content:function(){
                'step 0'
                player.chooseCard(1,'he',{color:'black'},'宫调：是否弃置一张黑牌，然后使伤害值减一？').set('check',function(card){
                    return 9-get.value(card);
                });
                'step 1'
                if(result.bool) {
                    player.discard(result.cards);
                    trigger.num--;
                    }
            },
                        sub:true,
                    },
                    zhi:{
                        mark:true,
                        marktext:"徵调",
                        priority:11,
                        intro:{
                            name:"欢喜",
                            content:"弃一张黑牌，可以增加回复体力",
                        },
                        locked:true,
                        audio:"beige",
                        trigger:{
                            player:"recoverBegin",
                        },
                        frequent:true,
                        filter:function(event){
                return event.num>0;
            },
                        content:function(){
                'step 0'
                event.num=player.hp+trigger.num;
                player.chooseCard(1,'he',{color:'black'},'徵调：是否弃置一张黑牌，然后使回复值加一？').set('check',function(card){
                    if(event.num<player.maxHp) {
                    return 9-get.value(card);
                        }else {
                    return -1;
                        }
                });
                'step 1'
                if(result.bool) {
                    player.discard(result.cards);
                    trigger.num++;
                    }
            },
                        sub:true,
                    },
                    yu:{
                        mark:true,
                        marktext:"羽调",
                        priority:11,
                        intro:{
                            name:"惊恐",
                            content:"弃一张红牌，否则增加受到伤害",
                        },
                        locked:true,
                        audio:"beige",
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        filter:function(event){
                return event.num>0;
            },
                        content:function(){
                'step 0'
                player.chooseCard(1,'he',{color:'red'},'羽调：弃置一张红牌，否则使受到的伤害值减加一').set('check',function(card){
                    return 9-get.value(card);
                });
                'step 1'
                if(result.bool) {
                    player.discard(result.cards);
                    }else {
                    trigger.num++;
                    }
            },
                        sub:true,
                    },
                    shang:{
                        mark:true,
                        marktext:"商调",
                        priority:11,
                        intro:{
                            name:"悲痛",
                            content:"弃一张红牌，否则减少回复体力",
                        },
                        locked:true,
                        audio:"beige",
                        trigger:{
                            player:"recoverBegin",
                        },
                        forced:true,
                        filter:function(event){
                return event.num>0;
            },
                        content:function(){
                'step 0'
                player.chooseCard(1,'he',{color:'red'},'商调：弃置一张红牌，否则使体力回复值减一').set('check',function(card){
                    return 9-get.value(card);
                });
                'step 1'
                if(result.bool) {
                    player.discard(result.cards);
                    }else {
                    trigger.num--;
                    }
            },
                        sub:true,
                    },
                },
                audio:"mozhi",
                unique:true,
                enable:"phaseUse",
                mark:true,
                skillAnimation:true,
                animationColor:"gray",
                limited:true,
                init:function(player){
        player.storage.ssr_duanxian=false;
    },
                filter:function(event,player){
        if(player.storage.ssr_duanxian) return false;
        return true;
    },
                filterTarget:function(card,player,target){
        return target!=player;
    },
                content:function(){
        'step 0'
        player.awakenSkill('ssr_duanxian');
        player.storage.ssr_duanxian=true;
        player.chooseControl('雅乐','俗乐',function(){
            if(get.attitude(player,target)>0) {
            return '雅乐';
            }else {
            return '俗乐';
            }
        }).set('prompt','请选择乐曲类型<br>〖雅乐〗<li>宫调：弃一张黑牌，可以减少受到伤害<li>徵调：弃一张黑牌，可以增加回复体力<br>〖俗乐〗<li>羽调：弃一张红牌，否则增加受到伤害<li>商调：弃一张红牌，否则减少回复体力<br><br><br><br>');
        'step 1'
        if(result.control=='雅乐') {
            var skills=['gong','zhi'].randomGet();
        }else {
            var skills=['yu','shang'].randomGet();
        }
        target.addSkill('ssr_duanxian_'+skills);
    },
                ai:{
                    expose:0.3,
                    order:13,
                    result:{
                        target:function(player,target){
                            var att=get.attitude(player,target);
                            if(att>-2&&att<2) return 0;
                            return att;
                        },
                    },
                },
                intro:{
                    content:"limited",
                },
            },
            "ssr_juenian":{
                derivation:"fengyin",
                audio:"duanchang",
                trigger:{
                    player:"die",
                },
                forceDie:true,
                skillAnimation:true,
                animationColor:"gray",
                filter:function(event){
        return event.source&&event.source.isIn();
    },
                check:function(event,player){
        return (get.attitude(player,event.source)<=-2);
    },
                content:function(){
        'step 0'
        trigger.source.addSkill('fengyin');
        trigger.source.loseHp();
    },
                logTarget:"source",
                ai:{
                    threaten:function(player,target){
            if(target.hp==1) return 0.2;
            return 1.4;
        },
                    effect:{
                        target:function(card,player,target,current){
                            if(!target.hasFriend()) return;
                            if(target.hp<=1&&get.tag(card,'damage')) return [1,0,0,-2];
                        },
                    },
                },
            },
            "ssr_rende":{
                subSkill:{
                    clear:{
                        silent:true,
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        content:function(){
                "step 0"
                player.removeMark('ssr_rende',player.countMark('ssr_rende'));
            },
                        sub:true,
                        popup:false,
                    },
                },
                marktext:"仁",
                intro:{
                    content:function (storage,player,skill){
                        var num=player.countMark('ssr_rende');
                        var str='<li>你因〖仁德〗给出了第 '+num+' 张牌';
                        if(num==-1)  var str=str+'<li>你已发动了来自〖仁德〗的【桃园结义】';
                        return str;
                    },
                },
                mod:{
                    selectTarget:function (card,player,range){
                        if(card.name=='taoyuan') range[1]=Infinity;
                    },
                },
                audio:"rende",
                enable:"phaseUse",
                filterCard:true,
                selectCard:[1,Infinity],
                discard:false,
                prepare:"give2",
                filterTarget:function(card,player,target){
                    return player!=target;
                },
                filter:function(event,player){
                         return player.countCards('h')>0;
                },
                check:function(card){
        if(ui.selected.cards.length>1) return 0;
        if(ui.selected.cards.length&&ui.selected.cards[0].name=='du') return 0;
        if(!ui.selected.cards.length&&card.name=='du') return 20;
        var player=get.owner(card);
        if(player.storage.ssr_rende<0||player.countCards('h')<=1){
            if(ui.selected.cards.length){
                return -1;
            }
            var players=game.filterPlayer();
            for(i=0;i<players.length;i++){
                if(players[i].hasSkill('haoshi')&&
                    !players[i].isTurnedOver()&&
                    !players[i].hasJudge('lebu')&&
                    get.attitude(player,players[i])>=3&&
                    get.attitude(players[i],player)>=3){
                    return 11-get.value(card);
                }
            }
            if(player.needsToDiscard()>0) return 10-get.value(card);
            if(player.countCards('h')>1) return 6-get.value(card);
            return -1;
        }
        return 10-get.value(card);
    },
                content:function(){
        'step 0'
        target.gain(cards,player,'giveAuto');
        player.addMark('ssr_rende',cards.length);
        'step 1'
        var num=player.countMark('ssr_rende');
        if(num>2){
                player.removeMark('ssr_rende',3);
                result.targets=game.players;
                result.bool=true;
        }else {
            event.finish();
        }
        'step 2'
            if(result.bool){
                var target=result.targets;
                player.chooseUseTarget('taoyuan',target,'仁德：请选择使用【桃园结义】的目标，否则你回复两点体力').set('ai',function(target){
                //var player=_status.event.player;
                var num=game.countPlayer(function(current){
                                return current.hp<current.maxHp&&get.attitude(player,current)>0;
                            });
                if((num>=2&&player.hp>2)||player.hp>=player.maxHp) {
                    return get.attitude(player,target);
                }
                return -1;
            });
            result.bool=false;
            }
        'step 3'
            if(!result.bool){
                player.recover(2);
            }
            result.bool=false;
            event.goto(1);
    },
                ai:{
                    order:function(skill,player){
            if(game.hasPlayer(function(current){
            return get.attitude(player,current)>0&&current.maxHp>current.hp;
        })&&player.storage.ssr_rende+player.countCards('h')>=2&&player.storage.ssr_rende<3){
                return 10;
            }
            return 1;
        },
                    result:{
                        target:function(player,target){
                if(target.hasSkillTag('nogain')) return 0;
                if(ui.selected.cards.length&&ui.selected.cards[0].name=='du'){
                    if(target.hasSkillTag('nodu')) return 0;
                    return -10;
                }
                if(target.hasJudge('lebu')) return 0;
                var nh=target.countCards('h');
                var np=player.countCards('h');
                if(!game.hasPlayer(function(current){
            return get.attitude(player,current)>0&&current.maxHp>current.hp;
        })||player.storage.ssr_rende<0||player.countCards('h')<=1){
                    if(nh>=np-1&&np<=player.hp&&!target.hasSkill('haoshi')) return 0;
                }
                return Math.max(1,5-nh);
            },
                    },
                    effect:{
                        target:function(card,player,target){
                if(player==target&&get.type(card)=='equip'){
                    if(player.countCards('e',{subtype:get.subtype(card)})){
                        var players=game.filterPlayer();
                        for(i=0;i<players.length;i++){
                            if(players[i]!=player&&get.attitude(player,players[i])>0){
                                return 0;
                            }
                        }
                    }
                }
            },
                    },
                    threaten:0.8,
                },
            },
            "ssr_shichou":{
                subSkill:{
                    spade:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
                            return event.player==player.storage.ssr_shichou_spade;
                        },
                        forced:true,
                        silent:true,
                        intro:{
                            name:"誓仇",
                            content:"你不能使用或打出黑桃牌。",
                        },
                        mark:true,
                        marktext:"♠",
                        content:function(){
                            player.removeSkill('ssr_shichou_spade');
                        },
                        mod:{
                            cardSavable:function(card,player){
                                if(get.suit(card)=='spade') return false;
                            },
                            cardEnabled:function(card,player){
                                if(get.suit(card)=='spade') return false;
                            },
                            cardResponsabled:function(card,player){
                                if(get.suit(card)=='spade') return false;
                            },
                        },
                        sub:true,
                    },
                    club:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
                            return event.player==player.storage.ssr_shichou_club;
                        },
                        forced:true,
                        silent:true,
                        intro:{
                            name:"誓仇",
                            content:"你不能使用或打出梅花牌。",
                        },
                        mark:true,
                        marktext:"♣",
                        content:function(){
                            player.removeSkill('ssr_shichou_club');
                        },
                        mod:{
                            cardSavable:function(card,player){
                                if(get.suit(card)=='club') return false;
                            },
                            cardEnabled:function(card,player){
                                if(get.suit(card)=='club') return false;
                            },
                            cardResponsabled:function(card,player){
                                if(get.suit(card)=='club') return false;
                            },
                        },
                        sub:true,
                    },
                    diamond:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
                            return event.player==player.storage.ssr_shichou_diamond;
                        },
                        forced:true,
                        silent:true,
                        intro:{
                            name:"誓仇",
                            content:"你不能使用或打出方块牌。",
                        },
                        mark:true,
                        marktext:"♦",
                        content:function(){
                            player.removeSkill('ssr_shichou_diamond');
                        },
                        mod:{
                            cardSavable:function(card,player){
                                if(get.suit(card)=='diamond') return false;
                            },
                            cardEnabled:function(card,player){
                                if(get.suit(card)=='diamond') return false;
                            },
                            cardResponsabled:function(card,player){
                                if(get.suit(card)=='diamond') return false;
                            },
                        },
                        sub:true,
                    },
                    heart:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
                            return event.player==player.storage.ssr_shichou_heart;
                        },
                        forced:true,
                        silent:true,
                        intro:{
                            name:"誓仇",
                            content:"你不能使用或打出红桃牌。",
                        },
                        mark:true,
                        marktext:"♥",
                        content:function(){
                            player.removeSkill('ssr_shichou_heart');
                        },
                        mod:{
                            cardSavable:function(card,player){
                                if(get.suit(card)=='heart') return false;
                            },
                            cardEnabled:function(card,player){
                                if(get.suit(card)=='heart') return false;
                            },
                            cardResponsabled:function(card,player){
                                if(get.suit(card)=='heart') return false;
                            },
                        },
                        sub:true,
                    },
                },
                audio:"shichou",
                shaRelated:true,
    trigger:{
        player:"useCardToPlayered",
    },
    check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
    filter:function(event,player){
        return event.card.name=='sha';
    },
    logTarget:"target",
    content:function(){
        "step 0"
        player.judge(function(){return 0});
        "step 1"
        var suit=result.suit;
        var target=trigger.target;
        var skill='ssr_shichou_'+suit;
        var num=target.countCards('h','shan');
        if(!target.hasSkill(skill)) target.addSkill(skill);
        target.storage[skill]=player;
    },
    ai:{
        ignoreSkill:true,
        skillTagFilter:function(player,tag,arg){
            if(tag=='directHit_ai'){
                return get.attitude(player,arg.target)<=0;
            }
            if(!arg||arg.isLink||!arg.card||arg.card.name!='sha') return false;
            if(!arg.target||get.attitude(player,arg.target)>=0) return false;
            if(!arg.skill||!lib.skill[arg.skill]||lib.skill[arg.skill].charlotte||get.is.locked(arg.skill)||!arg.target.getSkills(true,false).contains(arg.skill)) return false;
        },
        "directHit_ai":true,
    },
            },
            "ssr_jinnang":{
                audio:"kanpo",
                enable:"phaseUse",
                check:function(card){
                    return 9-get.useful(card);
                },
                filterCard:function(card,player){
                    var type=get.type(card);
                    return type=='trick'||type=='delay';
                },
                filterTarget:function(card,player,target){
                    return true;
                },
                ai:{
                    order:9.5,
                    threaten:1.6,
                    expose:0.1,
                    result:{
                        target:function(player,target){
                            var add=target.hp>2?3:target.hp;
                            add+=get.attitude(player,target)*0.1;
                            if(player==target) add+=2.2;
                            if(target.hasSkill('ssr_qicai')) add+=2.7;
                            if(target.hasSkill('ssr_manjia')) add+=1.7;
                            if(target.hasSkill('ssr_rende')&&(player.maxHp>player.hp||target.maxHp>target.hp)) add+=1.7;
                            if(target.hasSkill('ssr_jinnang_pack')) add-=target.storage.ssr_jinnang_pack.length*1.3;
                            if(add<0) add=0;
                            if(player.needsToDiscard()>0) add+=1;
                            //alert(get.translation(target.name)+' | '+add);
                            return add;
                        },
                    },
                },
                prepare:"give2",
                //prepare:"throw",
                complexCard:true,
                selectCard:1,
                discard:false,
                visible:true,
                //toStorage:true,
                filter:function (event,player){
    return player.countCards('h',{type:'delay'})+player.countCards('h',{type:'trick'})>0;
    },
                content:function(){    
        'step 0'
        var list=[];
        for(i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(get.type(name)=='delay'||get.type(name)=='trick'){
                if(get.type(name)=='delay') {
                list.push(['延时','',name]);
                }else {
                list.push(['锦囊','',name]);
                }
            }
        }
        var dialog=ui.create.dialog('锦囊妙计',[list,'vcard']);
        // for(var i in list){
        //        dialog.addText(get.translation(i)+'牌');
        //        dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog,true).set('filterButton',function(button){
            if(target.hasSkill('ssr_jinnang_pack')&&target.storage.ssr_jinnang_pack&&target.storage.ssr_jinnang_pack.length>0) {
            return !target.storage.ssr_jinnang_pack.contains(button.link[2]);
            }else {
            return true;
            }
        }).ai=function(button){
            var val=0;
            if(target.hasSkill('ssr_qicai')&&name=='wuxie') val+=0.2; 
            if(target.hasSkill('ssr_manjia')&&name=='nanman') val+=3; 
            if(target.hasSkill('ssr_rende')&&name=='taoyuan') val+=3; 
            var name=button.link[2];
            var card=game.createCard(name);
            return get.useful(card)*0.5+get.value(card)*0.5;
            /*if(target.hasSkill('ssr_qicai')&&name=='wuxie') return 0.2; 
            if(target.hasSkill('ssr_manjia')&&name=='nanman') return 2; 
            if(target.hasSkill('ssr_rende')&&name=='taoyuan') return 2; 
            if(target.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&target.countCards('h')<=2){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(target.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;*/
        }
        'step 1'
        if(result.bool){
            player.discard(cards);
            if(!target.storage.ssr_jinnang_pack||!target.storage.ssr_jinnang_pack.length>0||!target.hasSkill('ssr_jinnang_pack')) {
                target.addSkill('ssr_jinnang_pack');
                target.storage.ssr_jinnang_pack=[];
                target.storage.ssr_jinnang_unchoose=[];
            }
                target.storage.ssr_jinnang_pack.push(result.links[0][2]);
            target.storage.ssr_jinnang_unchoose.push(result.links[0][2]);
            target.markSkill('ssr_jinnang_pack');
        }
    },
                subSkill:{
                    unchoose:{
                        silent:true,
                        trigger:{
                            player:"phaseBefore",
                        },
                        locked:true,
                        forced:true,
                        filter:function(event,player){
        return true;
    },
                        content:function(){
        player.storage.ssr_jinnang_unchoose=[];
    },
                        sub:true,
                        popup:false,
                    },
                    wuxie:{
                        audio:"kanpo",
                        enable:"chooseToUse",
                        filterCard:true,
                        position:"h",
                        selectCard:-1,
                        viewAs:{
                            name:"wuxie",
                        },
                        hiddenCard:function(player,name){
        return player.storage.ssr_jinnang_pack.contains('wuxie')&&!player.storage.ssr_jinnang_unchoose.contains('wuxie');
    },
                        viewAsFilter:function(player){
        return player.storage.ssr_jinnang_pack.contains('wuxie')&&!player.storage.ssr_jinnang_unchoose.contains('wuxie');
    },
                        precontent:function(){
            event.card=get.cards(1);
        player.logSkill('ssr_jinnang_wuxie');
        event.result.card.cards=event.card;
        event.result.cards=event.card;
                if(1==0) {
        delete event.result.skill;
        delete event.result.card.suit;
        delete event.result.card.number;
                }
        event.getParent().addCount=false;
        event.getParent().ssr_jinnang_wuxie=true;
    },
                        onuse:function(result,player){
            player.storage.ssr_jinnang_pack.remove('wuxie');
            if(player.storage.ssr_jinnang_pack.length<=0){
            player.unmarkSkill('ssr_jinnang_pack');
            player.removeSkill('ssr_jinnang_pack');
            }else {
            player.markSkill('ssr_jinnang_pack');
            }
    },
                        prompt:"是否使用〖锦囊妙计〗中的【无懈可击】？",
                        check:function(card){return 8-get.equipValue(card)},
                        threaten:0.6,
                        ai:{
                            order:5,
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:2,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                    aiend:{
                        sub:true,
                    },
                    pack:{
                        audio:"kanpo",
                        group:["ssr_jinnang_unchoose","ssr_jinnang_wuxie"],
                        enable:"phaseUse",
                        content:function(){
                "step 0"
        var cardpack=player.storage.ssr_jinnang_pack;
        event.choose=player.storage.ssr_jinnang_unchoose;
        var dialog=ui.create.dialog('锦囊妙计',[cardpack,'vcard']);
        //var dialog=ui.create.dialog('锦囊妙计',cardpack);
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).set('filterButton',function(button){
            return !event.choose.contains(button.link[2])&&button.link[2]!='wuxie';
        }).ai=function(button){
            var name=button.link[2];
            return player.storage.ssr_jinnang_pack.randomGet();
            return -1;
            /*
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.countCards('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
            */
        }
        'step 1'
        if(result.bool){
            player.storage.ssr_jinnang_pack.remove(result.links[0][2]);
        if(player.storage.ssr_jinnang_pack.length<=0){
            player.unmarkSkill('ssr_jinnang_pack');
            player.removeSkill('ssr_jinnang_pack');
        }else {
            player.markSkill('ssr_jinnang_pack');
            }
            event.card=get.cards(1);
            player.chooseUseTarget(result.links[0][2],event.card,true,false);
        }else {
            player.addTempSkill('ssr_jinnang_aiend');
        }
            },
                        sub:true,
                        intro:{
                            onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage,1000);
                game.cardsDiscard(storage);
                game.log(storage,'被置入了弃牌堆');
             storage.length=0;
            }
        },
                            mark:function(dialog,content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()||game.me.hasSkill('ssr_jinnang')){
                    dialog.addAuto([content,'vcard']);
                }
                else{
                    return '共有'+get.cnNumber(content.length)+'枚锦囊';
                }
            }
        },
                            content:function(content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()||game.me.hasSkill('ssr_jinnang')){
                    return get.translation([content,'vcard']);
                }
                return '共有'+get.cnNumber(content.length)+'枚锦囊';
            }
        },
                        },
                        ai:{
                            order:10,
                            result:{
                                player:function(player){
                                    if(player.hasSkill('ssr_jinnang_aiend'))  return -1;
                                    return 2;
                                },
                            },
                            expose:0.1,
                        },
                    },
                },
            },
            "ssr_newbazhen":{
                subSkill:{
                    backup:{
                        sourceSkill:"ssr_newbazhen",
                        precontent:function(){
                            delete event.result.skill;
                            var name=event.result.card.name;
                            event.result.cards=event.result.card.cards;
                            event.result.card=get.autoViewAs(event.result.cards[0]);
                            event.result.card.name=name;
                        },
                        filterCard:function(){return false},
                        selectCard:-1,
                        sub:true,
                    },
                },
                audio:"bazhen",
    enable:["chooseToUse","chooseToRespond"],
    hiddenCard:function(player,name){
        if(player!=_status.currentPhase&&get.type(name)=='basic'&&lib.inpile.contains(name)) return true;
    },
    filter:function(event,player){
        if(event.responded||player==_status.currentPhase||event.ssr_newbazhen) return false;
        for(var i of lib.inpile){
            if(get.type(i)=='basic'&&event.filterCard({name:i},player,event)) return true;
        }
        return false;
    },
    delay:false,
    content:function(){
        'step 0'
        var evt=event.getParent(2);
        evt.set('ssr_newbazhen',true);
        var suits=['spade','club','heart','diamond'];
        for (var i=0;i<suits.length;i++) {
            var suitcard=get.cardPile(function(card){
                //if(get.type(card)!='basic'&&get.type(card)!='trick') return false;
                return get.suit(card)==suits[i];
            },'cardPile');
            if(suitcard){
                event.cards.push(suitcard);
            }
        }
        player.showCards([event.cards]);
        var cards=event.cards;
        /*for(var i=cards.length-1;i>=0;i--){
            ui.cardPile.insertBefore(cards[i].fix(),ui.cardPile.firstChild);
        }*/
        var aozhan=player.hasSkill('aozhan');
        player.chooseButton(['八阵：选择要'+(evt.name=='chooseToUse'?'使用':'打出')+'的牌',cards]).set('filterButton',function(button){
            return _status.event.cards.contains(button.link);
        }).set('cards',cards.filter(function(card){
            if(aozhan&&card.name=='tao'){
                return evt.filterCard({
                    name:'sha',isCard:true,cards:[card],
                },evt.player,evt)||evt.filterCard({
                    name:'shan',isCard:true,cards:[card],
                },evt.player,evt);
            }
            return evt.filterCard(card,evt.player,evt);
        })).set('ai',function(button){
            var evt=_status.event.getParent(3);
            if(evt&&evt.ai){
                var tmp=_status.event;
                _status.event=evt;
                var result=(evt.ai||event.ai1)(button.link,_status.event.player,evt);
                _status.event=tmp;
                return result;
            }
            return 1;
        });
        'step 1'
        var evt=event.getParent(2);
        if(result.bool&&result.links&&result.links.length){
            var name=result.links[0].name,aozhan=(player.hasSkill('aozhan')&&name=='tao');
            if(aozhan){
                name=evt.filterCard({
                    name:'sha',isCard:true,cards:[card],
                },evt.player,evt)?'sha':'shan';
            }
            if(evt.name=='chooseToUse'){
                game.broadcastAll(function(result,name){
                    lib.skill.ssr_newbazhen_backup.viewAs={name:name,cards:[result],isCard:true};
                    lib.skill.ssr_newbazhen_backup.prompt='选择'+get.translation(result)+'的目标';
                },result.links[0],name);
                evt.set('_backupevent','ssr_newbazhen_backup');
                evt.backup('ssr_newbazhen_backup');
            }
            else{
                delete evt.result.skill;
                delete evt.result.used;
                evt.result.card=get.autoViewAs(result.links[0]);
                if(aozhan) evt.result.card.name=name;
                evt.result.cards=[result.links[0]];
                evt.redo();
                return;
            }
        }
        evt.goto(0);
    },
    ai:{
        effect:{
            target:function(card,player,target,effect){
                if(get.tag(card,'respondShan')) return 0.7;
                if(get.tag(card,'respondSha')) return 0.7;
            },
        },
        order:11,
        respondShan:true,
        respondSha:true,
        result:{
            player:function(player){
                if(_status.event.dying) return get.attitude(player,_status.event.dying);
                return 1;
            },
        },
    },
            },
            "ssr_xingjiang":{
                locked:true,
                audio:"guanxing",
                trigger:{
                    player:"phaseBegin",
                },
                priority:6,
                forced:true,
                filter:function(event,player){
        return !event.numFixed;
    },
                content:function(){
        "step 0"
        event.cards=get.cards(3);
        "step 1"
            player.chooseCardButton('将一张“星降”牌交给一名角色',true,event.cards,1).set('ai',function(button){
                if(ui.selected.buttons.length==0) return 1;
                return 0;
            });
        "step 2"
        if(result.bool){
                event.cards.remove(result.links[0]);
            event.togive=result.links.slice(0);
            player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
                if((get.type(event.togive[0])=='trick'||get.type(event.togive[0])=='delay')&&!player.countCards('j',{name:'lubu'})>0) return player;
                var att=get.attitude(_status.event.player,target);
                if(att>0){
                    return att/(1+target.countCards('h'));
                }
                else{
                    return att/100;
                }
            }).set('enemy',get.value(event.togive[0],player,'raw')<0);
        }
        "step 3"
        if(result.targets.length){
            result.targets[0].gain(event.togive,'draw');
            player.line(result.targets[0],'green');
            game.log(result.targets[0],'获得了“星降”牌');
        }
    },
                ai:{
                    threaten:1.2,
                },
            },
            "ssr_quanbian":{
    subSkill:{
        forbid:{
            sub:true,
        },
    },
    audio:'zhiheng',
    trigger:{
        player:"loseAfter",
        global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
    },
    frequent:true,
    filter:function(event,player){
        if(player.hasSkill('ssr_quanbian_forbid')) return false;
        if(player.countCards('h')) return false;
        var evt=event.getl(player);
        return evt&&evt.player==player&&evt.hs&&evt.hs.length>0;
    },
    content:function(){
        player.addTempSkill('ssr_quanbian_forbid',{player:['phaseBefore','phaseAfter']});
        player.draw();
    },
},
            "ssr_manjia":{
                derivation:"tengjia",
                locked:true,
                audio:"huoshou1",
                equipSkill:true,
                noHidden:true,
                group:["ssr_manjia_trick","ssr_manjia_fire","ssr_manjia_sha"],
                inherit:"tengjia_skill",
                mod:{
                    selectTarget:function (card,player,range){
                        if(card.name=='nanman') range[1]=Infinity;
                    },
                },
                subSkill:{
                    trick:{
                        trigger:{
                            target:["useCardToBefore"],
                        },
                        forced:true,
                        priority:6,
                        audio:true,
                        filter:function(event,player){
                if(player.hasSkillTag('unequip2')) return false;
                if(player.countCards('e')>0) return false;
                if(event.card.name=='nanman') return true;
                if(event.card.name=='wanjian') return true;
                //if(event.card.name=='chuqibuyi') return true;
                return false;
            },
                        content:function(){
                trigger.tengjia_skill=true;
                trigger.cancel();
            },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                        //if(card.name=='nanman'||card.name=='wanjian'||card.name=='chuqibuyi') return 'zerotarget';
                        if(card.name=='nanman'||card.name=='wanjian') return 'zerotarget';
                        if(card.name=='sha'){
                            var equip1=player.getEquip(1);
                            if(equip1&&equip1.name=='zhuque') return 1.9;
                            if(!card.nature) return 'zerotarget';
                        }
                    },
                            },
                        },
                        sub:true,
                    },
                    fire:{
                        trigger:{
                            player:"damageBegin3",
                        },
                        filter:function(event,player){
                            if(player.hasSkillTag('unequip2')) return false;
                            if(event.nature!='fire') return false;
                            if(player.countCards('e')>0) return false;
                            return true;
                        },
                        audio:true,
                        forced:true,
                        content:function(){
                            trigger.tengjia_skill=true;
                            trigger.num++;
                        },
                        ai:{
                            fireAttack:true,
                            effect:{
                                target:function(card,player,target,current){
                        if(card.name=='sha'){
                            if(card.nature=='fire') return 2;
                            if(player.hasSkill('zhuque_skill')) return 1.9;
                        }
                        if(get.tag(card,'fireDamage')&&current<0) return 2;
                    },
                            },
                        },
                        sub:true,
                    },
                    sha:{
                        audio:"tengjia1",
                        trigger:{
                            target:"shaBefore",
                        },
                        forced:true,
                        filter:function(event,player){
                if(player.hasSkillTag('unequip2')) return false;
                if(player.countCards('e')>0) return false;
                if(event.card.name=='sha'&&!event.card.nature) return true;
                return false;
            },
                        content:function(){
    trigger.tengjia_skill=true;
                trigger.cancel();
            },
                        ai:{
                            effect:{
                                target:function(card,player,target){
                if(player==target&&get.type(card)=='equip'){
                    if(get.equipValue(card)<=8) return 0;
                }
                if(!target.countCards('e')>0) return;
                //return lib.skill.tengjia_skill.ai.effect.target.apply(this,arguments);
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_zaiqi":{
                subSkill:{
                    card:{
                        mod:{
                            cardUsable:function (card,player,num){     
                                if(card.name=='sha') return 0;
                            },
                        },
                        sub:true,
                    },
                },
                skillAnimation:true,
                animationColor:"fire",
                mark:true,
                marktext:"蛮",
                init:function(player){
                    if(!player.storage.ssr_zaiqi&&player.countMark('ssr_zaiqi')<=0) {
                        player.addMark('ssr_zaiqi',7);
                        player.markSkill('ssr_zaiqi');
                    }
                    if(player.countMark('ssr_zaiqi')>0) player.markSkill('ssr_zaiqi');
                },
                check:function(event,player){
                    return game.countPlayer(function(current){
                        return get.attitude(player,current)<0.5;
                    })>=1;
                },
                intro:{
                    name:"南蛮入侵",
                    content:"mark",
                },
                audio:"zaiqi",
                trigger:{
                    player:"phaseUseBegin",
                },
                filter:function(event,player){
                    return player.countMark('ssr_zaiqi')>0;
                },
                content:function(){
                    //trigger.cancel();
                    player.addTempSkill('ssr_zaiqi_card');
                    player.removeMark('ssr_zaiqi');
                    player.chooseUseTarget('nanman',true,false);
                },
                ai:{
                    threaten:function(player,target){
                        return 1+player.countMark('ssr_zaiqi')*0.3;
                    },
                    result:{
                        player:function(player){
                            return 1;
                            //if(player.countCards('h')>0) return -1;
                            //return player.countCards('h')-player.hp-player.countCards('h',{type:'trick'})+1;
                        },
                    },
                },
            },
            "ssr_lieren":{
                audio:"lieren",
                derivation:"pyzhuren_diamond",
                group:["ssr_lieren_draw","ssr_lieren_back"],
                enable:"phaseUse",
                check:function (card){
        return 10-get.value(card);
    },
                init:function (player){
                    if(!player.countCards('h',{name:'pyzhuren_diamond'})>0) {
    player.gain(game.createCard('pyzhuren_diamond'));
}
    },
                position:"he",
                filterCard:function (card){
        return get.subtype(card)=='equip1';
    },
                filterTarget:function(card,player,target){
        return player!=target&&!target.hasSkill('ssr_lieren_en');
    },
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                return get.damageEffect(target,player);
            },
                    },
                },
                prepare:"give",
                complexCard:true,
                selectCard:1,
                discard:false,
                toStorage:true,
                visible:true,
                filter:function (event,player){
    return player.countCards('he',{subtype:'equip1'})>0;
    },
                content:function(){    
        'step 0'
        target.addSkill('ssr_lieren_en');
        target.storage.ssr_lieren_en=cards;
    target.markSkill('ssr_lieren_en');
    target.syncStorage('ssr_lieren_en');
    },
                subSkill:{
                    draw:{
                        trigger:{
                            player:["phaseBegin","dying"],
                        },
                        audio:"lieren",
                        priority:-5,
                        forced:true,
                        content:function(){
                "step 0"
                event.num=0;
                event.players=[];
        for(i=0;i<game.players.length;i++){
            if(game.players[i].hasSkill('ssr_lieren_en')){
                event.players.push(game.players[i]);
            }
        }
                "step 1"
                if(event.num>=event.players.length||event.players.length<1) event.finish();
                "step 2"
                player.gain(event.players[event.num].storage.ssr_lieren_en,'draw');
                event.players[event.num].storage.ssr_lieren_en=[];
                event.players[event.num].unmarkSkill('ssr_lieren_en');
                event.players[event.num].removeSkill('ssr_lieren_en');
                event.players[event.num].chooseToRespond(1,{name:'shan'},'烈刃：打出一张【闪】，否则受到来自'+get.translation(player.name)+'的一点伤害').set('check',function(card){
                    return 9-get.value(card);
                });
                "step 3"
                if(!result.bool) {
                    event.players[event.num].damage();
                }
                event.num++;
                "step 4"
                event.goto(1);
            },
                        sub:true,
                    },
                    back:{
                        trigger:{
                            global:"die",
                        },
                        audio:"lieren",
                        forced:true,
    filter:function(event){
        return event.player.hasSkill('ssr_lieren_en');
    },
                        content:function(){
                "step 0"
                player.gain(trigger.player.storage.ssr_lieren_en,'draw');
                trigger.player.storage.ssr_lieren_en=[];
                trigger.player.unmarkSkill('ssr_lieren_en');
                trigger.player.removeSkill('ssr_lieren_en');
            },
                        sub:true,
                    },
                    en:{
                        mark:true,
                        marktext:"刃",
                        sub:true,
                        intro:{
                            content:"cards",
                            onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage);
                game.cardsDiscard(storage);
                delete player.storage.ssr_lieren_en;
            }
        },
                        },
                    },
                },
            },
            "ssr_weilong":{
                mod:{
                    cardUsable:function (card,player,num){     
                        if(card.name=='sha') return num+1;
                    },
                },
                group:"ssr_weilong_hp",
                audio:"longhun",
                enable:["chooseToUse","chooseToRespond"],
                prompt:"危龙：将♦牌当做【杀】，♥牌当做【桃】，♣牌当做【闪】，♠牌当做【酒】使用或打出",
                viewAs:function(cards,player){
        var name=false;
        var nature=null;
        switch(get.suit(cards[0],player)){
            case 'club':name='shan';break;
            case 'diamond':name='sha';nature='fire';break;
            case 'spade':name='jiu';break;
            case 'heart':name='tao';break;
        }
        if(name) return {name:name,nature:nature};
        return null;
    },
                check:function(card){
        var player=_status.event.player;
        if(_status.event.type=='phase'){
            var max=0;
            var name2;
            var list=['sha','tao','jiu'];
            var map={sha:'diamond',tao:'heart',jiu:'spade'}
            for(i=0;i<list.length;i++){
                var name=list[i];
                if(player.countCards('hes',function(card){
                    return (name!='sha'||get.value(card)<5)&&get.suit(card,player)==map[name];
                })>0&&player.getUseValue({name:name,nature:name=='sha'?'fire':null})>0){
                    var temp=get.order({name:name,nature:name=='sha'?'fire':null});
                    if(temp>max){
                        max=temp;
                        name2=map[name];
                    }
                }
            }
            if(name2==get.suit(card,player)) return (name2=='diamond'?(5-get.value(card)):17-get.value(card));
            return 0;
        }
        return 1;
    },
                selectCard:function (){
        return Math.max(1,window.ssr_weilong_maxhp);
    },
                complexCard:true,
                position:"hes",
                filterCard:function(card,player,event){
        if(ui.selected.cards.length) return get.suit(card,player)==get.suit(ui.selected.cards[0],player);
        event=event||_status.event;
        var filter=event._backup.filterCard;
        var name=get.suit(card,player);
        if(name=='club'&&filter({name:'shan',cards:[card]},player,event)) return true;
        if(name=='diamond'&&filter({name:'sha',cards:[card],nature:'fire'},player,event)) return true;
        if(name=='spade'&&filter({name:'jiu',cards:[card]},player,event)) return true;
        if(name=='heart'&&filter({name:'tao',cards:[card]},player,event)) return true;
        return false;
    },
                filter:function(event,player){
        var filter=event.filterCard;
        if(filter({name:'sha',nature:'fire'},player,event)&&player.countCards('hes',{suit:'diamond'})>=player.maxHp) return true;
        if(filter({name:'shan'},player,event)&&player.countCards('hes',{suit:'club'})>=player.maxHp) return true;
        if(filter({name:'tao'},player,event)&&player.countCards('hes',{suit:'heart'})>=player.maxHp) return true;
        if(filter({name:'jiu'},player,event)&&player.countCards('hes',{suit:'spade'})>=player.maxHp) return true;
        return false;
    },
                onuse:function(result,player){
        player.draw(window.ssr_weilong_maxhp);
    },
                ai:{
                    save:true,
                    respondSha:true,
                    respondShan:true,
                    skillTagFilter:function(player,tag){
            var name;
            switch(tag){
                case 'respondSha':name='diamond';break;
                case 'respondShan':name='club';break;
                case 'save':name='double';break;
            }
            if(name=='double') {
                if((player.countCards('hes',{suit:'heart'})<window.ssr_weilong_maxhp)&&(player.countCards('hes',{suit:'spade'})<window.ssr_weilong_maxhp)) return false;
            }else {
                if(player.countCards('hes',{suit:name})<window.ssr_weilong_maxhp) return false;
            }
        },
                    order:function(item,player){
            if(player&&_status.event.type=='phase'){
                var max=0;
                var list=['sha','tao','jiu'];
                var map={sha:'diamond',tao:'heart',jiu:'spade'}
                for(i=0;i<list.length;i++){
                    var name=list[i];
                    if(player.countCards('hes',function(card){
                        return (name!='sha'||get.value(card)<5)&&get.suit(card,player)==map[name];
                    })>0&&player.getUseValue({name:name,nature:name=='sha'?'fire':null})>0){
                        var temp=get.order({name:name,nature:name=='sha'?'fire':null});
                        if(temp>max) max=temp;
                    }
                }
                max/=1.1;
                return max+0.5;
            }
            return 2.5;
        },
                },
                hiddenCard:function(player,name){
        //if(name=='wuxie'&&_status.connectMode&&player.countCards('hes')>=player.maxHp) return true;
        if(name=='jiu') return player.countCards('hes',{suit:'spade'})>=player.maxHp;
        if(name=='tao') return player.countCards('hes',{suit:'heart'})>=player.maxHp;
    },
                subSkill:{
                    hp:{
                        trigger:{
                            target:["useCardToTargeted"],
                            player:["loseAfter","changeHp","enterGame","phaseAfter"],
                            global:["gameDrawAfter","phaseBegin","useCardBefore","dying"],
                        },
                        priority:95,
                        forced:true,
                        silent:true,
                        filter:function(event,player){
        return true;
    },
                        content:function(){
        window.ssr_weilong_hp=player.hp;
        window.ssr_weilong_maxhp=player.maxHp;
    },
                        sub:true,
                        popup:false,
                    },
                },
            },
            "ssr_fabei":{
                shaRelated:true,
                audio:"tieji",
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                filter:function(event,player){
        return event.card.name=='sha';
    },
                logTarget:"target",
                priority:8,
                content:function(){
        "step 0"
        if(!trigger.target.hasSkill('fengyin')){
            trigger.target.addTempSkill('fengyin');
        }
        "step 1"
        var target=trigger.target;
        var num=target.countCards('h','shan');
        target.chooseToDiscard('伐北：请弃置一张基本牌，否则不能使用【闪】抵消此【杀】','he',function(card){
            return get.type(card)=='basic';
        }).set('ai',function(card){
            var num=_status.event.num;
            if(num==0) return 0;
            if(card.name=='shan') return num>1?2:0;
            return 8-get.value(card);
        }).set('num',num);
        "step 2"
        if(!result.bool){
            trigger.getParent().directHit.add(trigger.target);
        }
    },
                ai:{
                    ignoreSkill:true,
                    skillTagFilter:function(player,tag,arg){
            if(tag=='directHit_ai'){
                return get.attitude(player,arg.target)<=0;
            }
            if(!arg||arg.isLink||!arg.card||arg.card.name!='sha') return false;
            if(!arg.target||get.attitude(player,arg.target)>=0) return false;
            if(!arg.skill||!lib.skill[arg.skill]||lib.skill[arg.skill].charlotte||get.is.locked(arg.skill)||!arg.target.getSkills(true,false).contains(arg.skill)) return false;
        },
                    "directHit_ai":true,
                },
            },
            "ssr_zhengnan":{
                audio:"xiangle",
                trigger:{
                    target:"useCardToTargeted",
                },
                forced:true,
                preHidden:true,
                priority:8,
                filter:function(event,player){
        return event.card.name=='sha';
    },
                content:function(){
        "step 0"
        if(!trigger.player.hasSkill('fengyin')){
            trigger.player.addTempSkill('fengyin');
        }
        "step 1"
        var eff=get.effect(player,trigger.card,trigger.player,trigger.player);
        trigger.player.chooseToDiscard('征南：弃置一张基本牌，否则杀对'+get.translation(player.name)+'无效',function(card){
            return get.type(card)=='basic';
        }).set('ai',function(card){
            if(_status.event.eff>0){
                return 10-get.value(card);
            }
            return 0;
        }).set('eff',eff);
        "step 2"
        if(result.bool==false){
            trigger.getParent().excluded.add(player);
        }
    },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(card.name=='sha'&&get.attitude(player,target)<0){
                    if(_status.event.name=='ssr_zhengnan') return;
                    var bs=player.getCards('h',{type:'basic'});
                    if(bs.length<2) return 0;
                    if(player.hasSkill('jiu')||player.hasSkill('tianxianjiu')) return;
                    if(bs.length<=3&&player.countCards('h','sha')<=1){
                        for(i=0;i<bs.length;i++){
                            if(bs[i].name!='sha'&&get.value(bs[i])<7){
                                return [1,0,1,-0.5];
                            }
                        }
                        return 0;
                    }
                    return [1,0,1,-0.5];
                }
            },
                    },
                },
            },
            "ssr_wanlan":{
                audio:"juejing",
                trigger:{
                    player:["dying"],
                },
                filter:function(event,player){
        return !player.hasSkill('ssr_wanlan_used');
    },
                forced:true,
                priority:6,
                content:function(){
        player.draw(2);
        player.addTempSkill('ssr_wanlan_used',{player:'phaseBefore'});
    },
                subSkill:{
                    used:{
                        mark:true,
                        marktext:"挽澜",
                        intro:{
                            content:function (storage,player,skill){
                    var str='<li>你已发动过〖挽澜〗，如今只能殊死一搏了';
                    return str;
                          },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_zhiji":{
                audio:"zhiji",
                trigger:{
                    global:"dying",
                },
                jueixngji:true,
                priority:10,
                skillAnimation:true,
                animationColor:"fire",
                forced:true,
                locked:true,
                filter:function(event,player){
        return player.storage.ssr_zhiji_pack&&player.storage.ssr_zhiji_pack.length>0&&!player.storage.ssr_zhiji.contains(event.player);
    },
                init:function(player){
        if(!player.storage.ssr_zhiji_pack) {
        player.storage.ssr_zhiji_pack=['ssr_zhengnan','ssr_fabei','ssr_wanlan'];
            }
        if(!player.storage.ssr_zhiji) player.storage.ssr_zhiji=[];
    },
                content:function(){
        'step 0'
        if(!player.storage.ssr_zhiji) player.storage.ssr_zhiji=[];
        player.storage.ssr_zhiji.add(trigger.player);
        player.storage.ssr_zhiji.sortBySeat();
        player.markSkill('ssr_zhiji');
        var list=[];
        for(i=0;i<player.storage.ssr_zhiji_pack.length;i++) {
        if(!player.hasSkill(player.storage.ssr_zhiji_pack[i])){
            list.push(player.storage.ssr_zhiji_pack[i]);
        }
        }
        event.list=list;
        'step 1'
        if(event.list.length==1) event._result={control:event.list[0]};
        else player.chooseControl(event.list).set('prompt','志继：选择获得下列技能中的一个').set('ai',function(){
            return event.list.randomGet();
        });
        'step 2'
        if(player.maxHp>1) player.loseMaxHp();
        player.storage.ssr_zhiji_pack.remove(result.control);
        player.addSkill(result.control);
        player.popup(result.control);
        game.log(player,'获得了技能','#g〖'+get.translation(result.control)+'〗');
        if(!player.storage.ssr_zhiji_pack.length>0) player.awakenSkill('ssr_zhiji');
        'step 3'
        window.ssr_weilong_hp=player.hp;
        window.ssr_weilong_maxhp=player.maxHp;
        player.update();
    },
                ai:{
                    threaten:function(player,target){
                            return 3.5-player.maxHp*0.5;
                    },
                },
                intro:{
                    content:"已因$发动过技能",
                },
                derivation:["ssr_zhengnan","ssr_fabei","ssr_wanlan"],
            },
            "ssr_hunzi":{
                audio:"hunzi",
                //unique:true,
                enable:"phaseUse",
                mark:true,
                init:function(player){
                    player.storage.ssr_hunzi=false;
                },
                usable:1,
                filter:function(event,player){
                    if(player.storage.ssr_hunzi) return false;
                    var num=game.countPlayer(function(current){
                            return true;
                        });
                    return num>2;
                },
                filterTarget:function(card,player,target){
                    var mode=get.mode();
                    return target!=player;
                },
                content:function(){
                    'step 0'
                    target.chooseControl('失去体力','响应决战',function(){
                        if(get.attitude(target,player)>=0||Math.random()*target.maxHp>target.hp||Math.random()<0.25) {
                            return '失去体力';
                        }else {
                            return '响应决战';
                        }
                    }).set('prompt','魂姿：请选择响应'+get.translation(player.name)+'的决战，或者失去一点体力');
                    'step 1'
                    if(result.control=='失去体力') {
                        target.loseHp();
                        player.say('你个怂鬼。');
                        event.finish();
                    }
                    'step 2'
                    player.logSkill('ssr_hunzi_log');
                    'step 3'
                    if(game.me==player||game.me==target) {
                        player.storage.ssr_hunzi_me='none';
                    }else {
                        var tme=game.me;
                        player.storage.ssr_hunzi_me=game.me;
                        if(_status.event.isMine()){
                            if(!ui.auto.classList.contains('hidden')){
                                setTimeout(function(){
                                    ui.click.auto();
                                    setTimeout(function(){
                                        ui.click.auto();
                                        game.swapPlayer(player);
                                    },500);
                                });
                            }
                        } else{
                            game.swapPlayer(player);
                        }
                        /*var player=lib.playerOL[this.id];
                        player.isAuto=true;
                        player.setNickname(player.nickname+' - 托管');
                        game.broadcast(function(player){
                            player.setNickname(player.nickname+' - 托管');
                        },player);*/
                        game.addGlobalSkill('autoswap');
                        game.notMe=true;
                        if(!_status.auto) ui.click.auto();
                        if(window.decadeUI&&typeof txcsanm!='undefined') {
                            var txonopen=localStorage.getItem("txcsHoldchoose");
                            if(txonopen&&txonopen!='close'&&txcsanm.bg_id) txcsanm.hstop(txcsanm.bg_id);
                        }
                    }
                    var themlive=[];
                    var themdead=[];
                    player.awakenSkill('ssr_hunzi');
                    player.storage.ssr_hunzi=true;
                    for(i=0;i<game.players.length;i++) {
                        if(game.players[i]!=player&&game.players[i]!=target) {
                            themlive.push(game.players[i]);
                        }
                    }
                    for(i=0;i<game.dead.length;i++) {
                        themdead.push(game.dead[i]);
                    }
                    for(i=0;i<themlive.length;i++) {
                        game.removePlayer(themlive[i]);
                    }
                    for(i=0;i<themdead.length;i++) {
                        game.removePlayer(themdead[i]);
                    }
                    player.storage.ssr_hunzi_live=themlive;
                    player.storage.ssr_hunzi_dead=themdead;
                    if(!target.hasSkill('ssr_hunzi_ai')&&(get.attitude(target,player)>0||get.attitude(player,target)>0)) {
                        window.ssr_hunzi_ai_eff1=[];
                        window.ssr_hunzi_ai_eff2=[];
                        for(i=0;i<lib.inpile.length;i++){
                            var names=lib.inpile[i];
                            window.ssr_hunzi_ai_eff1.push(get.effect(target,{name:names},target));
                            window.ssr_hunzi_ai_eff2.push(get.effect(target,{name:names},player,target));
                        }
                        target.addTempSkill('ssr_hunzi_ai',{player:'die'});
                    }
                    player.addSkill('ssr_hunzi_die');
                    player.storage.ssr_hunzi_die=target;
                },
                ai:{
                    expose:0.1,
                    order:13,
                    result:{
                        target:function(player,target){
                            if(get.attitude(player,target)>=0) return 0;
                            return 0-player.hp*2-player.countCards('he')+target.hp*2+target.countCards('he');
                        },
                    },
                },
                intro:{
                    content:"limited",
                },
                subSkill:{
                    log:{
                        limited:true,
                        skillAnimation:true,
                        animationColor:"green",
                        sub:true,
                    },
                    ai:{
                        ai:{
                            effect:{
                                player:function(card,player,target){
                                    for(i=0;i<lib.inpile.length;i++){
                                        var name=lib.inpile[i];
                                        if(card.name==name) {
                                            //alert(card.name);
                                            //alert(window.ssr_hunzi_ai_eff1[i]);
                                            return [0, 0, 1, -window.ssr_hunzi_ai_eff1[i]];
                                        }
                                    }
                                },
                                target:function(card,player,target,current){
                                    if(target!=player&&get.attitude(player,target)>=0) {
                                        if(card.name=='jiu'&&player.countCards('hs',{name:'sha'})>0) {
                                            return [0, 0, 1, Infinity];
                                        }
                                        if(card.name=='sha') {
                                            return [0, 0, 1, Infinity];
                                        }
                                    for(i=0;i<lib.inpile.length;i++){
                                        var name=lib.inpile[i];
                                        if(card.name==name) {
                                            //alert(card.name);
                                            //alert(window.ssr_hunzi_ai_eff2[i]);
                                            return [0, 0, 1, -window.ssr_hunzi_ai_eff2[i]];
                                        }
                                    }
                                    }
                                },
                            },
                        },
                        sub:true,
                    },
                    die:{
                        trigger:{
                            global:"dieBefore",
                        },
                        audio:'pinghe',
                        priority:Infinity,
                        forced:true,
                        forceDie:true,
                        skillAnimation:true,
                        animationColor:"fire",
                        filter:function(event,player){
                            return event.player==player||event.player==player.storage.ssr_hunzi_die;
                        },
                        content:function(){
                            'step 0'
                            var themlive=player.storage.ssr_hunzi_live;
                            var themdead=player.storage.ssr_hunzi_dead;
                            for(i=themdead.length-1;i>=0;i--) {
                                game.restorePlayer(themdead[i]);
                                game.players.remove(themdead[i]);
                                game.dead.push(themdead[i]);
                            }
                            for(i=themlive.length-1;i>=0;i--) {
                                game.restorePlayer(themlive[i]);
                            }
                            'step 1'
                            player.removeSkill('ssr_hunzi_die');
                            if(player.storage.ssr_hunzi_me&&player.storage.ssr_hunzi_me!='none') {
                                var target=player.storage.ssr_hunzi_me;
                                if(_status.event.isMine()){
                                    if(!ui.auto.classList.contains('hidden')){
                                        setTimeout(function(){
                                            ui.click.auto();
                                            setTimeout(function(){
                                                ui.click.auto();
                                                game.swapPlayer(target);
                                            },500);
                                        });
                                    }
                                } else{
                                    game.swapPlayer(target);
                                }
                                if(!game.notMe) game.swapPlayerAuto(player._trueMe)
                                else delete game.notMe;
                                if(_status.auto) ui.click.auto();
                                delete player._trueMe;
                                if(window.decadeUI&&typeof txcsanm!='undefined') {
                                    var txcsshow=localStorage.getItem("txcsHoldchoose");
                                    if(txcsshow&&txcsshow!='close') {
                                        var item = txcsshow;
                                        //var oldHchoose=localStorage.getItem("txcsHoldchoose");
                                        //var directHopen=localStorage.getItem("txcsHdirectopen");
                                        localStorage.setItem("txcsHoldchoose",item);
                                        if (!item || item == 'close') {
                                            if (txcsanm.bg_id) txcsanm.hstop(txcsanm.bg_id);
                                        } else {
                                            txcsanm.bg_testing = [];
                                            var obj = txcsanm.dybg[item];
                                            if (!obj) {
                                                alert("动态背景-" + item + "-没有预定义");
                                                return;
                                            }
                                            obj.loop = true;
                                            var fl = [obj];
                                            var name = obj.name2 || name;
                                            if (obj.group && txcsanm.find(obj.group)) fl.add(txcsanm.find(obj.group));
                                            var pos = txcsanm.ff(obj.position, "", true);
                                            if (!pos) {
                                                game.saveExtensionConfig("特效测试", "txcs_dynamicbg", "close");
                                                return;
                                            }
                                            if (txcsanm.bg_id) {
                                                txcsanm.hstop(txcsanm.bg_id);
                                                delete txcsanm.bg_id;
                                            }
                                            txcsanm.load(fl, function() {
                                                txcsanm.play(obj, obj.args, pos);
                                            });
                                        }
                                    }
                                }
                            }
                        },
                        logTarget:"source",
                        sub:true,
                    },
                    leave:{
                        trigger:{
                            player:["phaseBefore","gainBefore"],
                        },
                        forced:true,
                        silent:true,
                        content:function(){
                trigger.cancel();
            },
                        init:function(player,skill){
                player.addSkillBlocker(skill);
            },
                        onremove:function(player,skill){
                player.removeSkillBlocker(skill);
            },
                        charlotte:true,
                        locked:true,
                        skillBlocker:function(skill,player){
                return skill!='ssr_hunzi_leave'&&skill!='diaohulishan'&&!lib.skill[skill].charlotte;
            },
                        sub:true,
                        popup:false,
                    },
                },
            },
            "ssr_jiang":{
                subSkill:{
                    forbid:{},
                },
                shaRelated:true,
                audio:"rejiang",
                preHidden:true,
                trigger:{
                    player:"useCardToPlayered",
                    target:"useCardToTargeted",
                },
                filter:function(event,player){
                    if(player.hasSkill('ssr_jiang_forbid')) return false;
                    if(!(event.card.name=='juedou'||event.card.name=='sha')) return false;
                    return player==event.target||event.getParent().triggeredTargets3.length==1;
                },
                frequent:true,
                priority:3,
                content:function(){
                    player.draw();
                    player.addTempSkill('ssr_jiang_forbid',{player:['phaseBefore','phaseEnd']});
                },
                ai:{
                    effect:{
                        target:function(card,player,target){
                            if(card.name=='sha') return [1,0.6];
                        },
                        player:function(card,player,target){
                            if(card.name=='sha') return [1,1];
                        },
                    },
                },
            },
            "ssr_zhiba":{
                audio:"yinghun",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                filter:function(event,player){
        if(!player.hasZhuSkill('ssr_zhiba')) return false;
        return player.getDamagedHp()>0&&game.countPlayer(function(current){
                                return player!=current&&current.group=='wu';
                        })>0;
    },
                unique:true,
                zhuSkill:true,
                direct:true,
                preHidden:true,
                content:function(){
        "step 0"
        player.chooseTarget(get.prompt2('ssr_zhiba'),function(card,player,target){
            return player!=target&&target.group=='wu';
        }).set('ai',function(target){
            var player=_status.event.player;
            if(get.attitude(_status.event.player,target)>0){
                return 10+get.attitude(_status.event.player,target);
            }
            return 1;
        }).setHiddenSkill(event.name);
        "step 1"
        if(result.bool){
            //event.num=player.getDamagedHp();
            event.num=2;
            player.logSkill(event.name,result.targets);
            event.target=result.targets[0];
            if(event.num==1){
                event.directcontrol=true;
            }
            else{
                var str1='摸'+get.cnNumber(event.num,true)+'弃一';
                var str2='摸一弃'+get.cnNumber(event.num,true);
                player.chooseControl(str1,str2,function(event,player){
                    return _status.event.choice;
                }).set('choice',get.attitude(player,event.target)>0?str1:str2);
                event.str=str1;
            }
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.directcontrol||result.control==event.str){
            event.target.draw(event.num);
            event.target.chooseToDiscard(true,'he');
        }
        else{
            event.target.draw();
            event.target.chooseToDiscard(event.num,true,'he');
        }
    },
                ai:{
                    threaten:function(player,target){
            if(target.hp==target.maxHp) return 0.5;
            if(target.hp==1) return 2;
            if(target.hp==2) return 1.5;
            return 0.5;
        },
                    maixie:true,
                },
            },
            "ssr_hanzhan":{
                locked:true,
                audio:"hanzhan",
                trigger:{
                    player:"compare",
                    target:"compare",
                },
                filter:function(event){
        return !event.iwhile;
    },
                forced:true,
                preHidden:true,
                content:function(){
        'step 0'
            player.logSkill('ssr_hanzhan');
                game.log(player,'拼点牌点数+2');
                if(player==trigger.player){
                    trigger.num1+=2;
                    if(trigger.num1>13) trigger.num1=13;
                    trigger.card1.num=trigger.num1;

                }
                else{
                    trigger.num2+=2;
                    if(trigger.num2>13) trigger.num2=13;
                    trigger.card2.num=trigger.num2;
                }    },
            },
            "ssr_tianyi":{
                audio:"tianyi",
                enable:"phaseUse",
                usable:2,
                filterTarget:function(card,player,target){
        return player.canCompare(target);
    },
                filter:function(event,player){
        return player.countCards('h')>0;
    },
                content:function(){
        "step 0"
        player.chooseToCompare(target).callback=lib.skill.ssr_tianyi.callback;
        "step 1"
        if(result.bool){
            target.damage(player);
        } else if(result.tie){

        } else{
            player.damage(target);
        }
    },
                ai:{
                    order:function(name,player){
            return 9;
        },
                    result:{
                        player:function(player){
                var num=player.countCards('h');
                return num-player.hp+1;
            },
                        target:function(player,target){
                var num=target.countCards('h');
                if(num==1) return -1;
                if(num==2) return -0.7;
                return -0.5;
            },
                    },
                    threaten:1.2,
                },
            },
            "ssr_buqu":{
    locked:true,
    forced:true,
    audio:'buqu',
    preHidden:true,
    trigger:{
        player:["damageBegin","loseHpBegin"],
    },
    priority:-29,
    mod:{
        selectTarget:function (card,player,range){
            if(range[1]==-1||!player.countMark('ssr_buqu')>0||game.countPlayer(function(current){
                return current!=player;
            })<=1) return;
            if(card.name=='sha') range[1]+=1;
        },
    },
    filter:function(event,player){
        return event.num>0&&player.countMark('ssr_buqu')>0;
    },
    content:function(){
        if(trigger.num>player.countMark('ssr_buqu')) {
            var num=player.countMark('ssr_buqu');
        }else {
            var num=trigger.num;
        }
        if(trigger.name=='damage') {
           if(trigger.animate!==false){
              player.$damage(trigger.source);
                 game.broadcastAll(function(nature,player){
                    if(lib.config.animation&&!lib.config.low_performance){
                        if(nature=='fire'){
                           player.$fire();
                        }
                        else if(nature=='thunder'){
                           player.$thunder();
                        }
                     }
                  },trigger.nature,player);
               player.$damagepop(-num,trigger.nature);
           }
        }
        player.removeMark('ssr_buqu',num);
        trigger.num-=num;
    },
    init:function(player){
                    if(!player.storage.ssr_buqu&&player.countMark('ssr_buqu')<=0) {
                        player.addMark('ssr_buqu',12);
                        player.markSkill('ssr_buqu');
                    }
                    if(player.countMark('ssr_buqu')>0) player.markSkill('ssr_buqu');
    },
        ai:{
            "maixie_defend":true,
        },
    mark:true,
    marktext:"创",
    intro:{
        name:"破釜沉舟",
        content:"mark",
    },
            },
            "ssr_shensu":{
                group:["ssr_shensu_dis","ssr_shensu_dam"],
                audio:"shensu1",
                trigger:{
                    player:["phaseDrawBegin","phaseUseBegin"],
                },
                preHidden:true,
                direct:true,
                priority:50,
                content:function(){
        'step 0'
        var name='未知';
        if(trigger.name=='phaseDraw') event.phasename='摸牌';
        if(trigger.name=='phaseUse') event.phasename='出牌';
        player.chooseControl('确定','取消',function(){
            var good=game.countPlayer(function(current){
                return get.attitude(player,current)>=0;
            });
            var bad=game.countPlayer(function(current){
                return get.attitude(player,current)<0;
            });
            //alert(trigger.name=='phaseDraw'&&(player.hp>2||player.countCards('h')>4||good>bad));
            if(trigger.name=='phaseDraw'&&(player.hp>2||player.countCards('h')>4||good>bad)) return '确定';
            if(trigger.name=='phaseUse'&&(!(player.getDamagedHp()>0&&player.countCards('h',{name:'tao'})>0||player.needsToDiscard()>0)||good>bad)) return '确定';
            return '取消';
        }).set('prompt','神速·阳：是否跳过 '+event.phasename+'阶段 并获得三枚“速”标记？');
        'step 1'
        if(result.control=='确定') {
            player.logSkill('ssr_shensu');
            game.log(player,'跳过了'+event.phasename+'阶段');
            trigger.cancel();
            player.addMark('ssr_shensu',3);
        }
    },
                mark:false,
                marktext:"速",
                intro:{
                    name:"兵贵神速",
                    content:"mark",
                },
                subSkill:{
                    dis:{
                        audio:"shensu1",
                        trigger:{
                            player:["phaseJudgeBegin","phaseDiscardBegin"],
                        },
                        filter:function(event,player){
               if(event.name=='phaseJudge'&&!player.countCards('j')>0) return false;
               if(event.name=='phaseDiscard'&&!player.needsToDiscard()) return false;
               return player.countMark('ssr_shensu')>=2;
            },
                        priority:50,
                        direct:true,
                        preHidden:true,
                        content:function(){
        'step 0'
        var name='未知';
        if(trigger.name=='phaseJudge') event.phasename='判定';
        if(trigger.name=='phaseDiscard') event.phasename='弃牌';
        player.chooseControl('确定','取消',function(){
            if(player.countMark('ssr_shensu')>=12) return '确定';
            if(trigger.name=='phaseJudge'&&(player.countCards('j')>1||player.countCards('h',{type:'trick'})+player.countCards('h',{type:'delay'})+player.countCards('h',{type:'equip'})>2)) return '确定';
            if(trigger.name=='phaseDiscard'&&player.needsToDiscard()>1) return '确定';
            return '取消';
        }).set('prompt','神速·阴：是否移除两枚“速”标记并跳过 '+event.phasename+'阶段 ？');
        'step 1'
        if(result.control=='确定') {
            player.logSkill('ssr_shensu');
            player.removeMark('ssr_shensu',2);
            game.log(player,'跳过了'+event.phasename+'阶段');
            trigger.cancel();
        }
            },
                        sub:true,
                    },
                    dam:{
                        audio:"shensu1",
                        trigger:{
                            player:"damageEnd",
                        },
                        filter:function(event,player){
                return event.num>0;
            },
                        frequent:true,
                        content:function(){
                player.addMark('ssr_shensu',3*trigger.num);
            },
                        ai:{
                            maixie:true,
                            "maixie_hp":true,
                        },
                        sub:true,
                    },
                },
            },
            "ssr_hubu":{
                audio:"shebian",
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                preHidden:true,
                filter:function(event,player){
       return player.countMark('ssr_shensu')>=2;
    },
                priority:10,
                content:function(){
                    'step 0'
                    player.chooseTarget('是否对一名其他角色发动〖虎步〗？',get.prompt2('ssr_hubu'),1,function(card,player,target){
                        return player!=target;
                    },function(target){
                        return -get.attitude(player,target);
                    });
                    'step 1'
                    if(result.bool) {
                        event.target=result.targets[0];
                        event.sum=[];
                        for(i=1;i*2<=player.countMark('ssr_shensu')&&i<=3;i++) {
                            event.sum.push(get.cnNumber(i));
                        }
                        player.chooseControl(event.sum,'取消',function(){
                            if(event.target.countCards('e',{name:'tengjia'})>0&&!player.countCards('e',{name:'qinggang'})+player.countCards('e',{name:'zhuque'})>0) return '取消';
                            return get.cnNumber(Math.min(event.target.hp+1,3));
                        }).set('prompt','请选择对'+get.translation(event.target)+'使用的【杀】的张数？');
                    }else {
                        event.finish();
                    }
                    'step 2'
                    if(result.control!='取消') {
                        event.sum=['零'].concat(event.sum);
                        for(a=0;event.sum[a]!=result.control&&a<3&&player.countMark('ssr_shensu')>=2;a++) {
                            player.removeMark('ssr_shensu',2);
                            player.useCard({name:'sha'},event.target);
                            player.update();
                        }
                    }
                },
            },
            "ssr_jushou":{
                group:"ssr_jushou_baiyin",
                audio:"jushou",
                marktext:"盾",
                unique:true,
                trigger:{
                    player:["enterGame","phaseBegin","phaseAfter"],
                    global:"gameDrawAfter",
                },
                priority:-125,
                forced:true,
                filter:function(event,player){
                    return !player.storage.ssr_jushou; 
                },
                content:function(){
                    'step 0'
                    event.num=4;
                    event.cardpile=[];
                    'step 1'
                    event.num--;
                    "step 2"
                    event.card=get.cardPile(function(card){
                        for(var a=0;a<event.cardpile.length;a++) {
                            if(card==event.cardpile[a]) return false;
                            }
                        if(get.type(card)=='basic') return true;
                        if(get.name(card)=='wuxie') return true;
                        return false;
                    },'cardPile');
                    if(!event.card){
                        if(event.cardpile.length>0) {
                            event.goto(4);
                        }else {
                            event.finish();
                            return;
                        }
                    }
                    player.showCards([event.card]);
                    "step 3"
                    event.cardpile.push(event.card);
                    if(event.num>0) event.goto(1);
                    'step 4'
                    player.chooseControl('ok').set('dialog',['固若金汤',event.cardpile]);
                    'step 5'
                    //player.storage.ssr_jushou=game.cardsGotoSpecial(event.cardpile).cards;
                    player.storage.ssr_jushou=game.cardsGotoSpecial(event.cardpile).cards;
                    player.markSkill('ssr_jushou');
                },
                intro:{
                    name:"固若金汤",
                    /*onunmark:function(storage,player){
                        if(storage&&storage.length){
                            player.$throw(storage,1000);
                            game.cardsDiscard(storage);
                            game.log(storage,'被置入了弃牌堆');
                            storage.length=0;
                        }
                    },*/
                    mark:function(dialog,content,player){
                        if(content&&content.length){
                                dialog.addAuto(content);
                        }
                    },
                    content:function(content,player){
                        if(content&&content.length){
                            return get.translation(content);
                        }
                    },
                },
                ai:{
                    combo:"ssr_jiewei",
                },
                subSkill:{
                    baiyin:{trigger:{player:'damageBegin4'},
                forced:true,
                audio:'jushou',
                filter:function(event,player){
                    if(event.num<=1) return false;
                    return player.storage.ssr_jushou&&player.storage.ssr_jushou.length>0;
                },
                priority:-1,
                content:function(){
                    'step 0'
                    event.defend=trigger.num-1;
                    //trigger.num=1;
                    event.cards=[];
                    var st=player.storage.ssr_jushou;
                    for(i=0;i<st.length;i++) {
                        if(!event.cards[st[i].name]) {
                            event.cards[st[i].name]=1;
                        }else {
                            event.cards[st[i].name]++;
                        }
                    }
                    'step 1'
                    player.chooseCardButton(player.storage.ssr_jushou,'抵挡：选择弃置的“盾”并将伤害降至一',1).set('filterButton',function(button){
                        return true;
                    }).ai=function(button){
                        var val=get.value(button.link);
                        var val2=val/event.cards[button.name];
                        var val3=event.defend+6.5-val2-player.hp;
                        //alert(button.link.name+' | '+val+' | '+val3);
                        return val3;
                    }
                    'step 2'
                    if(result.bool) {
                        //trigger.cancel();
                        trigger.num=1;
                        player.storage.ssr_jushou.remove(result.links[0]);
                        game.log(player,'的“盾”抵挡了',get.cnNumber(event.defend),'点伤害');
                        if(!player.storage.ssr_jushou.length>0) {
                            player.unmarkSkill('ssr_jushou');
                        }else {
                            player.markSkill('ssr_jushou');
                        }
                    }
                },
                ai:{
                    "maixie_defend":true,
                    threaten:0.9,
                    skillTagFilter:function(player,tag,arg){
                        if(arg&&arg.player){
                            if(arg.player.hasSkillTag('jueqing',false,player)) return false;
                        }
                    },
                },
                    },
                },
            },
            "ssr_jiewei":{
                audio:"jiewei",
                enable:"chooseToUse",
                filter:function(event,player){
                    return event.type!='wuxie'&&event.type!='respondShan'&&player.countCards('hes')>0;
                },
                mod:{
                    cardUsable:function (card,player,num){
                        if(!card.isCard) return Infinity;
                    },
                },
                chooseButton:{
                    dialog:function(event,player){
                    var list=[];
                    for(i=0;i<lib.inpile.length;i++){
                        var name=lib.inpile[i];
                        if(!player.storage.ssr_jushou) continue;
                            var hascard=0;
                            for(q=0;q<player.storage.ssr_jushou.length;q++) {
                                if(player.storage.ssr_jushou[q].name==name) hascard++;
                            }
                            for(q=0;q<player.storage.ssr_jiewei.length;q++) {
                                if(player.storage.ssr_jiewei[q]==name) hascard--;
                            }
                            if(hascard<1) continue;
                            if(name=='sha'){
                            list.push(['基本','','sha']);
                            for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
                        }
                        else if(get.type(name)=='basic') list.push(['基本','',name]);
                        else if(name=='wuxie') list.push(['锦囊','',name]);
                    }
                    if(list.length==0){
                        return ui.create.dialog('〖解围〗已无可用牌');
                    }
                    return ui.create.dialog('突出重围',[list,'vcard']);
                },
                    filter:function(button,player){
                        if(!player.storage.ssr_jushou) return false;
                        return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
                    },
                    check:function(button){
                        var player=_status.event.player;
                        if(player.countCards('hs',button.link[2])>0) return 0;
                        var effect=player.getUseValue(button.link[2]);
                        if(effect>0) return effect;
                        return 0;
                    },
                    backup:function(links,player){
                        return {
                            filterCard:true,
                            audio:'jiewei',
                            selectCard:1,
                            popname:true,
                            check:function(card){
                                return 8-get.value(card);
                            },
                            position:'hes',
                            viewAs:{name:links[0][2],nature:links[0][3]},
                            onuse:function(result,player){
                                player.storage.ssr_jiewei.push(result.card.name);
                            },
                        }
                    },
                    prompt:function(links,player){
                        return '将一张牌当做【'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'】使用';
                    },
                },
                ai:{
                    save:true,
                    order:4,
                    result:{
                        player:function(player){
                            return 2;
                        },
                    },
                    threaten:1.9,
                },
                group:["ssr_jiewei_use","ssr_jiewei_shan","ssr_jiewei_wuxie","ssr_jiewei_cls"],
                subSkill:{
                    cls:{
                trigger:{
                    player:["enterGame","phaseBegin","phaseAfter"],
                    global:["gameDrawAfter"],
                },
                priority:-6,
                silent:true,
                content:function(){
                    player.storage.ssr_jiewei=[];
                },
                    },
                    use:{
                        trigger:{
                            player:["useCard"],
                        },
                        priority:-11,
                        silent:true,
                        forced:true,
                        filter:function(event,player){
                            return !event.card.isCard;
                        },
                        content:function(){
                            'step 0'
                            game.delayx();
                            'step 1'
                            if(trigger.addCount!==false){
                                trigger.addCount=false;
                                if(trigger.card.name=='sha') player.getStat().card.sha--;
                                if(trigger.card.name=='jiu') player.getStat().card.jiu--;
                            }
                        },
                    },
                    wuxie:{
                audio:'jiewei',
                enable:'chooseToUse',
                prompt:'将一张牌当做【无懈可击】使用',
                filter:function(event,player){
                if(!player.storage.ssr_jushou) return false;
                var hascard=0;
                for(i=0;i<player.storage.ssr_jushou.length;i++) {
                    if(player.storage.ssr_jushou[i].name=='wuxie') hascard++;
                }
                for(i=0;i<player.storage.ssr_jiewei.length;i++) {
                    if(player.storage.ssr_jiewei[i]=='wuxie') hascard--;
                }
                    return player.countCards('hes')&&hascard>0;
                },
                viewAsFilter:function(player){
                if(!player.storage.ssr_jushou) return false;
                var hascard=0;
                for(i=0;i<player.storage.ssr_jushou.length;i++) {
                    if(player.storage.ssr_jushou[i].name=='wuxie') hascard++;
                }
                for(i=0;i<player.storage.ssr_jiewei.length;i++) {
                    if(player.storage.ssr_jiewei[i]=='wuxie') hascard--;
                }
                    return player.countCards('hes')&&hascard>0;
                },
                onuse:function(result,player){
                    player.storage.ssr_jiewei.push('wuxie');
                },
                filterCard:true,
                position:'hes',
                selectCard:1,
                viewAs:{name:'wuxie'},
                check:function(card){
                            return 8-get.value(card);
                },
                    },
                    shan:{
                        audio:"taoluan",
                        prompt:"将一张牌当做【闪】使用",
                        enable:"chooseToUse",
                        filter:function(event,player){
                if(!player.storage.ssr_jushou) return false;
                var hascard=0;
                for(i=0;i<player.storage.ssr_jushou.length;i++) {
                    if(player.storage.ssr_jushou[i].name=='shan') hascard++;
                }
                for(i=0;i<player.storage.ssr_jiewei.length;i++) {
                    if(player.storage.ssr_jiewei[i]=='shan') hascard--;
                }
                    return player.countCards('hes')&&hascard>0;
                },
                        onuse:function(result,player){
                            player.storage.ssr_jiewei.push('shan');
                        },
                        filterCard:true,
                        position:"hes",
                        selectCard:1,
                        viewAs:{
                            name:"shan",
                        },
                        check:function(card){
                            return 8-get.value(card);
                },
                        ai:{
                            skillTagFilter:function(player){
                var hascard=0;
                for(i=0;i<player.storage.ssr_jushou.length;i++) {
                    if(player.storage.ssr_jushou[i].name=='shan') hascard++;
                }
                for(i=0;i<player.storage.ssr_jiewei.length;i++) {
                    if(player.storage.ssr_jiewei[i]=='shan') hascard--;
                }
                    return player.countCards('hes')&&hascard>0;
                    },
                            threaten:1.5,
                            respondShan:true,
                        },
                    },
                },
            },
            "ssr_tuntian":{
                audio:"tuntian",
                usable:1,
                group:["ssr_tuntian_gain"],
                marktext:"田",
                intro:{
                    name:"养精蓄锐",
                    content:function (storage,player,skill){
                        var suits=['spade','club','heart','diamond'];
                        var str='<li>你拥有的“田”：';
                        var num=0;
                        for(i=0;i<suits.length;i++) {
                            if(storage.contains(suits[i])) {
                                if(num>0) str+='、';
                                str+=get.translation(suits[i]);
                                num++;
                            }
                        }
                        return str;
                    },
                },
                complexCard:true,
                enable:"phaseUse",
                position:"he",
                selectCard:2,
                filterCard:function(card,player){
                    //if(get.type(card)!='basic') return false;
                var marks=player.storage.ssr_tuntian;
        if(marks&&marks.length>0) {
            for(i=0;i<marks.length;i++) {
              if(marks[i]==get.suit(card)) return false;
            }
        }
        if(ui.selected.cards.length){
            if(get.suit(card)!=get.suit(ui.selected.cards[0])) return false;
        }
        var cards=player.getCards('he');
        for(var i=0;i<cards.length;i++){
            if(card!=cards[i]){
                if(get.suit(card)==get.suit(cards[i])) return true;
            }
        }
        return false;
    },
                filter:function (event,player){
        if (player.storage.ssr_tuntian&&player.storage.ssr_tuntian.length>=4) return false;
        var marks=player.storage.ssr_tuntian;
        var suits=['spade','club','diamond','heart'];
        if(marks&&marks.length>0) {
            for(i=0;i<suits.length;i++) {
                var blank=1;
                for(j=0;j<marks.length;j++) {
                    if(marks[j]==suits[i]) blank=0;
                }
                if(blank==1&&player.countCards('he',{suit:suits[i]})>=2) return true;
            }
            return false;
        }
        for(i=0;i<suits.length;i++) {
            if(player.countCards('he',{suit:suits[i]})>=2) return true;
        }
        return false;
    },
                check:function (card){
        return 7-get.value(card);
    },
                discard:false,
                lose:false,
                content:function (){
        player.discard(cards);
        if(!player.storage.ssr_tuntian) player.storage.ssr_tuntian=[];
        player.storage.ssr_tuntian.push(cards[0].suit);
        /*player.lose(cards,ui.special,'toStorage');
        if(!player.storage.ssr_tuntian) player.storage.ssr_tuntian=[];
        player.storage.ssr_tuntian.addArray(cards);*/
        player.markSkill('ssr_tuntian');
    },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                },
                subSkill:{
                    gain:{
                        audio:"tuntian",
                        trigger:{
                            player:["damageEnd","phaseEnd"],
                        },
                        priority:2,
                        frequent:true,
                        filter:function(event,player){
        return (player.storage.ssr_tuntian&&player.storage.ssr_tuntian.length>0&&(event.name!='damage'||event.num>0));
    },
                        content:function(){
        "step 0"
        event.count=trigger.name=='damage'?trigger.num:1;
        "step 1"
        event.count--;
        event.cards=get.cards(player.storage.ssr_tuntian.length);
        "step 2"
        if(event.cards.length>1){
            player.chooseCardButton('屯田：选择一张牌并交给一名角色',true,event.cards,1).set('ai',function(button){
                return get.value(button);
            });
        }
        else if(event.cards.length==1){
            event._result={links:event.cards.slice(0),bool:true};
        }
        else{
            event.goto(5);
        }
        "step 3"
        if(result.bool){
            for(i=0;i<result.links.length;i++){
                event.cards.remove(result.links[i]);
            }
            event.togive=result.links.slice(0);
            player.chooseTarget(get.prompt2('ssr_tuntian'),'将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
                var att=get.attitude(_status.event.player,target);
                if(_status.event.enemy){
                    return -att;
                }
                else if(att>0){
                    return att/(1+target.countCards('h'));
                }
                else{
                    return att/100;
                }
            }).set('enemy',get.value(event.togive[0],player,'raw')<0);
        }
        "step 4"
        if(result.targets.length){
            result.targets[0].gain(event.togive,'draw');
            player.line(result.targets[0],'green');
            game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
            event.goto(5);
        }
        "step 5"
        if(event.count>0) player.chooseBool(get.prompt2(event.name)).set('frequentSkill',event.name);
        else event.finish();
        "step 6"
        if(result.bool){
            player.logSkill(event.name);
            event.goto(1);
        }
    },
                        ai:{
                            maixie:true,
                            "maixie_hp":true,
                            effect:{
                                target:function(card,player,target){
                        if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                        if(get.tag(card,'damage')) return [1,0.55];
                    },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "ssr_zaoxian":{
                skillAnimation:true,
                animationColor:"thunder",
                audio:"zaoxian",
                unique:true,
                juexingji:true,
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                priority:15,
                filter:function(event,player){
        if(player.storage.ssr_tuntian) return player.storage.ssr_tuntian.length>=4&&!player.storage.ssr_zaoxian;
    },
                derivation:"ssr_jixi",
                content:function(){
        player.loseMaxHp();
        player.addSkill('ssr_jixi');
        //player.gain(player.storage.ssr_tuntian,'draw');
        //player.storage.ssr_tuntian=[];
        player.unmarkSkill('ssr_tuntian');
        player.storage.ssr_zaoxian=true;
        player.awakenSkill('ssr_zaoxian');
    },
            },
            "ssr_jixi":{
                audio:"jixi",
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                filter:function(event,player){
        return true;
    },
                priority:5,
                content:function(){
        "step 0"
        var check;
        var i,num=game.countPlayer(function(current){
            return current!=player&&current.countCards('he')&&get.attitude(player,current)<=0&&get.distance(player,current)<=2;
        });
        check=(num>=1);
        player.chooseTarget(get.prompt('ssr_jixi'),'获得与你距离不大于二的一名其他角色的一张牌',1,function(card,player,target){
            return target.countCards('he')>0&&player!=target&&get.distance(player,target)<=2;
        },function(target){
            if(!_status.event.aicheck) return 0;
            var att=get.attitude(_status.event.player,target);
            if(target.hasSkill('tuntian')) return att/10;
            return 1-att;
        }).set('aicheck',check);
        "step 1"
        if(result.bool){
            player.logSkill('ssr_jixi',result.targets);
            player.gainMultiple(result.targets,'he');
        }
        else{
            event.finish();
        }
        "step 2"
        game.delay();
    },
                ai:{
                    threaten:1.7,
                    expose:0.3,
                },
            },
            "ssr_hengzheng":{
                audio:"hengzheng",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                filter:function(event,player){
        return !event.numFixed;
    },
                derivation:"ssr_taofa",
                priority:-5,
                forced:true,
                content:function(){
        "step 0"
        event.cards=get.cards(1);
        event.draw=trigger.num;
        trigger.changeToZero();
        var targets=game.filterPlayer();
        targets.remove(player);
        targets.sort(lib.sort.seat);
        event.targets=targets;
        event.num=0;
        player.line(targets,'green');
        "step 1"
        if(event.num<event.targets.length){
            if(event.targets[event.num].countCards('he')>0){
                player.choosePlayerCard(event.targets[event.num],'he',true);
                //player.gainPlayerCard(event.targets[num],'he',true);
            }else {
            event.num++;
            event.redo();
            }
        }else {
            event.goto(3);
        }
        "step 2"
        event.cards=event.cards.concat(result.links);
        event.targets[event.num].lose(result.links,ui.special);
        event.targets[event.num].$give(result.links,player,false);
        if(get.type(result.links[0])=='equip'&&!event.targets[event.num].hasSkill("ssr_taofa")) event.targets[event.num].addTempSkill("ssr_taofa",{player:['die']});
        event.num++;
        event.goto(1);
        "step 3"
        if(event.draw<1||event.cards.length<1) event.finish();
        "step 4"
        //get.value(button.link,_status.event.player);
        game.cardsGotoOrdering(event.cards);
        event.videoId=lib.status.videoId++;
        event.drawnum=Math.min(event.draw,event.cards.length);
        game.broadcastAll(function(player,id,cards){
            var str;
            if(player==game.me&&!_status.auto){
                str='横征：选择获得其中至多'+get.cnNumber(event.drawnum)+'张牌';
            }
            else{
                str='横征';
            }
            var dialog=ui.create.dialog(str,cards);
            dialog.videoId=id;
        },player,event.videoId,event.cards);
        event.time=get.utc();
        game.addVideo('showCards',player,['横征',get.cardsInfo(event.cards)]);
        game.addVideo('delay',null,2);
        "step 5"
        var next=player.chooseButton([1,event.drawnum]);
        next.set('dialog',event.videoId);
        next.set('filterButton',function(button){
            return true;
            for(i=0;i<ui.selected.buttons.length;i++){
                if(get.suit(ui.selected.buttons[i].link)==get.suit(button.link)) return false;
            }
        });
        next.set('ai',function(button){
            //return get.value(button.link,_status.event.player);
            return get.value(button.link,player);
        });
        "step 6"
        game.broadcastAll('closeDialog',event.videoId);
        if(result.bool&&result.links){
            event.cards2=result.links;
        }
        else{
            event.finish();
        }
        var time=1000-(get.utc()-event.time);
        if(time>0){
            game.delay(0,time);
        }
        "step 7"
        var cards2=event.cards2;
        player.gain(cards2,'log','gain2');
    },
                ai:{
                    noh:true,
                    skillTagFilter:function(player,tag){
            if(tag=='noh'){
                if(player.countCards('h')!=1) return false;
            }
        },
                    threaten:function(player,target){
            return 2.3;
        },
                },
            },
            "ssr_taofa":{
                audio:"benghuai",
                trigger:{
                    source:"damageBefore",
                },
                filter:function(event,player){
        return event.player.hasSkill("ssr_hengzheng")&&event.card&&event.card.name=='sha';
    },
                forced:true,
                preHidden:true,
                mark:true,
                marktext:"讨伐",
                intro:{
                    name:"讨伐强权",
                    content:"你对拥有〖横征〗的角色：【杀】造成的伤害加一，距离始终视为一。",
                },
                mod:{
                    globalFrom:function(from,to){
            if(to.hasSkill("ssr_hengzheng")) return -Infinity;
        },
                },
                content:function(){
        trigger.num++;
        player.removeSkill("ssr_taofa");
    },
            },
            "ssr_baonue":{
                audio:"baonue",
                trigger:{
                    player:"useCardToPlayered",
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        return true;
    },
                check:function(event,player){
        return player==event.player;
    },
                content:function(){
        var id=(player==trigger.player?trigger.target:player).playerid;
        var map=trigger.getParent().customArgs;
        if(!map[id]) map[id]={};
        if(typeof map[id].shanRequired=='number'){
            map[id].shanRequired++;
        }
        else{
            map[id].shanRequired=2;
        }
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
        },
                },
            },
            "ssr_jiuchi":{
                unique:true,
                global:"ssr_jiuchi_jiu",
                audio:"jiuchi",
                zhuSkill:true,
                subSkill:{
                    jiu:{
                        audio:"jiuchi",
                        trigger:{
                            player:"useCardAfter",
                        },
                        filter:function(event,player){
                    if(event.card.name!='jiu') return false;
                    if(player.group!='qun') return false;
                    //if(_status.currentPhase!=player) return false;
                    if(!game.hasPlayer(function(target){
                        return player!=target&&target.hasZhuSkill('ssr_jiuchi',player);
                    })) return false;
                    for(i=0;i<event.cards.length;i++){
                        if(get.position(event.cards[i],true)=='o'){
                            return true;
                        }
                    }
                return false;
                },
                        direct:true,
                        content:function(){
                    'step 0'
                    var list=game.filterPlayer(function(target){
                        return player!=target&&target.hasZhuSkill('ssr_jiuchi',player);
                    });
                    player.chooseTarget(get.prompt('ssr_jiuchi'),'将'+get.translation(trigger.cards)+'交给'+get.translation(list)+(list.length>1?'中的一人':''),function(card,player,target){
                        return player!=target&&target.hasZhuSkill('ssr_jiuchi',player);
                    }).ai=function(target){
                        return 1;
                        if(get.attitude(_status.event.player,target)>=0) {
                            return target.hp-3;
                        }else {
                            return 1;
                        }
                    };
                    'step 1'
                    if(!result.bool) event.finish();
                    else{
                        var zhu=result.targets[0];
                        player.line(zhu,'green');
                        zhu.logSkill('ssr_jiuchi');
                        var list=[];
                        for(i=0;i<trigger.cards.length;i++){
                            if(get.position(trigger.cards[i],true)=='o'){
                                list.push(trigger.cards[i]);
                            }
                        }
                        player.give(list,zhu);
                        zhu.loseHp();
                        zhu.chooseBool().set('ai',function(){
                            if(get.attitude(zhu,player)>0) return true;
                            return false;
                        }).set('prompt','是否令'+get.translation(player.name)+'摸两张牌？');
                    }
                    'step 2'
                    if(result.bool){
                        player.draw(2);
                    }
                },
                        sub:true,
                    },
                },
            },
            "ssr_mizhou":{
                audio:"reguhuo",
                group:["ssr_mizhou_use","ssr_mizhou_draw"],
                marktext:"咒",
                intro:{
                    name:"法箓秘咒",
                    mark:function(dialog,content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()||player.classList.contains('dead')==true){
                    dialog.addAuto(content);
                }
                else{
                    return '<li>共有'+get.cnNumber(content.length)+'张牌';
                }
            }
        },
                    content:function(content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()||player.classList.contains('dead')==true){
                    return get.translation(content);
                }
                    return '<li>共有'+get.cnNumber(content.length)+'张牌';
            }
        },
                },
                complexCard:true,
                enable:"phaseUse",
                filterCard:function(card,player){
        var length=ui.selected.cards.length;
        if (player.storage.ssr_mizhou&&length>=4-player.storage.ssr_mizhou.length) return false;
        return true;
    },
                selectCard:[1,4],
                filter:function (event,player){
        if (player.storage.ssr_mizhou&&player.storage.ssr_mizhou.length>=4) return false;
        return player.countCards('h')>0;
    },
                check:function (card){
        var player=_status.event.player;
        if(player.storage.ssr_mizhou&&(4-player.storage.ssr_mizhou.length)<=player.countCards('h')) return 1;
        return 5-get.value(card);
    },
                discard:false,
                lose:false,
                content:function (){
        player.lose(cards,ui.special,'toStorage');
        if(!player.storage.ssr_mizhou) player.storage.ssr_mizhou=[];
        player.storage.ssr_mizhou.addArray(cards);
        player.markSkill('ssr_mizhou');
    },
                ai:{
                    order:3,
                    result:{
                        player:1,
                    },
                },
                subSkill:{
                  draw:{
                trigger:{
                    player:"phaseUseBegin",
                },
                filter:function(event,player){
    return player.storage.ssr_mizhou&&player.storage.ssr_mizhou.length;
    },
                forced:true,
                priority:1,
                content:function(){
        var mark=player.storage.ssr_mizhou;
        player.gain(mark,'fromStorage');
        player.storage.ssr_mizhou=[];
        player.unmarkSkill('ssr_mizhou');
    },
                  },
                  use:{
                audio:"reguhuo",
                trigger:{
                    global:["useCard","respond"],
                },
                check:function(event,player){
        return get.attitude(player,event.player)<0;
    },
                priority:15,
                direct:true,
                filter:function(event,player){
        if(event.name=='useCard'&&!window.ssr_mizhou_using) {
            window.ssr_mizhou_use=event.card;
            window.ssr_mizhou_player=event.player;
        }
        if(event.player==player) return false;
        if(!player.storage.ssr_mizhou) return false;
        if(!player.storage.ssr_mizhou.length) return false;
        var mark=player.storage.ssr_mizhou;
        for(i=0;i<mark.length;i++){
        if(event.card.name==mark[i].name) return true;
            }
        return false;
    },
                content:function(){
        "step 0"
        window.ssr_mizhou_using=true;
        player.chooseControl('确定','取消',trigger.card,function(){
            if(get.attitude(player,trigger.player)<0) return '确定';
            return '取消';
        }).set('prompt','秘咒：'+get.translation(trigger.player.name)+'的【'+get.translation(trigger.card.name)+'】即将生效，是否令该牌无效并令该角色流失一点体力？');
        //.set('prompt','秘咒：是否对'+get.translation(trigger.player.name)+'发动秘咒？')
        //.set('dialog',['秘咒人心',cards])
        "step 1"
        if(result.control=='取消') event.finish();
        "step 2"
        player.logSkill('ssr_mizhou',trigger.player,'poison');
        var dis=0;
        var mark=player.storage.ssr_mizhou;
        for(i=0;i<mark.length||dis==0;i++){
        if(trigger.card.name==mark[i].name&&dis==0) {
            var dis=1;
            player.storage.ssr_mizhou.remove(mark[i]);
            if(player.storage.ssr_mizhou&&player.storage.ssr_mizhou.length>0) {
                player.markSkill('ssr_mizhou');
                }else {
                player.unmarkSkill('ssr_mizhou');
                }
            game.cardsDiscard(mark[i]);
        game.log(player,'将'+get.translation(mark[i],true)+'置入了弃牌堆')
        }
            }
        "step 3"
            if(trigger.card) trigger.player.discard(trigger.card);
            trigger.player.loseHp();
        "step 4"
            if(trigger.name=='respond'&&window.ssr_mizhou_use&&window.ssr_mizhou_player&&trigger.player.isAlive()) {
                /*trigger.player.chooseToRespond({name:trigger.card.name}).set('check',function(card){
                    return get.value(trigger.card)-get.value(card)+0.1;
                });*/
                window.ssr_mizhou_player.useCard(window.ssr_mizhou_use,trigger.player,false,'nowuxie','noai').animate=false;
            }else {
                trigger.cancel();
            }
        "step 5"
        window.ssr_mizhou_using=false;
            /*
        "step 4"
            if(trigger.name=='respond'&&window.ssr_mizhou_use) {
                if(!result.bool) {
                    window.ssr_mizhou_player.useCard(window.ssr_mizhou_use,'nowuxie',targets[0],'noai').animate=false;
                }
            }
            */
    },
                ai:{
                            result:{
                                target:-2,
                            },
                            expose:0.2,
                },
                  },
                },
            },
            "ssr_chanyuan":{
    audio:'guhuo_guess',
    //forbid:["boss"],
    trigger:{
        player:"die",
    },
    forced:true,
    forceDie:true,
    skillAnimation:true,
    animationColor:"gray",
    filter:function(event){
        return event.source&&event.source.isIn();
    },
    content:function(){
        trigger.source.goMad();
    },
    logTarget:"source",
    ai:{
        threaten:function(player,target){
            if(target.hp==1) return 0.2;
            return 1.5;
        },
        effect:{
            target:function(card,player,target,current){
                if(!target.hasFriend()) return;
                if(target.hp<=1&&get.tag(card,'damage')) return [1,0,0,-2];
            },
        },
    },
            },
            "ssr_luanji":{
                subSkill:{
                    ext:{
                        firstDo:true,
                        ai:{
                            "unequip2":true,
                        },
                        init:function(player,skill){
                if(!player.storage[skill]) player.storage[skill]=[];
            },
                        onremove:true,
                        trigger:{
                            player:["damage","damageCancelled","damageZero"],
                            source:["damage","damageCancelled","damageZero"],
                            target:["shaMiss","useCardToExcluded","useCardToEnd"],
                            global:["useCardEnd"],
                        },
                        charlotte:true,
                        filter:function(event,player){
                return player.storage.ssr_luanji_ext&&event.card&&player.storage.ssr_luanji_ext.contains(event.card)&&(event.name!='damage'||event.notLink());
            },
                        silent:true,
                        forced:true,
                        popup:false,
                        priority:12,
                        content:function(){
                player.storage.ssr_luanji_ext.remove(trigger.card);
                if(!player.storage.ssr_luanji_ext.length) player.removeSkill('ssr_luanji_ext');
            },
                        sub:true,
                    },
                    wanjian:{
                priority:25,
                trigger:{
                    player:"useCardToPlayered",
                },
                filter:function(event){
        return event.card.name=='wanjian';
    },
                forced:true,
                logTarget:"target",
                content:function(){
        trigger.target.addTempSkill('ssr_luanji_ext');
        trigger.target.storage.ssr_luanji_ext.add(trigger.card);
    },
                ai:{
                    "unequip_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg&&arg.name=='wanjian') return true;
            return false;
        },
                },
                    },
                },
                group:'ssr_luanji_wanjian',
                audio:"luanji",
                enable:"phaseUse",
                position:"hs",
                viewAs:{
                    name:"wanjian",
                },
                filterCard:function(card,player){
        return true;
    },
                filter:function(event,player){
        return player.countCards('hs')>=2;
    },
                usable:2,
                selectCard:2,
                complexCard:true,
                check:function(card){
                    return 7-get.value(card);
                },
                ai:{
                    basic:{
                        order:8.5,
                        useful:1,
                        value:5,
                    },
                    wuxie:function(target,card,player,viewer){
            if(get.attitude(viewer,target)>0&&target.countCards('h','shan')){
                if(!target.countCards('h')||target.hp==1||Math.random()<0.7) return 0;
            }
        },
                    result:{
                        "target_use":function(player,target){
                if(player.hasUnknown(2)&&get.mode()!='guozhan') return 0;
                var nh=target.countCards('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                        target:function(player,target){
                var nh=target.countCards('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:1,
                        multitarget:1,
                        multineg:1,
                    },
                },
            },
            "ssr_dingsheng":{
                audio:"xueyi",
                trigger:{
                    target:"useCardToBefore",
                },
                forced:true,
                priority:15,
                filter:function(event,player){
        return (event.card.name=='wanjian');
    },
                content:function(){
        trigger.cancel();
    },
                locked:true,
                ai:{
                    effect:{
                        target:function(card,player,target){
                if(card.name=='wanjian') return 0;
            },
                    },
                },
                group:["ssr_dingsheng_wuxie","ssr_dingsheng_draw"],
                subSkill:{
                    draw:{
    trigger:{
        player:"loseAfter",
    },
    forced:true,
    preHidden:true,
    priority:9,
    usable:1,
    filter:function(event,player){
        return event.num>=2;
    },
    content:function(){
        player.draw();
    },
    ai:{
        threaten:1.1,
    },
                    },
                    wuxie:{
                        trigger:{
                            player:"useCard",
                        },
                        forced:true,
                        filter:function(event){
                    return (event.card.name=='wanjian');
                },
                        content:function(){
                    trigger.nowuxie=true;
                },
                    },
                },
            },
            "ssr_xueyi":{
                global:"ssr_xueyi_zhong",
                audio:"xueyi",
                zhuSkill:true,
                subSkill:{
                    zhong:{
                        audio:"xueyi",
                        unique:true,
                        enable:"chooseToUse",
                        mark:false,
                        skillAnimation:true,
                        animationStr:"血裔",
                        limited:true,
                        animationColor:"orange",
                        init:function(player){
        player.storage.ssr_xueyi_zhong=false;
    },
                        filter:function(event,player){
        if(player.storage.ssr_xueyi_zhong) return false;
        if(player.identity!='zhong') return false;
        if(event.type=='dying'){
            if(player!=event.dying) return false;
            return game.hasPlayer(function(current){
                        if(!current.hasZhuSkill('ssr_xueyi')) return false;
                            return current!=player;
                        });
        }
        return false;
    },
                        content:function(){
        'step 0'
        player.awakenSkill('ssr_xueyi_zhong');
        player.storage.ssr_xueyi_zhong=true;
        'step 1'
        player.identityShown=true;
        player.markSkill('ssr_xueyi_zhong');
        if(player.hp<1){
            player.recover(1-player.hp);
        }
        if(player.group=='qun'&&!player.hasSkill('ssr_dingsheng')) {
            player.addSkill('ssr_dingsheng');
        }
    },
                        ai:{
                            order:10,
                            skillTagFilter:function(player,arg,target){
                                if(player!=target||player.storage.ssr_xueyi_zhong) return false;
                            },
                            save:function(player){
                                if(player.storage.ssr_xueyi_zhong) return false;
                                if(player.identity!='zhong') return false;
                                return true;
                            },
                            result:{
                                player:function(player){
                                    if(player.hp<=0) return 5;
                                    return 0;
                                },
                            },
                        },
                        intro:{
                            content:"limited",
                        },
                    },
                },
            },
            "ssr_juejing":{
                group:['ssr_juejing_link'],
                subSkill:{
                    link:{
                        trigger:{
                player:["linkBefore","enterGame"],
                global:"phaseBefore",
            },
            forced:true,
            filter:function(event,player){
                if(event.name=='link') return !player.isLinked();
                return (event.name!='phase'||game.phaseNumber==0)&&player.isLinked();
            },
            content:function(){
                if(trigger.name!='link') player.link(false);
                else trigger.cancel();
            },
            sub:true,
        },
                },
                audio:"juejing",
                init:function (player,skill){
        if(player.isTurnedOver()) player.turnOver();
        player.disableJudge();
    },
                onremove:function (player,skill){
        player.enableJudge();
    },
                trigger:{
                    player:["turnOverBefore"],
                },
                priority:3,
                forced:true,
                locked:true,
                filter:function (event,player){
        return !player.isTurnedOver();
    },
                content:function (){
        trigger.cancel();
        game.log(player,'取消了翻面');
    },
                ai:{
                    noturn:true,
                    effect:{
                        target:function (card,player,target){
                if(card.name=='tiesuo') return 'zeroplayertarget';
                if(get.type(card)=='delay') return -1;
            },
                    },
                },
            },
            "ssr_kuangao":{
                subSkill:{
                    sha:{
                        mark:true,
                        marktext:"狂骨",
                        intro:{
                            name:"狂骨破军",
                            content:"<li>本回合内你可额外使用一张【杀】，你使用的【杀】没有距离限制且不能被响应。",
                        },
                        audio:'kuanggu',
                        shaRelated:true,
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        filter:function(event,player){
                            return event.card.name=='sha';
                        },
                        forced:true,
                        logTarget:"target",
                        preHidden:true,
                        content:function(){
                            "step 0"
                                trigger.getParent().directHit.add(trigger.target);
                        },
                        ai:{
                            "directHit_ai":true,
                        },
                        mod:{
                            targetInRange:function(card,player,target,now){
                                if(card.name=='sha') return true;
                            },
                            cardUsable:function(card,player,num){
                                if(card.name=='sha') return num+1;
                            },
                        },
                        sub:true,
                    },
                },
                audio:'kuanggu',
    enable:"phaseUse",
    usable:1,
    filterTarget:function(card,player,target){
        return target!=player;
    },
    content:function(){
        "step 0"
        target.chooseCard('交给'+get.translation(player.name)+'一张【杀】或弃置其的一张牌',function(card){
            return get.name(card)=='sha';
        }).set('ai',function(card){
            if(get.attitude(target,player)>0){
                if(player.countCards('j')>0) {
                    return 3-get.value(card);
                }else {
                    return 10-get.value(card);
                }
            }
            else{
                return 0;
            }
        });
        "step 1"
        if(result.bool==false&&player.countCards('hej')>0){
            target.discardPlayerCard(player,'hej',true);
        }
        else{
            player.gain(result.cards,'giveAuto',target);
            player.addTempSkill("ssr_kuangao_sha");
        }
    },
    ai:{
        order:11,
        expose:0.1,
        result:{
            target:0.5,
            player:function(player,target){
                if(get.attitude(player,target)<=0) return -1;
                if(target.countCards('h')<=1) return -1;
                if(player.countCards('he')<1) return 0;
                return target.countCards('h')-2;
            },
        },
        threaten:1.1,
    },
            },
            "ssr_qimou":{
                subSkill:{
                    die:{
                        mark:true,
                        marktext:"困窘",
                        intro:{
                            name:"陷入窘境",
                            content:"<li>你不能使用或打出任何牌。",
                        },
    mod:{
        "cardEnabled2":function(card,player){
            return false;
        },
    },
    ai:{
        effect:{
            target:function(card,player,target){
                if(get.tag(card,'damage')) return [0,-999999];
            },
        },
    },
    charlotte:true,
    sub:true,
                    },
                    kill:{
                        trigger:{
        source:"damageBegin4",
    },
    filter:function(event,player){
        return event.player.hasSkill('ssr_qimou_die');
    },
    priority:-39,
    forced:true,
    content:function(){
                'step 0'
                    trigger.num*=2;
    },
    sub:true,
                    },
                },
                audio:'qimou',
    unique:true,
    enable:"phaseUse",
    mark:true,
    skillAnimation:true,
    animationColor:"fire",
    limited:true,
    init:function(player){
        player.storage.ssr_qimou=false;
    },
    filter:function(event,player){
        if(player.storage.ssr_qimou) return false;
        return true;
    },
    filterTarget:function(card,player,target){
        return target!=player;
    },
    content:function(){
        player.awakenSkill('ssr_qimou');
        player.storage.ssr_qimou=true;
        player.turnOver();
        player.addTempSkill('ssr_qimou_kill');
        //player.storage.ssr_qimou_kill=target;
        target.addTempSkill('ssr_qimou_die');
        //target.markSkillCharacter('ssr_qimou_die',player,'困窘','无法使用或打出任何手牌');
    },
    ai:{
        order:13,
        result:{
            target:function(player,target){
                if(target.getEquip('bagua')||target.getEquip('rewrite_bagua')) return 0;
                var hs=player.countCards('h',function(card){
                    return ['sha','juedou'].contains(card.name)&&get.effect(target,card,player,player)!=0;
                });
                var ts=target.hp;
                if(hs>=ts&&ts>1) return -1;
                return 0;
            },
        },
    },
    intro:{
        content:"limited",
    },
            },
            "ssr_xuanhuo":{
                subSkill:{
                    break:{
                        trigger:{
                            global:["phaseBegin","die"],
                        },
                        filter:function (event,player){
        return event.player==player.storage.ssr_xuanhuo_break;
    },
                        forced:true,
                        silent:true,
                        intro:{
                    name:"头晕目眩",
                    content:"锁定技，若你的体力值大于零，你的手牌均视为【杀】。",
                },
                mark:true,
                marktext:"眩惑",
                        content:function(){
        player.removeSkill('ssr_xuanhuo_break');
    },
    mod:{
        cardname:function(card,player){
            if(player.hp>0) return 'sha';
        },
    },
    ai:{
        skillTagFilter:function(player){
            if(!player.countCards('h')) return false;
        },
        respondSha:true,
    },
                        sub:true,
                    },
                },
                usable:1,
                audio:"xuanhuo",
                enable:"phaseUse",
                filterCard:function (card){
        return true;
    },
                selectCard:function (){
        return 1;
    },
    discard:false,
    lose:false,
                        filter:function (event,player){
        return player.countCards('h')>0;
    },
                filterTarget:function (card,player,target){
        if(player==target) return false;
        if(target.hasSkill('ssr_xuanhuo_break')) return false;
        return true;
    },
                content:function (){
        "step 0"
        target.gain(cards,player,'giveAuto');
        target.storage.ssr_xuanhuo_break=player;
        "step 1"
        target.addSkill('ssr_xuanhuo_break');
    },
                check:function (card){
        return 9-get.value(card);
    },
                position:"h",
                ai:{
                    order:13,
                    result:{
                        target:function (player,target){
                            if(target.countCards('e',{name:'zhuge'})||target.hasSkill('paoxiao')||target.hasSkill('olpaoxiao')||target.hasSkill('new_repaoxiao')||target.hasSkill('zhuge_skill')||target.hasSkill('rw_zhuge_skill')) {
                                return 1+target.countCards('h');
                            }else {
                                return 1-target.countCards('h');
                            }
                            
                        },
                },
                threaten:1.2,
                },
            },
            "ssr_fabing":{
                subSkill:{
                    sha:{
                        sub:true,
                    },
                    unable:{
                        sub:true,
                    },
                },
                trigger:{
                player:["useCard"],
            },
    mod:{
        //selectTarget:function(card,player,range){
        //       if(card.name=='sha'&&range[1]!=-1&&!player.hasSkill('ssr_fabing_sha')) range[1]=-1;
        //},
        //targetInRange:function(card,player,target,now){
        //    if(card.name=='sha'&&!player.hasSkill('ssr_fabing_sha')) return true;
        //},
        cardname:function(card,player){
            if(card.name=='sha'&&!player.hasSkill('ssr_fabing_sha')&&_status.currentPhase==player) return 'ssr_fabing_card';
        },
    },
            priority:9,
            forced:true,
            filter:function(event,player){
                return event.card.name=='ssr_fabing_card'&&!player.hasSkill('ssr_fabing_sha');
            },
                init:function (player,skill){
            //lib.arenaReady.push(function(){
                    var name='ssr_fabing_card';
                    lib.card[name]={
                fullskin:true,
                color:'white',
                type:'basic',
                enable:true,
                selectTarget:-1,
                filterTarget:function(card,player,target){
                    return player==target;
                },
                content:function(){},
                ai:{
                    basic:{
                        useful:[5,3,1],
                        value:[5,3,1],
                    },
                    order:3,
                    result:{
                        player:1.5,
                    },
                }
            };
            lib.translate[name]="法杀";
            lib.translate[name+'_info']="视为使用一张任意属性的【杀】或单个目标的非延时锦囊牌。（计入【杀】的使用次数）";
            //});
                },
    audio:'enyuan',
    direct:true,
    content:function(){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[],sha:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(!(info.selectTarget==1||info.toself)) continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
        if(name=='sha'){
            list['sha'].push([get.translation(lib.card[name].type),'','sha']);
            list['sha'].push([get.translation(lib.card[name].type),'','sha','fire']);
            list['sha'].push([get.translation(lib.card[name].type),'','sha','thunder']);
            list['sha'].push([get.translation(lib.card[name].type),'','sha','ice']);
        }else list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('以法令兵',[list.sha.concat(list.trick),'vcard']);
        // for(var i in list){
        //        dialog.addText(get.translation(i)+'牌');
        //        dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog,true).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'wangmeizhike':return 0.6;
                    default:return 0;
                }
            }
            if(rand4&&player.countCards('h')<=3){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(rand3&&(player.countCards('h',{name:'shan'})>=1||player.countCards('e',{subtype:'equip2'})>=1)){
                switch(name){
                    case 'caochuanjiejian':return 0.6;
                    default:return 0;
                }
            }
            if(rand1&&game.countPlayer(function(current){
                            if(get.attitude(player,current)<0){
                                return get.distance(player,current)<=1;
                            }
                        })>=1) {
                switch(name){
                    case 'shunshou':return 0.7;
                    default:return 0;
                }
            }
            if(rand1) {
                switch(name){
                    case 'shunshou':return 0.6;
                    default:return 0;
                }
            }
            if(rand3&&(player.countCards('h',{number:13})+player.countCards('h',{number:12})+player.countCards('h',{number:11}))>=1){
                switch(name){
                    case 'shezhanqunru':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
                switch(name){
                    case 'sha':return 0.4;
                    default:return 0;
                }
        }
        'step 1'
        if(result.bool){
            player.addTempSkill('ssr_fabing_sha');
            player.getStat().card.sha++;
            player.chooseUseTarget({name:result.links[0][2],nature:result.links[0][3]},true,false);
        }
    },
    ai:{
        threaten:1.5,
    },
            },
            "ssr_lianhuan":{
                subSkill:{
                    link:{
    trigger:{
        global:"useCardAfter",
    },
    forced:true,
    preHidden:true,
    filter:function(event,player){
        if(event.targets.length!=1) return false;
        if(event.targets[0]==player) return false;
        if(!event.targets[0].hasSkill('ssr_lianhuan_link')) return false;
        return (event.card.name=='sha'||get.type(event.card)=='trick'||get.type(event.card)=='delay');
    },
                intro:{
                    name:"铁索连环",
                    content:"锁定技，当你成为锦囊牌或【杀】的唯一目标后，其他处于连锁状态的角色视为也被使用同样的牌，然后所有角色解除连锁状态。",
                },
                mark:true,
                marktext:"连锁",
    content:function(){
        'step 0'
        trigger.targets[0].removeSkill('ssr_lianhuan_link');
        event.card=get.cards(1);
        trigger.player.useCard(trigger.card,player,event.card,false);
        'step 1'
        if(game.countPlayer(function(current){
            return current.hasSkill('ssr_lianhuan_link');
        })<=1) player.removeSkill('ssr_lianhuan_link');
        /*
        trigger.getParent().excluded.add(player);
        player.removeSkill('ssr_lianhuan_link');
        event.targets=game.filterPlayer(function(current){
            //if(current==player) return false;
            return current.hasSkill('ssr_lianhuan_link');
        });
        event.num=0;
        'step 1'
        event.card=get.cards(1);
        event.targets[event.num].removeSkill('ssr_lianhuan_link');
        'step 2'
        trigger.player.useCard(trigger.card,event.targets[event.num],event.card,false);
        'step 3'
        event.num++;
        'step 4'
        if(event.num<event.targets.length) event.goto(1);
        'step 5'
        event.finish();*/
    }
                    },
                },
    audio:'lianhuan1',
    enable:"phaseUse",
    usable:3,
    position:"he",
    check:function(card){
        return 9-get.value(card);
    },
    filterCard:function(card){
        return get.suit(card)=='club';
    },
    filter:function(event,player){
        return player.countCards('he',{suit:'club'})>0;
    },
    filterTarget:function(card,player,target){
        return true;
        //return target!=player;
    },
    selectTarget:[1,3],
    onuse:function(result,player){
        player.draw();
    },
    content:function(){
        if(!target.hasSkill('ssr_lianhuan_link')) {
            target.addSkill('ssr_lianhuan_link');
        }else {
            target.removeSkill('ssr_lianhuan_link');
        }
    },
    ai:{
        order:9,
        result:{
            target:function(player,target){
                if(target.hasSkill('ssr_lianhuan_link')) {
                    return 2;
                }else {
                    return -2;
                }
            },
        },
        threaten:1.3,
    },
            },
            "ssr_sance":{
                group:['ssr_sance_respond','ssr_sance_wuxie','ssr_sance_shan'],
                subSkill:{
                    wuxie:{
                        audio:'xinfu_zhanji',
                        enable:"chooseToUse",
                        filterCard:true,
                        position:"h",
                        selectCard:-1,
                        viewAs:{
                            name:"wuxie",
                        },
                        hiddenCard:function(player,name){
                            return player.countMark('ssr_sance')>0;
                        },
                        viewAsFilter:function(player){
                            return player.countMark('ssr_sance')>0;
                        },
                        precontent:function(){
                            event.card=get.cards(1);
                            player.logSkill('ssr_sance_wuxie');
                            event.result.card.cards=event.card;
                            event.result.cards=event.card;
                            event.getParent().addCount=false;
                            event.getParent().ssr_sance_wuxie=true;
                        },
                        onuse:function(result,player){
                            player.removeMark('ssr_sance');
                        },
                        prompt:"是否发动〖三策〗，将一枚“策”标记当做【无懈可击】打出？",
                        check:function(card){return 8-get.equipValue(card)},
                        ai:{
                            order:1,
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:2,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                    shan:{
                        audio:'xinfu_zhanji',
                        prompt:"是否发动〖三策〗，将一枚“策”标记当做【闪】使用？",
                        enable:"chooseToUse",
                        filter:function(event,player){
                            return player.countMark('ssr_sance')>0;//&&!_status.dying.length;
                        },
                        onuse:function(result,player){
                            player.removeMark('ssr_sance');
                        },
                        filterCard:true,
                        position:"hes",
                        selectCard:-1,
                        viewAs:{
                            name:"shan",
                        },
                        ai:{
                            skillTagFilter:function(player){
                                return player.countCards('hes')&&!player.getStorage('taoluan').contains('shan')&&!player.hasSkill('taoluan3');
                            },
                            respondShan:true,
                            order:1,
                            basic:{
                                useful:[7,2],
                                value:[7,2],
                            },
                            result:{
                                player:1,
                            },
                        },
                        sub:true,
                    },
                    respond:{
                        trigger:{
                            player:"chooseToRespondBegin",
                        },
                        filter:function(event,player){
                            if(event.responded) return false;
                            if(!event.filterCard({name:'shan'})&&!event.filterCard({name:'sha'})) return false;
                            if(!lib.filter.cardRespondable({name:'shan'},player,event)&&!lib.filter.cardRespondable({name:'sha'},player,event)) return false;
                            return player.countMark('ssr_sance')>0;
                        },
                        direct:true,
                        audio:'xinfu_zhanji',
                        content:function(){
                            "step 0"
                                if(trigger.filterCard({name:'shan'})&&lib.filter.cardRespondable({name:'shan'},player,trigger)) event.name='shan';
                                else event.name='sha';
                                player.chooseControl('确定','取消').set('ai',function(){
                                    if(Math.random()*3+2.5>(player.hp*2+player.countCards('h'))) return '确定';
                                    return '取消';
                                }).set('prompt','是否发动〖三策〗，将一枚“策”标记当做【'+get.translation(event.name)+'】打出？');
                            "step 1"
                                if(result.control=='确定') {
                                    trigger.untrigger();
                                    trigger.responded=true;
                                    trigger.result={bool:true,card:{name:event.name},cards:[event.card],noanimate:true};
                                    player.removeMark('ssr_sance');
                                }
                        },
                        ai:{
                            order:1,
                            useful:-1,
                            value:-1,
                        },
                        sub:true,
                    },
                },
                //mark:true,
                marktext:"策",
                init:function(player){
                    if(!player.storage.ssr_sance&&player.countMark('ssr_sance')<=0) {
                        player.addMark('ssr_sance',3);
                        player.markSkill('ssr_sance');
                    }
                    if(player.countMark('ssr_sance')>0) player.markSkill('ssr_sance');
                },
                intro:{
                    name:"取川三策",
                    content:"mark",
                },
                enable:"chooseToUse",
                filter:function(event,player){
        return event.type!='wuxie'&&event.type!='respondShan'&&player.countMark('ssr_sance')>0;
    },
                hiddenCard:function(player,name){
        return (player.countMark('ssr_sance')>0&&lib.inpile.contains(name));
    },
                onremove:true,
                chooseButton:{
                    dialog:function(event,player){
                    var list=[];
                    for(i=0;i<lib.inpile.length;i++){
                        var name=lib.inpile[i];
                        if(name=='sha'){
                            list.push(['基本','','sha']);
                            list.push(['基本','','sha','fire']);
                            list.push(['基本','','sha','thunder']);
                            list.push(['基本','','sha','ice']);
                        }
                        else if(get.type(name)=='trick') list.push(['锦囊','',name]);
                        else if(get.type(name)=='delay') list.push(['延时','',name]);
                        else if(get.type(name)=='basic') list.push(['基本','',name]);
                    }
                    if(list.length==0){
                        return ui.create.dialog('〖三策〗已无可用牌');
                    }
                    return ui.create.dialog('取川三策',[list,'vcard']);
                },
                filter:function(button,player){
                    return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
                },
                check:function(button){
                    var player=_status.event.player;
                    if(player.countCards('h',button.link[2])==1) return 0;
                    if(button.link[2]=='wugu') return 0;
                    var effect=player.getUseValue(button.link[2]);
                    if(effect>0) return effect;
                    return 0;
                },
        backup:function(links,player){
            return {
                filterCard:true,
                audio:'xinfu_zhanji',
                selectCard:-1,
                popname:true,
                check:function(card){
                    return 11-get.value(card);
                },
                position:'h',
                viewAs:{name:links[0][2],nature:links[0][3]},
                onuse:function(result,player){
                    player.removeMark('ssr_sance');
                },
                precontent:function(){
                    event.card=get.cards(1);
                    player.logSkill('ssr_sance');
                    event.result.card.cards=event.card;
                    event.result.cards=event.card;
                    event.getParent().addCount=false;
                    event.getParent().ssr_sance=true;
                },
            }
        },
                    prompt:function(links,player){
            return '将一枚“策”标记当做【'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'】使用';
        },
                },
                ai:{
                    skillTagFilter:function(player){
            if(player.countMark('ssr_sance')<1) return false;
            return true;
        },
                    order:1,
                    result:{
                        player:function(player){
                var allshown=true,players=game.filterPlayer();
                for(i=0;i<players.length;i++){
                    if(players[i].ai.shown==0){
                        allshown=false;
                    }
                    if(players[i]!=player&&players[i].countCards('h')&&get.attitude(player,players[i])>0){
                        return 1;
                    }
                }
                if(allshown) return 1;
                return 0;
            },
                    },
                    threaten:1.1,
                },
            },
            "ssr_xiebian":{
                derivation:['ssr_xiebian_futu','ssr_xiebian_fantian','ssr_xiebian_xiuluo','ssr_xiebian_shijia'],
                group:['ssr_xiebian_judge','ssr_xiebian_draw','ssr_xiebian_use','ssr_xiebian_dis','ssr_xiebian_jia'],
                subSkill:{
                    jia:{
                audio:'spolzhouxuan',
                preHidden:true,
                trigger:{
                    player:["damageBegin"],
                },
                forced:true,
                locked:true,
                priority:-31,
                filter:function(event,player){
                    return event.num>0&&player.countMark('ssr_xiebian_jia')>0;
                },
                content:function(){
                    if(trigger.num>player.countMark('ssr_xiebian_jia')) {
                        var num=player.countMark('ssr_xiebian_jia');
                    }else {
                        var num=trigger.num;
                    }
                    if(trigger.name=='damage') {
                       if(trigger.animate!==false){
                          player.$damage(trigger.source);
                             game.broadcastAll(function(nature,player){
                                if(lib.config.animation&&!lib.config.low_performance){
                                    if(nature=='fire'){
                                       player.$fire();
                                    }
                                    else if(nature=='thunder'){
                                       player.$thunder();
                                    }
                                 }
                              },trigger.nature,player);
                           player.$damagepop(-num,trigger.nature);
                       }
                    }
                    game.log(player,'的器械抵挡了',get.cnNumber(num),'点伤害');
                    player.removeMark('ssr_xiebian_jia',num);
                    trigger.num-=num;
                },
                marktext:"械",
                intro:{
                    name:"机巧械具",
                    content:"mark",
                },
                mod:{
                    maxHandcardBase:function (player,num){
                        return num+player.countMark('ssr_xiebian_jia');
                    },
                },
                sub:true,
                    },
                    disable:{
                        sub:true,
                    },
                    judge:{
                        audio:'qiaobian1',
    trigger:{
        player:"phaseJudgeBefore",
    },
    filter:function(event,player){
        if(player.hasSkill('ssr_xiebian_disable')) return false;
        return player.countCards('he')>0;
    },
    direct:true,
    frequent:true,
    content:function(){
        "step 0"
        if(1==0&&player.countCards('j')==0&&!event.isOnline()&&(!event.isMine()||!lib.config.autoskilllist.contains('qiaobian1'))){
            event.finish();
        }
        else{
            var next=player.chooseToDiscard(get.prompt('ssr_xiebian'),'he','跳过判定阶段并获得判定区的所有牌，然后获得技能〖浮屠〗');
            next.set('ai',get.unuseful2);
            next.set('logSkill','ssr_xiebian');
            next.setHiddenSkill('ssr_xiebian');
        }
        "step 1"
        if(result.bool){
            player.addTempSkill('ssr_xiebian_disable',{player:'phaseBegin'});
            player.addTempSkill('ssr_xiebian_futu',{player:'phaseBegin'});
            trigger.cancel();
            if(player.countCards('j')>0) player.gain(player.getCards('j'),'gain2');
        }
    },
                        sub:true,
                    },
                    draw:{
                        audio:'qiaobian2',
    trigger:{
        player:"phaseDrawBefore",
    },
    filter:function(event,player){
        if(player.hasSkill('ssr_xiebian_disable')) return false;
        return player.countCards('he')>0;
    },
    direct:true,
    content:function(){
        "step 0"
        var check,i,num=0,num2=0,players=game.filterPlayer();
        for(i=0;i<players.length;i++){
            if(player!=players[i]&&players[i].countCards('he')){
                var att=get.attitude(player,players[i]);
                if(att<=0){
                    num++;
                }
                if(att<0){
                    num2++;
                }
            }
        }
        check=(num>=2&&num2>0);

        player.chooseToDiscard(get.prompt('ssr_xiebian'),'he','跳过摸牌阶段并获得至多两名角色各一张手牌，然后获得技能〖梵天〗',lib.filter.cardDiscardable).set('ai',function(card){
            if(!_status.event.check) return 0;
            return 7-get.value(card);
        }).set('check',check).set('logSkill','ssr_xiebian').setHiddenSkill('ssr_xiebian');
        "step 1"
        if(result.bool){
            trigger.cancel();
            player.chooseTarget([1,2],'获得至多两名角色各一张手牌',function(card,player,target){
                return target!=player&&target.countCards('h');
            }).set('ai',function(target){
                return 1-get.attitude(_status.event.player,target);
            })
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.addTempSkill('ssr_xiebian_disable',{player:'phaseBegin'});
            player.addTempSkill('ssr_xiebian_fantian',{player:'phaseBegin'});
            result.targets.sortBySeat();
            player.line(result.targets,'green');
            event.targets=result.targets;
            if(!event.targets.length) event.finish();
        }
        else{
            event.finish();
        }
        "step 3"
        player.gainMultiple(event.targets);
        "step 4"
        game.delay();
    },
    ai:{
        expose:0.2,
    },
                        sub:true,
                    },
                    use:{
                        audio:'qiaobian3',
    trigger:{
        player:"phaseUseBefore",
    },
    filter:function(event,player){
        if(player.hasSkill('ssr_xiebian_disable')) return false;
        return player.countCards('he')>0;
    },
    direct:true,
    content:function(){
        "step 0"
        var check;
        if(!player.canMoveCard(true)){
            check=false;
        }
        else{
            check=game.hasPlayer(function(current){
                return get.attitude(player,current)>0&&current.countCards('j');
            });
            if(!check){
                if(player.needsToDiscard()>1){
                    check=false;
                }
                else if(player.countCards('h',{name:['wuzhong']})){
                    check=false;
                }
                else{
                    check=true;
                }
            }
        }
        player.chooseToDiscard(get.prompt('ssr_xiebian'),'he','跳过出牌阶段并移动场上的一张牌，然后获得技能〖修罗〗',lib.filter.cardDiscardable).set('ai',function(card){
            if(!_status.event.check) return 0;
            return 7-get.value(card);
        }).set('check',check).set('logSkill','ssr_xiebian').setHiddenSkill('ssr_xiebian');
        "step 1"
        if(result.bool){
            player.addTempSkill('ssr_xiebian_disable',{player:'phaseBegin'});
            player.addTempSkill('ssr_xiebian_xiuluo',{player:'phaseBegin'});
            trigger.cancel();
            player.moveCard();
        }
        else{
            event.finish();
        }
    },
    ai:{
        expose:0.2,
    },
                        sub:true,
                    },
                    dis:{
                        audio:'qiaobian4',
    trigger:{
        player:"phaseDiscardBefore",
    },
    direct:true,
    filter:function(event,player){
        if(player.hasSkill('ssr_xiebian_disable')) return false;
        return player.countCards('he')>0;
    },
    content:function(){
        "step 0"
        var discard=player.needsToDiscard()>0;
        var next=player.chooseToDiscard(get.prompt('ssr_xiebian'),'he','跳过弃牌阶段并重置一张牌，然后获得技能〖释迦〗');
        next.setHiddenSkill('ssr_xiebian');
        next.logSkill='ssr_xiebian';
        next.ai=function(card){
            if(discard){
                return 100-get.useful(card);
            }
            else{
                return -1;
            }
        };
        "step 1"
        if(result.bool){
            player.addTempSkill('ssr_xiebian_disable',{player:'phaseBegin'});
            player.addTempSkill('ssr_xiebian_shijia',{player:'phaseBegin'});
            trigger.cancel();
            if(player.countCards('he')>0) {
                player.chooseToDiscard('he',1,true,'请重铸一张牌');
                player.draw();
            }
        }
    },
                        sub:true,
                    },
                },
            },
            "ssr_xiebian_futu":{
                audio:'qiaobian1',
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return event.num>0;
    },
    intro:{
        name:"浮屠",
        content:"<li>锁定技，每当你受到一点伤害后，你进行一次判定：若为黑桃，你获得一枚“械”标记，否则你随机获得一张装备牌并可以使用之",
    },
    locked:true,
    mark:true,
    marktext:"浮屠",
    forced:true,
    content:function(){
        "step 0"
        event.num=trigger.num;
        "step 1"
        if(event.num<1) event.finish();
        "step 2"
        event.num--;
        player.judge(function(card){
            if(get.suit(card)=='spade') return 2;
            return -0.5;
        }).judge2=function(result){
            return result.bool;
        };
        "step 3"
        if(result.bool){
            player.addMark('ssr_xiebian_jia');
            event.goto(1);
        }
        "step 4"
        event.card=get.cardPile(function(card){
            if(get.type(card,'trick')=='equip') return true;
            return false;
        },'cardPile');
        if(!event.card) {
            event.goto(1);
        }
        "step 5"
        player.line(player,'green');
        player.give(event.card,player);
        "step 6"
        if(!player.hasUseTarget(event.card)){
            //event.card.fix();
            //ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            game.updateRoundNumber();
            event.goto(1);
        }
        'step 7'
        var next=player.chooseUseTarget(event.card);
        if(get.info(event.card).updateUsable=='phaseUse') next.addCount=false;
        event.goto(1);
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                return [1,0.2];
            },
        },
    },
            },
            "ssr_xiebian_fantian":{
                audio:'qiaobian2',
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return event.num>0;
    },
    intro:{
        name:"梵天",
        content:"<li>锁定技，每当你受到一点伤害后，你进行一次判定：若为红桃，你获得一枚“械”标记，否则你随机获得一张延时锦囊牌并可以使用之",
    },
    locked:true,
    mark:true,
    marktext:"梵天",
    forced:true,
    content:function(){
        "step 0"
        event.num=trigger.num;
        "step 1"
        if(event.num<1) event.finish();
        "step 2"
        event.num--;
        player.judge(function(card){
                if(get.suit(card)=='heart') return 2;
            return -0.5;
        }).judge2=function(result){
            return result.bool;
        };
        "step 3"
        if(result.bool){
            player.addMark('ssr_xiebian_jia');
            event.goto(1);
        }
        "step 4"
        event.card=get.cardPile(function(card){
            if(get.type(card,'trick')=='delay') return true;
            return false;
        },'cardPile');
        if(!event.card) {
            event.goto(1);
        }
        "step 5"
        player.line(player,'green');
        player.give(event.card,player);
        "step 6"
        if(!player.hasUseTarget(event.card)){
            //event.card.fix();
            //ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            game.updateRoundNumber();
            event.goto(1);
        }
        'step 7'
        var next=player.chooseUseTarget(event.card);
        if(get.info(event.card).updateUsable=='phaseUse') next.addCount=false;
        event.goto(1);
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                return [1,0.2];
            },
        },
    },
            },
            "ssr_xiebian_xiuluo":{
                audio:"qiaobian3",
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return event.num>0;
    },
    intro:{
        name:"修罗",
        content:"<li>锁定技，每当你受到一点伤害后，你进行一次判定：若为梅花，你获得一枚“械”标记，否则你随机获得一张基本牌并可以使用之",
    },
    locked:true,
    mark:true,
    marktext:"修罗",
    forced:true,
    content:function(){
        "step 0"
        event.num=trigger.num;
        "step 1"
        if(event.num<1) event.finish();
        "step 2"
        event.num--;
        player.judge(function(card){
            if(get.suit(card)=='club') return 2;
            return -0.5;
        }).judge2=function(result){
            return result.bool;
        };
        "step 3"
        if(result.bool){
            player.addMark('ssr_xiebian_jia');
            event.goto(1);
        }
        "step 4"
        event.card=get.cardPile(function(card){
            if(get.type(card,'trick')=='basic') return true;
            return false;
        },'cardPile');
        if(!event.card) {
            event.goto(1);
        }
        "step 5"
        player.line(player,'green');
        player.give(event.card,player);
        "step 6"
        if(!player.hasUseTarget(event.card)){
            //event.card.fix();
            //ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            game.updateRoundNumber();
            event.goto(1);
        }
        'step 7'
        var next=player.chooseUseTarget(event.card);
        if(get.info(event.card).updateUsable=='phaseUse') next.addCount=false;
        event.goto(1);
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                return [1,0.2];
            },
        },
    },
            },
            "ssr_xiebian_shijia":{
                audio:'qiaobian4',
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return event.num>0;
    },
    intro:{
        name:"释迦",
        content:"<li>锁定技，每当你受到一点伤害后，你进行一次判定：若为方块，你获得一枚“械”标记，否则你随机获得一张普通锦囊牌并可以使用之",
    },
    locked:true,
    mark:true,
    marktext:"释迦",
    forced:true,
    content:function(){
        "step 0"
        event.num=trigger.num;
        "step 1"
        if(event.num<1) event.finish();
        "step 2"
        event.num--;
        player.judge(function(card){
            if(get.suit(card)=='diamond') return 2;
            return -0.5;
        }).judge2=function(result){
            return result.bool;
        };
        "step 3"
        if(result.bool){
            player.addMark('ssr_xiebian_jia');
            event.goto(1);
        }
        "step 4"
        event.card=get.cardPile(function(card){
            if(get.type(card,'trick')=='trick') return true;
            return false;
        },'cardPile');
        if(!event.card) {
            event.goto(1);
        }
        "step 5"
        player.line(player,'green');
        player.give(event.card,player);
        "step 6"
        if(!player.hasUseTarget(event.card)){
            //event.card.fix();
            //ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            game.updateRoundNumber();
            event.goto(1);
        }
        'step 7'
        var next=player.chooseUseTarget(event.card);
        if(get.info(event.card).updateUsable=='phaseUse') next.addCount=false;
        event.goto(1);
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                return [1,0.2];
            },
        },
    },
            },
            "ssr_jueqing":{
    trigger:{
        source:"damageBefore",
        player:"damageBefore",
    },
    loced:true,
    forced:true,
    audio:"jueqing",
    check:function(){return false;},
    content:function(){
        trigger.cancel();
        trigger.player.loseHp(trigger.num);
    },
    ai:{
        jueqing:true,
    },
            },
            "ssr_shangshi":{
                subSkill:{
                    use:{
                mark:true,
                marktext:"逝",
                intro:{
                    name:"伤逝",
                    content:"mark",
                },
                sub:true,
                    },
                },
                audio:"shangshi",
    trigger:{
        global:"loseHpEnd",
    },
    filter:function(event,player){
        return event.player.isIn();
    },
    usable:4,
    frequent:true,
    checkx:function(event,player){
        var att1=get.attitude(player,event.player);
        var att2=get.attitude(player,event.source);
        return att1>0&&att2<=0;
    },
    content:function(){
        "step 0"
        if(!player.hasSkill('ssr_shangshi_use')) {
            player.storage.ssr_shangshi_use=0;
            player.addTempSkill('ssr_shangshi_use');
        }
        player.addMark('ssr_shangshi_use');
        trigger.player.chooseToDiscard(trigger.num,'he','伤逝：弃置'+get.cnNumber(trigger.num)+'张牌，或令'+get.translation(player.name)+'摸'+get.cnNumber(trigger.num)+'张牌',lib.filter.cardDiscardable).set('ai',function(card){
            if(get.attitude(trigger.player,player)<0) {
                return 4-get.value(card);
            }else {
                return -1;
            }
        }).setHiddenSkill('ssr_shangshi_use');
        "step 1"
        if(!result.bool) player.draw(trigger.num);
    },
            },
            "ssr_fangzhu":{
    audio:'fangzhu',
    enable:"phaseUse",
    usable:1,
    filterTarget:function(card,player,target){
        return target!=player;
    },
    content:function(){
        "step 0"
        event.cards=get.cards(3);
        "step 1"
        if(event.cards.length>1){
            player.chooseCardButton('令'+get.translation(target.name)+'获得其中任意张牌并令其翻面',true,event.cards,[1,event.cards.length]).set('ai',function(button){
                if(get.attitude(player,target)>0) {
                    return get.value(button);
                }else {
                    return -get.value(button);
                }
            });
        }
        "step 2"
        event.cards=result.links;
        target.chooseControl('确定','取消').set('ai',function(){
            if((event.cards.length<2)&&(!target.isTurnedOver())&&(target.hp+target.countCards('hs',{name:'tao'})>2)) return '确定';
            return '取消';
        }).set('prompt','是否流失一点体力并拒绝被翻面和获得'+get.translation(player.name)+'选择的'+get.cnNumber(event.cards.length)+'张牌？');
        "step 3"
        if(result.control=='取消') {
            target.gain(event.cards,'draw');
            player.line(target,'green');
            game.log(target,'获得了'+get.cnNumber(event.cards.length)+'张牌');
            target.turnOver();
        }else {
            target.loseHp();
        }
    },
    ai:{
        order:3,
        expose:0.3,
        result:{
            target:function(player,target){
                var val=0;
                if(target.hasSkillTag('noturn')) val+=2;
                if(target.classList.contains('turnedover')) {
                    val+=5-Math.min(5,target.countCards('h'))*0.5;
                }else {
                    if(get.attitude(player,target)>0) {
                        val+=1.5-Math.min(5,target.countCards('h'))*0.1;
                    }else {
                        val-=1+Math.min(10,target.countCards('h'))*0.1;
                    }
                }
                return val;
            },
        },
        threaten:1.2,
    },
            },
            "ssr_xingshang":{
    audio:'xingshang',
    derivation:"ssr_jiushi",
    trigger:{
        global:"damage",
    },
    filter:function(event,player){
        if(event.player.hasSkill('ssr_jiushi')) return false;
        if(event.player.hasSkill('rejiushi')) return false;
        if(event.player.hasSkill('rejiushi_mark')) return false;
        return event.player.classList.contains('dead')==false;
    },
    direct:true,
    checkx:function(event,player){
        var att1=get.attitude(player,event.player);
        return att1>0;
    },
    preHidden:true,
    content:function(){
        "step 0"
        player.chooseControl('确定','取消').set('ai',function(){
            if(get.attitude(player,trigger.player)>0) return '确定';
            return '取消';
        }).set('prompt','是否发动〖行殇〗，令'+get.translation(trigger.player.name)+'摸一张牌并获得技能〖酒诗〗？');
        "step 1"
        if(result.control=='确定'){
            if(trigger.player.isTurnedOver()) trigger.ssr_jiushi=true;
            trigger.player.draw();
            trigger.player.addTempSkill('ssr_jiushi',{player:['phaseEnd','die']});
            trigger.player.markSkill('ssr_jiushi');
        }
    },
    ai:{
        expose:0.3,
    },
            },
            "ssr_jiushi":{
    audio:'rejiushi',
    group:["ssr_jiushi_choose","ssr_jiushi_judge","ssr_jiushi_turn"],
    mark:false,
    marktext:"酒诗",
    intro:{
        name:"曲水流觞",
        content:function (storage,player,skill){
            var str='<li>你拥有技能〖酒诗〗直到你的回合结束。';
            return str;
        },
    },
    subSkill:{
        turn:{
            audio:"rejiushi",
    trigger:{
        player:"damageEnd",
    },
    check:function(event,player){
        return player.isTurnedOver();
    },
    filter:function(event,player){
        if(event.ssr_jiushi){
            return player.isTurnedOver();
        }
        return false;
    },
    prompt:function(event,player){
        var str='是否发动【酒诗】，将武将牌翻面并摸一张牌？';
        return str;
    },
    content:function(){
        delete trigger.ssr_jiushi;
        player.turnOver();
        player.draw();
    },
            sub:true,
        },
        judge:{
            trigger:{
        player:"damageBegin3",
    },
    silent:true,
    firstDo:true,
    filter:function(event,player){
        return player.classList.contains('turnedover');
    },
    content:function(){
        trigger.ssr_jiushi=true;
    },
    forced:true,
    popup:false,
            sub:true,
        },
        choose:{
    hiddenCard:function(player,name){
        if(name=='jiu') return !player.isTurnedOver();
        return false;
    },
    audio:"rejiushi",
    enable:"chooseToUse",
    filter:function(event,player){
        if(player.classList.contains('turnedover')) return false;
        return event.filterCard({name:'jiu',isCard:true},player,event);
    },
    content:function(){
        if(_status.event.getParent(2).type=='dying'){
            event.dying=player;
            event.type='dying';
        }
        player.turnOver();
        player.useCard({name:'jiu',isCard:true},player);
    },
    ai:{
        order:5,
        result:{
            player:function(player){
                if(_status.event.parent.name=='phaseUse'){
                    if(player.countCards('h','jiu')>0) return 0;
                    if(player.getEquip('zhuge')&&player.countCards('h','sha')>1) return 0;
                    if(!player.countCards('h','sha')) return 0;
                    var targets=[];
                    var target;
                    var players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(get.attitude(player,players[i])<0){
                            if(player.canUse('sha',players[i],true,true)){
                                targets.push(players[i]);
                            }
                        }
                    }
                    if(targets.length){
                        target=targets[0];
                    }
                    else{
                        return 0;
                    }
                    var num=get.effect(target,{name:'sha'},player,player);
                    for(var i=1;i<targets.length;i++){
                        var num2=get.effect(targets[i],{name:'sha'},player,player);
                        if(num2>num){
                            target=targets[i];
                            num=num2;
                        }
                    }
                    if(num<=0) return 0;
                    var e2=target.getEquip(2);
                    if(e2){
                        if(e2.name=='tengjia'){
                            if(!player.countCards('h',{name:'sha',nature:'fire'})&&!player.getEquip('zhuque')) return 0;
                        }
                        if(e2.name=='renwang'){
                            if(!player.countCards('h',{name:'sha',color:'red'})) return 0;
                        }
                        if(e2.name=='baiyin') return 0;
                    }
                    if(player.getEquip('guanshi')&&player.countCards('he')>2) return 1;
                    return target.countCards('h')>3?0:1;
                }
                if(player==_status.event.dying||player.isTurnedOver()) return 3;
            },
        },
        effect:{
            target:function(card,player,target){
                if(card.name=='guiyoujie') return [0,0.5];
                if(target.isTurnedOver()){
                    if(get.tag(card,'damage')){
                        if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                        if(target.hp==1) return;
                        return [1,target.countCards('h')/2];
                    }
                }
            },
        },
    },
            sub:true,
        },
    },
            },
            "ssr_songwei":{
    audio:'songwei',
    firstDo:true,
    trigger:{
        global:"phaseBefore",
    },
    forced:true,
    zhuSkill:true,
    unique:true,
    skillAnimation:"epic",
    animationColor:"thunder",
    filter:function(event,player){
        return !player.storage.ssr_songwei&&player.hasZhuSkill('ssr_songwei');
    },
    content:function(){
        "step 0"
        player.storage.ssr_songwei=true;
        event.fans=game.filterPlayer(function(current){
            return current.identity=='fan';
        });
        event.weis=game.filterPlayer(function(current){
            return current.group=='wei';
        });
        "step 1"
        for(i=0;i<event.fans.length;i++) {
            event.fans[i].setIdentity('反');
            event.fans[i].node.identity.dataset.color='fan';
            event.fans[i].identityShown=true;
        }
        for(i=0;i<event.weis.length;i++) {
            event.weis[i].draw();
        }
    },
    },
            "ssr_jieliang":{
                subSkill:{
                    cards:{
                        group:['ssr_jieliang_break','ssr_jieliang_dam'],
                        init:function(player){
                            if(!player.storage.ssr_jieliang_cards) player.storage.ssr_jieliang_cards=[];
                        },
                        audio:'duanliang1',
                        trigger:{
                            player:"gainBefore",
                        },
                        charlotte:true,
                        locked:true,
                        forced:true,
                        filter:function (event,player){
                            return event.cards&&event.cards.length>0&&player.countMark('ssr_jieliang_break')>0;
                        },
                        content:function(){
                            "step 0"
                            player.judge(function(card){
                                if(get.suit(card)!='club') return -2;
                                return 1;
                            }).judge2=function(result){
                                return result.bool;
                            };
                            "step 1"
                            if(!result.bool){
                                trigger.cancel();
                            }else {
                                event.finish();
                            }
                            "step 2"
                            var him=(trigger.source&&trigger.source.isIn())?trigger.source:player;
                            player.storage.ssr_jieliang_cards=player.storage.ssr_jieliang_cards.concat(trigger.cards);
                            player.markSkill('ssr_jieliang_cards');
                            player.syncStorage('ssr_jieliang_cards');
                            him.$give(trigger.cards,player,false);
                            him.lose(trigger.cards,ui.special,'toStorage');
                        },
                        mark:false,
                        marktext:"粮",
                        intro:{
                            name:"粮草被截",
                            content:"cards",
                            onunmark:function(storage,player){
                                if(storage&&storage.length){
                                    player.$throw(storage,1000);
                                    game.cardsDiscard(storage);
                                    game.log(storage,'被置入了弃牌堆');
                                 storage.length=0;
                                }
                            },
                        },
                        sub:true,
                    },
                    break:{
                        trigger:{
                            player:"phaseEnd",
                        },
                        priority:-3,
                        forced:true,
                        filter:function (event,player){
                            return true;
                        },
                        content:function(){
                            "step 0"
                            if(player.countMark('ssr_jieliang_break')>0) {
                                player.removeMark('ssr_jieliang_break');
                            }else {
                                player.gain(player.storage.ssr_jieliang_cards,'gain2','fromStorage');
                                player.unmarkAuto('ssr_jieliang_cards',player.storage.ssr_jieliang_cards);
                                player.removeSkill('ssr_jieliang_cards');
                            }
                        },
                        //mark:true,
                        marktext:"截",
                        intro:{
                            name:"兵粮寸断",
                            content:"mark",
                        },
                        sub:true,
                    },
                    dam:{
                        audio:"duanliang1",
                        trigger:{
                            player:["damageBegin4"],
                        },
                        priority:-44,
                        direct:true,
                        filter:function(event,player){
                            return (player.storage.ssr_jieliang_cards&&player.storage.ssr_jieliang_cards.length>0&&event.num>0&&event.source!=undefined);
                        },
                        content:function(){
                            "step 0"
                            trigger.source.chooseCardButton('截粮：是否获得'+get.translation(player.name)+'的至多'+get.cnNumber(trigger.num)+'张“粮”？',player.storage.ssr_jieliang_cards,[1,trigger.num]).set('ai',function(button){
                                if(get.attitude(trigger.source,player)>0&&(player.hp>1||player.countMark('ssr_jieliang_break')<2)) {
                                    return -1;
                                }else return get.value(button);
                            });
                            "step 1"
                            if(result.bool){
                                for(i=0;i<result.links.length;i++){
                                    player.storage.ssr_jieliang_cards.remove(result.links[i]);
                                }
                                trigger.source.gain(result.links,'draw');
                                player.line(trigger.source,'green');
                                game.log(trigger.source,'获得了'+get.cnNumber(result.links.length)+'张牌');
                                player.logSkill(event.name);
                            }
                            "step 2"
                            if(player.storage.ssr_jieliang_cards.length>0) {
                                player.markSkill('ssr_jieliang_cards');
                                player.syncStorage('ssr_jieliang_cards');
                            }else {
                                player.unmarkSkill('ssr_jieliang_cards');
                            }
                        },
                        sub:true,
                    },
                },
                enable:"phaseUse",
                filterCard:function (card){
                    return get.color(card)=='black'&&get.type(card)!='trick'&&get.type(card)!='delay';
                },
                selectCard:function (){
                    return 1;
                },
                filter:function (event,player){
                    return player.countCards('he',{color:'black'})-player.countCards('he',{color:'black',type:'trick'})-player.countCards('he',{color:'black',type:'delay'})>0;
                },
                filterTarget:function (card,player,target){
                    if(player==target) return false;
                    //if(target.hasSkill('ssr_zhenjun_break')) return false;
                    return true;
                },
                content:function (){
                    "step 0"
                    if(!target.hasSkill('ssr_jieliang_cards')) {
                        target.addSkill('ssr_jieliang_cards');
                    }
                    target.addMark('ssr_jieliang_break');
                },
                check:function (card){
                    return 7-get.value(card);
                },
                position:"he",
                ai:{
                    order:3,
                    player:-0.5,
                    result:{
                        target:function (player,target){
                            //if(player.countCards('he',{color:'black'})-player.countCards('he',{color:'black',type:'trick'})-player.countCards('he',{color:'black',type:'delay'})<2) return 0;
                            return Math.min(-target.countCards('h')-target.maxHp+target.hp-Math.max(10-target.countMark('ssr_jieliang_break'),0)*0.5,-1);
                        },
                    },
                    threaten:1.3,
                },
    },
    "ssr_zhiyan":{
    audio:'xhzhiyan',
    preHidden:true,
    trigger:{
        player:"damageEnd",
    },
    filter:function(event,player){
        return true;
    },
    frequent:true,
    priority:-17,
    content:function(){
        "step 0"
        event.card=get.cardPile(function(card){
            if(get.type(card)=='trick') return false;
            if(get.type(card)=='delay') return false;
            if(get.color(card)!='black') return false;
            return true;
        },'cardPile');
        if(!event.card){
            event.finish();
            return;
        }else player.showCards([event.card]);
        "step 1"
        player.gain(event.card,'gain2');
        "step 2"
        if(player.countCards('h')>player.maxHp) {
            player.chooseToDiscard(1,'he',true);
        }
    },
    ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.5];
            },
        },
    },
    },
    "ssr_yinghun":{
    audio:"yinghun",
    trigger:{
        player:"phaseZhunbeiBegin",
    },
    filter:function(event,player){
        return true;
    },
    priority:3,
    direct:true,
    preHidden:true,
    content:function(){
        "step 0"
        if(get.isLuckyStar(player)){
            event.num=6;
            player.throwDice(6);
        }
        else player.throwDice();
        "step 1"
        event.num1=event.num;
        "step 2"
        if(get.isLuckyStar(player)){
            event.num=1;
            player.throwDice(1);
        }
        else player.throwDice();
        "step 3"
        event.num2=event.num;
        "step 4"
        event.dis=Math.abs(event.num1-event.num2);
        event.min=Math.min(event.num1,event.num2);
        player.chooseTarget(get.prompt2('ssr_yinghun'),'是否选择一名角色发动〖英魂〗？（🎲'+event.num1+'：🎲'+event.num2+'）',function(card,player,target){
            return true;
            //return player!=target;
        }).set('ai',function(target){
            var player=_status.event.player;
            if(get.attitude(player,target)>0) {
            if(event.dis==0&&target.countCards('he')==0){
                return 1;
            }
            return 2+get.attitude(player,target)+target.getDamagedHp()+event.min*0.5;
            }else if(get.attitude(player,target)<0) {
            if(event.dis==0){
                return -1;
            }
            return 3-get.attitude(player,target);
            }else return -1;
        }).setHiddenSkill(event.name);
        "step 5"
        if(result.bool){
            //event.num=player.getDamagedHp();
            player.logSkill(event.name,result.targets);
            event.target=result.targets[0];
            if(event.dis==0){
                event.directcontrol=true;
            }
            else{
                var str1='🎲摸'+get.cnNumber(event.num1,true)+'弃'+get.cnNumber(event.num2,true);
                var str2='🎲摸'+get.cnNumber(event.num2,true)+'弃'+get.cnNumber(event.num1,true);
                if(event.num1>event.num2) {
                    var dra=str1;
                    var dis=str2;
                }else {
                    var dra=str2;
                    var dis=str1;
                }
                player.chooseControl(str1,str2,function(event,player){
                    return _status.event.choice;
                }).set('choice',get.attitude(player,event.target)>0?dra:dis).set('prompt','请选择对'+get.translation(event.target.name)+'执行的摸牌弃牌效果');
                event.str=str1;
            }
        }
        else{
            event.finish();
        }
        "step 6"
        if(event.directcontrol||result.control==event.str){
            event.target.draw(event.num1);
            event.target.chooseToDiscard(event.num2,true,'he');
        }
        else{
            event.target.draw(event.num2);
            event.target.chooseToDiscard(event.num1,true,'he');
        }
    },
    ai:{
        expose:0.2,
        threaten:function(player,target){
            return 1.4;
        },
        maixie:true,
    },
    },
    "ssr_polu":{
    audio:'repolu',
    trigger:{
        source:"damageBegin1",
    },
    locked:true,
    priority:12,
    mod:{
        attackFrom:function(from,to,distance){
            return distance-1;
        },
    },
    filter:function(event,player){
        //if(!player.isEmpty(1)) return false;
        if(event.parent.name=='_lianhuan'||event.parent.name=='_lianhuan2') return false;
        if(event.card&&event.card.name=='sha'){
            if(event.player.countCards('h')==0) return true;
        }
        return false;
    },
    forced:true,
    content:function(){
        trigger.num++;
    },
    ai:{
        effect:{
            player:function(card,player,target,current,isLink){
                if(player.isEmpty(1)) {
                    if(card.name=='sha'&&!isLink&&target.countCards('h')==0&&!target.hasSkillTag('filterDamage',null,{
                        player:player,
                        card:card,
                    })) return [1,0,1,-3];
                }
            },
        },
    },
    },
    "ssr_kuangbao":{
    subSkill:{
        forbid:{
            sub:true,
        },
    },
    audio:"baonu",
    marktext:"暴",
    trigger:{
        //source:"damageSource",
        //player:["damageEnd","enterGame"],
        //global:"gameDrawAfter",
                player:"useCardToPlayered",
                target:"useCardToTargeted",
    },
    priority:-2,
    unique:true,
    forced:true,
    filter:function(event,player){
        if(player.countMark('ssr_kuangbao')>5) return false;
        /*if(event.name!='damage') return true;
        return event.num>0&&!player.hasSkill('ssr_kuangbao_forbid'); */
        if(!(event.card.name=='juedou'||event.card.name=='sha')) return false;
        return player==event.target||event.getParent().triggeredTargets3.length==1;
    },
    init:function (player,skill){
                    if(!player.storage.ssr_kuangbao&&player.countMark('ssr_kuangbao')<=0) {
                        player.addMark('ssr_kuangbao',2);
                        player.markSkill('ssr_kuangbao');
                    }
                    if(player.countMark('ssr_kuangbao')>0) player.markSkill('ssr_kuangbao');
    },
    content:function(){
        /*if(trigger.name=='damage') {
            player.addTempSkill('ssr_kuangbao_forbid');
            player.addMark('ssr_kuangbao');
        }else player.addMark('ssr_kuangbao',2);*/
        player.addMark('ssr_kuangbao');
    },
    intro:{
        name:"暴怒",
        content:"mark",
    },
    ai:{
        combo:"ssr_shenfen",
        maixie:true,
        //"maixie_hp":true,
    },
    },
    "ssr_shenfen":{
        derivation:["ssr_zhanshen_lianyu","ssr_zhanshen_xiuluo","ssr_zhanshen_mengyan","ssr_zhanshen_xieshen"],
        skillAnimation:true,
            animationColor:"grey",
            audio:"shenfen",
            trigger:{
                //source:"damageSource",
                //player:["damageEnd","enterGame"],
                //global:"gameDrawAfter",
                player:"useCardToPlayered",
                target:"useCardToTargeted",
            },
            forced:true,
            priority:-3,
            unique:true,
            juexingji:true,

            filter:function(event,player){
                //var num=game.players.length;
                return player.countMark('ssr_kuangbao')>=6&&!player.storage.ssr_shenfen;
            },
            check:function(event,player){
                return true;
            },
            content:function(){
        "step 0"
            player.setBackground('shen_lvbu','character');
            player.flashAvatar('ssr_shenfen','shen_lvbu');
            var num=game.players.length;
        //player.removeMark('ssr_zhanshen',num);
        var equiplist=['lianyu','xiuluo','mengyan','xieshen'];
        var suitlist=['spade','club','heart','diamond'];
        for (i=0;i<equiplist.length;i++) {
            var name='ssr_zhanshen_'+equiplist[i]+'_card';
            player.equip(game.createCard({name:name,suit:suitlist[i],number:13}));
        }
        player.addSkill("ssr_newshenwei");
        game.log(player,'获得了技能','#g〖神威〗')
        player.awakenSkill('ssr_shenfen');
        player.storage.ssr_shenfen=true;
    },
            ai:{
                order:15,
                result:{
                    player:function(player){
                        return 5;
                    },
                },
                threaten:3.5,
            },
                    init:function (player,skill){
                        player.storage.ssr_shenfen=false;

                        //====================炼狱斩戟===================
                        var blockname='lianyu';
                        var name='ssr_zhanshen_'+blockname+'_card';
                        lib.card[name]={
                            skills:['ssr_zhanshen_'+blockname],
                            fullskin:true,
                            type:"equip",
                            image:'ext:祖安武将/card/zhanshen_'+blockname+'.png',
                            color:'black',
                            suit:'spade',
                            number:13,
                            opacity:1,
                            textShadow:'black 0 0 2px',
                            subtype:"equip1",
                            enable:true,
                            selectTarget:-1,
                            filterTarget:function(card,player,target){
                                return target==player;
                            },
                            distance:{
                                attackFrom:-3,
                            },
                            modTarget:true,
                            allowMultiple:false,
                            content:function(){
                                if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
                            },
                            toself:true,
                            ai:{
                                equipValue:9,
                                basic:{
                                    order:15,
                                    useful:15,
                                    equipValue:10,
                                    value:10,
                                },
                                result:{
                                    target:function(player,target,card){
                                        return get.equipResult(player,target,card.name);
                                    },
                                },
                            },
                        };
                        lib.translate[name]="炼狱斩戟";
                        lib.translate[name+'_info']="锁定技，你的【杀】时可以为此额外指定两个目标，且你的【杀】无视目标的防具。";

                        //====================修罗重铠===================
                        var blockname='xiuluo';
                        var name='ssr_zhanshen_'+blockname+'_card';
                        lib.card[name]={
                            skills:['ssr_zhanshen_'+blockname],
                            fullskin:true,
                            type:"equip",
                            image:'ext:祖安武将/card/zhanshen_'+blockname+'.png',
                            color:'black',
                            suit:'club',
                            number:13,
                            opacity:1,
                            textShadow:'black 0 0 2px',
                            subtype:"equip2",
                            enable:true,
                            selectTarget:-1,
                            filterTarget:function(card,player,target){
                                return target==player;
                            },
                            modTarget:true,
                            allowMultiple:false,
                            content:function(){
                                if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
                            },
                            toself:true,
                            ai:{
                                equipValue:9,
                                basic:{
                                    order:15,
                                    useful:15,
                                    equipValue:10,
                                    value:10,
                                },
                                result:{
                                    target:function(player,target,card){
                                        return get.equipResult(player,target,card.name);
                                    },
                                },
                            },
                        };
                        lib.translate[name]="修罗重铠";
                        lib.translate[name+'_info']="锁定技，你最多只能受到一点伤害，你在回合外受到伤害后立即结束当前角色的出牌阶段。";

                        //====================梦魇赤兔===================
                        var blockname='mengyan';
                        var name='ssr_zhanshen_'+blockname+'_card';
                        lib.card[name]={
                            skills:['ssr_zhanshen_'+blockname],
                            fullskin:true,
                            type:"equip",
                            image:'ext:祖安武将/card/zhanshen_'+blockname+'.png',
                            color:'red',
                            suit:'heart',
                            number:13,
                            opacity:1,
                            textShadow:'black 0 0 2px',
                            subtype:"equip4",
                            enable:true,
                            selectTarget:-1,
                            filterTarget:function(card,player,target){
                                return target==player;
                            },
                            distance:{
                                globalFrom:-2,
                            },
                            onEquip:function(){
                                if(!player.isDisabled(3)) player.disableEquip(3);
                            },
                            onLose:function(){
                                if(player.isDisabled(3)) player.enableEquip(3);
                            },
                            modTarget:true,
                            allowMultiple:false,
                            content:function(){
                                if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
                            },
                            toself:true,
                            ai:{
                                equipValue:9,
                                basic:{
                                    order:15,
                                    useful:15,
                                    equipValue:10,
                                    value:10,
                                },
                                result:{
                                    target:function(player,target,card){
                                        return get.equipResult(player,target,card.name);
                                    },
                                },
                            },
                        };
                        lib.translate[name]="梦魇赤兔";
                        lib.translate[name+'_info']="锁定技，你视为废除防御坐骑区，你与其他角色计算距离减二，你造成的伤害均视为火属性且防止即将受到的火属性伤害。";

                        //====================邪神面具===================
                        var blockname='xieshen';
                        var name='ssr_zhanshen_'+blockname+'_card';
                        lib.card[name]={
                            skills:['ssr_zhanshen_'+blockname],
                            fullskin:true,
                            type:"equip",
                            image:'ext:祖安武将/card/zhanshen_'+blockname+'.png',
                            color:'red',
                            suit:'diamond',
                            number:13,
                            opacity:1,
                            textShadow:'black 0 0 2px',
                            subtype:"equip5",
                            enable:true,
                            selectTarget:-1,
                            filterTarget:function(card,player,target){
                                return target==player;
                            },
                            /*onEquip:function(){
                                player.disableJudge();
                            },
                            onLose:function(){
                                player.enableJudge();
                            },*/
                            modTarget:true,
                            allowMultiple:false,
                            content:function(){
                                if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
                            },
                            toself:true,
                            ai:{
                                equipValue:9,
                                basic:{
                                    order:15,
                                    useful:15,
                                    equipValue:10,
                                    value:10,
                                },
                                result:{
                                    target:function(player,target,card){
                                        return get.equipResult(player,target,card.name);
                                    },
                                },
                            },
                        };
                        lib.translate[name]="邪神面具";
                        lib.translate[name+'_info']="锁定技，你的武将牌始终正面朝上，你不能被横置，且不能成为延时锦囊牌和拼点的目标。";
                    },
    },
    "ssr_zhanshen_lianyu":{
        equipSkill:true,
        trigger:{
            player:"useCard1",
        },
        group:'ssr_pojia',
        forced:true,
        firstDo:true,
        filter:function(event,player){
            if(event.card.name!='sha'||get.mode()=='guozhan') return false;
            var card=event.card;
            var range;
            var select=get.copy(get.info(card).selectTarget);
            if(select==undefined){
                if(get.info(card).filterTarget==undefined) return false;
                range=[1,1];
            }
            else if(typeof select=='number') range=[select,select];
            else if(get.itemtype(select)=='select') range=select;
            else if(typeof select=='function') range=select(card,player);
            game.checkMod(card,player,range,'selectTarget',player);
            return range[1]!=-1&&event.targets.length>range[1];
        },
        content:function(){},
        mod:{
            selectTarget:function(card,player,range){
                if(card.name=='sha') range[1]+=2;
            },
        },
    },
    "ssr_zhanshen_xiuluo":{
        equipSkill:true,
        trigger:{
            player:"damageBegin4",
        },
        priority:-2,
        forced:true,
        filter:function(event,player){
            //if(event.num<=1) return false;
            if(player.hasSkillTag('unequip2')) return false;
            if(event.source&&event.source.hasSkillTag('unequip',false,{
                name:event.card?event.card.name:null,
                target:player,
                card:event.card
            })) return false;
            return true;
        },
        content:function(){
            'step 0'
            if(trigger.num>1) trigger.num=1;
            'step 1'
            if(_status.currentPhase!=player) {
                var evt=_status.event.getParent('phaseUse');
                if(evt&&evt.name=='phaseUse'){
                    evt.skipped=true;
                }
            }
        },
        ai:{
            filterDamage:true,
            skillTagFilter:function(player,tag,arg){
                if(player.hasSkillTag('unequip2')) return false;
                if(arg&&arg.player){
                    if(arg.player.hasSkillTag('unequip',false,{
                        name:arg.card?arg.card.name:null,
                        target:player,
                        card:arg.card,
                    })) return false;
                    if(arg.player.hasSkillTag('unequip_ai',false,{
                        name:arg.card?arg.card.name:null,
                        target:player,
                        card:arg.card,
                    })) return false;
                    if(arg.player.hasSkillTag('jueqing',false,player)) return false;
                }
            },
        },
    },
    "ssr_zhanshen_mengyan":{
        equipSkill:true,
        trigger:{
            source:"damageBegin1",
            player:"damageBegin4",
        },
        filter:function(event,player){
            return true;
        },
        priority:2,
        direct:true,
        content:function(){
            "step 0"
            if(trigger.player!=player) {
                trigger.nature='fire';
            }else if(trigger.nature=='fire') {
                trigger.cancel();
            }
        },
        ai:{
            nofire:true,
            effect:{
                target:function(card,player,target,current){
                    if(get.tag(card,'fireDamage')) return 'zerotarget';
                },
            },
        },
    },
    "ssr_zhanshen_xieshen":{
        equipSkill:true,
        trigger:{
            player:["turnOverBefore"],
        },
        priority:25,
        forced:true,
        filter:function(event,player){
            return !player.isTurnedOver();
        },
        content:function(){
            trigger.cancel();
            game.log(player,'取消了翻面');
        },
        mod:{
            targetEnabled:function(card,player,target){
                if(get.type(card)=='delay') return false;
            },
            effect:{
                target:function(card){
                    if(card.name=='tiesuo') return 'zeroplayertarget';
                },
            },
        },
        ai:{
            noCompareTarget:true,
        },
        group:['ssr_zhanshen_xieshen_link'],
        subSkill:{
            link:{
                trigger:{
                    player:"linkBegin",
                },
                forced:true,
                filter:function(event,player){
                    return !player.isLinked();
                },
                content:function(){
                    trigger.cancel();
                },
                sub:true,
            },
        },
    },
                    "ssr_newshenwei":{
                        group:'ssr_newshenwei_die',
                        trigger:{
                            global:["loseAfter","equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
                        },
                        priority:2,
                        forced:true,
                        filter:function(event,player){
                            //if(event.type!='discard') return false;
                            var evt=event.getl(player);
                            if(evt&&(evt.player==player||1==1)) {
                                //if (['useCard'].contains(event.getParent().name)) return false;
                                var sumcard=[];
                                var equiplist=['ssr_zhanshen_lianyu_card','ssr_zhanshen_xiuluo_card','ssr_zhanshen_mengyan_card','ssr_zhanshen_xieshen_card'];
                                if(evt.es&&evt.es.length>0) {
                                    var sumcard=sumcard.concat(evt.es);
                                }
                                if(evt.hs&&evt.hs.length>0) {
                                    var sumcard=sumcard.concat(evt.hs);
                                }
                                if(sumcard&&sumcard.length>0) {
                                    for(i=0;i<sumcard.length;i++){
                                        if(equiplist.contains(sumcard[i].name)) return true;
                                    }
                                }
                            }
                        },
                        init:function(player,skill){
                            player.storage.ssr_newshenwei_equip=[];
                        },
                        content:function(){
                            'step 0'
                            event.num=0;
                            event.cards=[];
                            var evt=trigger.getl(player);
                            var sumcard=[];
                            var equiplist=['ssr_zhanshen_lianyu_card','ssr_zhanshen_xiuluo_card','ssr_zhanshen_mengyan_card','ssr_zhanshen_xieshen_card'];
                            if(evt.es&&evt.es.length>0) {
                                var sumcard=sumcard.concat(evt.es);
                            }
                            if(evt.hs&&evt.hs.length>0) {
                                var sumcard=sumcard.concat(evt.hs);
                            }
                            for(i=0;i<sumcard.length;i++){
                                if(equiplist.contains(sumcard[i].name)) {
                                    event.cards.push(sumcard[i]);
                                    event.num++;
                                }
                            }
                            'step 1'
                            if(!player.hasSkill('ssr_newshenwei_gain')) {
                                player.addSkill('ssr_newshenwei_gain');
                                player.storage.ssr_newshenwei_gain=[];
                            }
                            player.lose(event.cards,ui.special,'toStorage');
                            player.$give(event.cards,player,false);
                            player.storage.ssr_newshenwei_gain=player.storage.ssr_newshenwei_gain.concat(event.cards);
                            player.markSkill('ssr_newshenwei_gain');
                            if(player.hp<1||player.isDying()) event.finish();
                            'step 2'
                            if(player.countMark('ssr_kuangbao')<1) {
                                player.loseHp(event.num);
                                event.finish();
                            }else {
                                if(event.num<=1) {
                                    player.chooseControl('移去标记','流失体力',function(){
                                        if(player.hp>3&&player.countMark('ssr_kuangbao')<4) return '流失体力';
                                        return '移去标记';
                                    }).set('prompt','选择移去标记或者流失体力');
                                }else {
                                    player.chooseCardButton('选择弃置标记的数量',true,event.cards,[0,player.countMark('ssr_kuangbao')]).set('ai',function(button){
                                        var num=ui.selected.buttons.length;
                                        if(player.hp>3&&num>=event.cards-1) {
                                            return 0;
                                        }else {
                                            return 1;
                                        }
                                    });
                                }
                            }
                            'step 3'
                            if(event.num<=1) {
                                if(result.control=='移去标记') {
                                    player.removeMark('ssr_kuangbao');
                                }else {
                                    player.loseHp();
                                }
                            }else {
                                var num1=result.links.length;
                                var num2=event.num-num1;
                                if(num1>0) player.removeMark('ssr_kuangbao',num1);
                                if(num2>0) player.loseHp(num2);
                            }
                        },
                    subSkill:{
                    gain:{
                        trigger:{
                            player:["phaseZhunbeiBegin"],
                        },
                        intro:{
                            name:"神器重铸",
                            content:function (storage,player,skill){
                                return "<li>正在重铸装备："+get.translation(storage);
                            },
                        },
                        mark:true,
                        marktext:"神",
                        priority:-99,
                        forced:true,
                        //silent:true,
                        content:function(){
                            "step 0"
                            var equiplist=player.storage.ssr_newshenwei_gain;
                            //player.gain(player.storage.ssr_newshenwei_gain,'gain2');
                            for(i=0;i<equiplist.length;i++) {
                                player.equip(equiplist[i]);
                            }
                            "step 1"
                            player.storage.ssr_newshenwei_gain=[];
                            player.removeSkill('ssr_newshenwei_gain');
                        },
                        sub:true,
                    },
                            die:{
                                trigger:{
                                    player:["dieBefore"],
                                },
                                priority:131,
                                forced:true,
                                forceDie:true,
                                filter:function(event,player){
                                    return true;
                                },
                                content:function(){
                                    player.discard(player.getCards('e'));
                                },
                                sub:true,
                            },
                    },
    },
        "ssr_jiwu":{
            audio:"jiwu",
            hiddenCard:function(player,name){
                if(name=='jiu') return player.countMark('ssr_kuangbao')>=2;
                return false;
            },
            enable:"chooseToUse",
            filter:function(event,player){
                if(player.countMark('ssr_kuangbao')<3) return false;
                return event.filterCard({name:'jiu',isCard:true},player,event);
            },
            content:function(){
                'step 0'
                player.removeMark('ssr_kuangbao',3);
                'step 1'
                if(_status.event.getParent(2).type=='dying'){
                    event.dying=player;
                    event.type='dying';
                }
                var card=game.createCard('jiu');
                player.useCard(card,player);
                //player.useCard({name:'jiu',isCard:true},player);
            },
            ai:{
                order:5,
                result:{
                    player:function(player){
                if(_status.event.parent.name=='phaseUse'){
                    if(player.countCards('h','jiu')>0) return 0;
                    if(player.getEquip('zhuge')&&player.countCards('h','sha')>1) return 0;
                    if(!player.countCards('h','sha')) return 0;
                    var targets=[];
                    var target;
                    var players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(get.attitude(player,players[i])<0){
                            if(player.canUse('sha',players[i],true,true)){
                                targets.push(players[i]);
                            }
                        }
                    }
                    if(targets.length){
                        target=targets[0];
                    }
                    else{
                        return 0;
                    }
                    var num=get.effect(target,{name:'sha'},player,player);
                    for(var i=1;i<targets.length;i++){
                        var num2=get.effect(targets[i],{name:'sha'},player,player);
                        if(num2>num){
                            target=targets[i];
                            num=num2;
                        }
                    }
                    if(num<=0) return 0;
                    var e2=target.getEquip(2);
                    if(e2){
                        if(e2.name=='tengjia'){
                            if(!player.countCards('h',{name:'sha',nature:'fire'})&&!player.getEquip('zhuque')) return 0;
                        }
                        if(e2.name=='renwang'){
                            if(!player.countCards('h',{name:'sha',color:'red'})) return 0;
                        }
                        if(e2.name=='baiyin') return 0;
                    }
                    if(player.getEquip('guanshi')&&player.countCards('he')>2) return 1;
                    return target.countCards('h')>3?0:1;
                }
                if(player==_status.event.dying||player.isTurnedOver()) return 3;
            },
                },
                effect:{
                    target:function(card,player,target){
                if(card.name=='guiyoujie') return [0,0.5];
                if(target.isTurnedOver()){
                    if(get.tag(card,'damage')){
                        if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                        if(target.hp==1) return;
                        return [1,target.countCards('h')/2];
                    }
                }
            },
        },
    },
    },
    "ssr_dimeng":{
        subSkill:{
            draw:{
                trigger:{
                    player:"phaseDrawBegin2",
                },
                frequent:true,
                filter:function(event,player){
                    return player.countMark("ssr_dimeng_draw")>0&&!event.numFixed;
                },
                mark:true,
                marktext:"盟",
                intro:{
                    name:"盟军盛宴",
                    content:"mark",
                },
                content:function(){
                    trigger.num++;
                    player.removeMark("ssr_dimeng_draw");
                    if(player.countMark("ssr_dimeng_draw")<1) {
                        player.removeSkill("ssr_dimeng_draw");
                    }
                },
                ai:{
                    threaten:1.3,
                },
            },
        },
        audio:'dimeng',
    trigger:{
        player:"phaseZhunbeiBegin",
    },
    priority:2,
    direct:true,
    filter:function(event,player){
        return true;
    },
    content:function(){
        "step 0"
        player.chooseTarget(get.prompt('ssr_dimeng'),'选择交换手牌的角色',2,function(card,player,target){
            return player!=target;
        },function(target){
            var list=[];
                var num=player.countCards('he');
                var players=game.filterPlayer();
                if(ui.selected.targets.length==0){
                    for(var i=0;i<players.length;i++){
                        if(players[i]!=player&&get.attitude(player,players[i])>3) list.push(players[i]);
                    }
                    list.sort(function(a,b){
                        return a.countCards('h')-b.countCards('h');
                    });
                    if(target==list[0]) return get.attitude(player,target);
                    return -get.attitude(player,target);
                }
                else{
                    var from=ui.selected.targets[0];
                    for(var i=0;i<players.length;i++){
                        if(players[i]!=player&&get.attitude(player,players[i])<1) list.push(players[i]);
                    }
                    list.sort(function(a,b){
                        return b.countCards('h')-a.countCards('h');
                    });
                    if(from.countCards('h')>=list[0].countCards('h')) return -get.attitude(player,target);
                    for(var i=0;i<list.length&&from.countCards('h')<list[i].countCards('h');i++){
                        if(list[i].countCards('h')-from.countCards('h')<=num){
                            var count=list[i].countCards('h')-from.countCards('h');
                            if(count<2&&from.countCards('h')>=2) return -get.attitude(player,target);
                            if(target==list[i]) return get.attitude(player,target);
                            return -get.attitude(player,target);
                        }
                    }
                }
        }).set('check',function(card){
        var list=[],player=_status.event.player;
        var num=player.countCards('he');
        var count;
        var players=game.filterPlayer();
        for(var i=0;i<players.length;i++){
            if(players[i]!=player&&get.attitude(player,players[i])>3) list.push(players[i]);
        }
        list.sort(function(a,b){
            return a.countCards('h')-b.countCards('h');
        });
        if(list.length==0) return -1;
        var from=list[0];
        list.length=0;

        for(var i=0;i<players.length;i++){
            if(players[i]!=player&&get.attitude(player,players[i])<1) list.push(players[i]);
        }
        if(list.length==0) return -1;
        list.sort(function(a,b){
            return b.countCards('h')-a.countCards('h');
        });
        if(from.countCards('h')>=list[0].countCards('h')) return -1;
        for(var i=0;i<list.length&&from.countCards('h')<list[i].countCards('h');i++){
            if(list[i].countCards('h')-from.countCards('h')<=num){
                count=list[i].countCards('h')-from.countCards('h');break;
            }
        }
        if(count<2&&from.countCards('h')>=2) return -1;
        if(ui.selected.cards.length<count) return 11-get.value(card);
        return -1;
    });
        "step 1"
        if(result.bool){
            event.num=Math.abs(result.targets[0].countCards('h')-result.targets[1].countCards('h'));
            if(result.targets[0].countCards('h')>result.targets[1].countCards('h')) {
                event.max=result.targets[0];
                event.min=result.targets[1];
            }else {
                event.max=result.targets[1];
                event.min=result.targets[0];
            }
            player.logSkill('ssr_dimeng',result.targets);
        }
        else{
            event.finish();
        }
        "step 2"
        event.max.swapHandcards(event.min);
        if(event.num>0) {
            if(!event.max.hasSkill("ssr_dimeng_draw")) event.max.addSkill("ssr_dimeng_draw");
            event.max.addMark("ssr_dimeng_draw",event.num);
        }
        game.delay();
    },
    ai:{
        threaten:2,
        expose:0.3,
    },
    },
    "ssr_fuhui":{
        subSkill:{
        break:{
            trigger:{
                global:["phaseBegin","die"],
            },
            filter:function (event,player){
        return event.player==player.storage.ssr_fuhui_break;
    },
            forced:true,
            silent:true,
            intro:{
                name:"无言以对",
                content:"你不能使用任何牌。",
            },
            mark:true,
            marktext:"无言",
            content:function(){
        player.removeSkill('ssr_fuhui_break');
    },
            mod:{
                cardSavable:function(card,player){
                    return false;
                    //if(get.color(card)=='red') return false;
                },
                cardEnabled:function(card,player){
                    return false;
                    //if(get.color(card)=='red') return false;
                },
            },
            sub:true,
            popup:false,
        },
    },
        audio:"haoshi",
    enable:"phaseUse",
    usable:1,
    filterTarget:function(card,player,target){
        return player.canCompare(target);
    },
    filter:function(event,player){
        return player.countCards('h')>0;
    },
    content:function(){
        "step 0"
        player.chooseToCompare(target).callback=lib.skill.ssr_tianyi.callback;
        "step 1"
        if(!result.bool){
            event.finish();
        }
        "step 2"
        target.storage.ssr_fuhui_break=player;
        "step 3"
        target.addSkill('ssr_fuhui_break');
    },
    ai:{
        order:function(name,player){
            return 11;
        },
        result:{
            player:function(player){
                //var num=player.countCards('h');
                return -0.5;
            },
            target:function(player,target){
                var num=target.countCards('h');
                return -num;
            },
        },
        threaten:1.2,
    },
    },
    "ssr_zhijian":{
        subSkill:{
            gain:{
                marktext:"谏书",
                mark:true,
                intro:{
                    name:"直言上谏",
                    content:function (storage,player,skill){
                        var cards=player.getCards('h');
                        var list=[];
                        for(i=0;i<cards.length;i++) {
                            if(cards[i].hasGaintag('ssr_zhijian')) list.push(cards[i]);
                        }
                    return '<li>〖直谏〗牌：'+get.translation(list);
                    },
                },
                mod:{
                    cardDiscardable:function(card,player){
                        if(card.hasGaintag('ssr_zhijian')) return false;
                    },
                    "cardEnabled2":function(card,player){
                        if(get.itemtype(card)=='card'&&card.hasGaintag('ssr_zhijian')) {
                        }else return false;
                    },
                },
                trigger:{
                    player:["damageAfter","loseAfter"],
                },
                forced:true,
                popup:false,
                charlotte:true,
                filter:function(event,player){
                    if(player.countCards('h')<1) {
                        var has=false;
                    }else {
                        var cards=player.getCards('h');
                        var has=false;
                        for(i=0;i<cards.length;i++) {
                            if(cards[i].hasGaintag('ssr_zhijian')) has=true;
                        }
                    }
                    return (event.name=='damage'||!has);
                },
                content:function(){
                    player.removeSkill('ssr_zhijian_gain');
                },
                onremove:function(player){
                    player.removeGaintag('ssr_zhijian');
                },
                sub:true,
            },
        },
        audio:'zhijian',
        enable:"phaseUse",
        //usable:1,
        filterCard:true,
        position:"he",
        filterTarget:function(card,player,target){
            return target!=player;
        },
        filter:function(event,player){
            return player.countCards('he')>0;
        },
        check:function(card){
            var num=get.value(card);
            if(_status.event.player.needsToDiscard()){
                return 20-num;
            }else {
                return 7-num;
            }
        },
        discard:false,
        lose:false,
        delay:false,
        content:function(){
            'step 0'
            target.gain(cards,player,'giveAuto');
            'step 1'
            if(!target.hasSkill('ssr_zhijian_gain')) target.addSkill('ssr_zhijian_gain');
            target.addGaintag(cards,'ssr_zhijian');
        },
        ai:{
            order:8,
            expose:0.2,
            result:{
                target:function(player,target){
                    return -1.5;
                },
            },
            threaten:1.1,
        },
    },
    "ssr_guzheng":{
        audio:"guzheng",
            trigger:{
                global:"loseAfter",
            },
            filter:function(event, player) {
                if (event.type != 'discard') return false;
                return event.cards2.length>=2&&event.player.isIn();
            },
            priority:-96,
            direct:true,
            content:function() {
                "step 0"
                if (trigger.delay == false) game.delay();
                "step 1"
                player.chooseCardButton('固政：是否选择一张牌交回给'+get.translation(trigger.player.name)+'？',trigger.cards2,1).set('ai',function(button){
                    if(get.attitude(player,trigger.player)>0) {
                        return get.value(button);
                    }else {
                        return -1;
                    }
                });
                "step 2"
                if(result.bool) {
                    event.togive=result.links[0];
                }else {
                    event.finish();
                }
                "step 3"
                trigger.player.gain(event.togive, 'gain2', 'log');
            },
        ai:{
            expose:0.3,
            threaten:1.1,
        },
    },
    "ssr_zhuji":{
        audio:'leiji',
        forceaudio:true,
        trigger:{
            global:"judgeEnd",
        },
        unique:true,
        zhuSkill:true,
        filter:function(event,player){
            if(event.player==player||event.player.group!='qun') return false;
            if(event.result.suit!='spade'||event.result.number<2||event.result.number>9) return false;
            return player.hasZhuSkill('ssr_zhuji',event.player)&&player.hp<player.maxHp;
        },
        priority:-1,
        direct:true,
        content:function(){
            'step 0'
            trigger.player.chooseBool('是否发动〖助祭〗，令'+get.translation(player)+'回复一点体力？').set('choice',get.attitude(trigger.player,player)>0);
            'step 1'
            if(result.bool){
                player.logSkill('songwei2');
                trigger.player.line(player,'green');
                player.recover();
            }
        },
    },
    "ssr_guidao":{
        audio:'guidao',
        enable:"phaseUse",
        usable:1,
        filter:function(event,player){
            return player.countCards('he')>0;
        },
        filterCard:true,
        filterTarget:function(card,player,target){
            return target!=player&&!target.getStorage('ssr_guidao_zhou').length&&!target.hasSkill('ssr_guidao_zhou')&&!target.hasSkill('ssr_guidao');
        },
        check:function(card){
            var player=_status.event.player;
            if(player.hasSkill('ssr_huangtian')) {
                if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) {
                    return 10-get.value(card);
                }else {
                    return -1;
                }
            }else if(player.hasSkill('ssr_houtu')) {
                if(get.suit(card)=='heart'&&get.number(card)>1&&get.number(card)<10) {
                    return 10-get.value(card);
                }else {
                    return -1;
                }
            }else if(player.hasSkill('ssr_cangsheng')) {
                if(get.suit(card)=='club'&&get.number(card)>1&&get.number(card)<10) {
                    return 10-get.value(card);
                }else {
                    return -1;
                }
            }else return 6-get.value(card);
        },
        position:"he",
        discard:false,
        toStorage:true,
        prepare:"give",
        content:function(){
            if(!target.storage.ssr_guidao_zhou_markcount) target.storage.ssr_guidao_zhou_markcount=0;
            target.markAuto('ssr_guidao_zhou',cards);
            target.addSkill('ssr_guidao_zhou');
        },
        ai:{
            order:1,
            result:{
                target:-1,
            },
        },
        group:["ssr_guidao_judge"],
        subSkill:{
            zhou:{
                audio:"zhoufu",
                trigger:{
                    player:"judgeBefore",
                },
                forced:true,
                filter:function(event,player){
                    return !event.directresult&&event.player.getStorage('ssr_guidao_zhou').length;
                },
                priority:-2,
                logTarget:"player",
                content:function(){
                    var cards=[trigger.player.getStorage('ssr_guidao_zhou')[0]];
                    trigger.directresult=cards[0];
                    trigger.player.unmarkAuto('ssr_guidao_zhou',cards);
                    trigger.player.removeSkill('ssr_guidao_zhou');
                },
                sub:true,
                mark:true,
                marktext:"咒",
                intro:{
                    name:"咒缚",
                    content:"cards",
                    onunmark:function(storage,player){
                        if(storage&&storage.length){
                            player.$throw(storage,1000);
                            game.cardsDiscard(storage);
                            game.log(storage,'被置入了弃牌堆');
                            storage.length==0;
                        }
                        delete ssr_guidao_zhou;
                    },
                },
            },
            judge:{
                trigger:{
                    player:"judgeBefore",
                },
                //usable:1,
                audio:'guidao',
                frequent:true,
                priority:-1,
                //unique:true,
                content:function(){
                    "step 0"
                    event.cards=get.cards(2);
                    player.chooseCardButton(true,event.cards,'鬼道：选择一张牌作为你'+trigger.judgestr+'的判定结果').ai=function(button){
                        if(get.attitude(player,trigger.player)>0){
                            return 1+trigger.judge(button.link);
                        }
                        if(get.attitude(player,trigger.player)<0){
                            return 1-trigger.judge(button.link);
                        }
                        return 0;
                    };
                    "step 1"
                    if(result.bool){
                        //player.logSkill('ssr_guidao',trigger.player);
                        var card=result.links[0];
                        event.cards.remove(card);
                        trigger.directresult=card;
                    }else {
                        event.finish();
                    }
                    "step 2"
                    var first = ui.cardPile.firstChild;
                    var cards = event.cards;
                    for (var i = 0; i < cards.length; i++) {
                        ui.cardPile.insertBefore(cards[i], first);
                    }
                },
            },
        },
    },
    "ssr_huangtian":{
        audio:"huangtian",
        trigger:{
            global:"phaseBegin",
        },
        usable:1,
        priority:109,
        filter:function(event,player){
            return event.player.canAddJudge({name:'shandian'});
            //return event.player.countCards('j',{name:'shandian'})<1;
        },
        forced:true,
        preHidden:true,
        content:function(){
            "step 0"
            trigger.player.addJudge(game.createCard('shandian'));
            "step 1"
            player.gain(game.createCard({name:'sha',nature:'thunder',suit:'spade'}));
        },
        ai:{
            threaten:1.1,
        },
        group:'ssr_huangtian_sha',
        subSkill:{
            sha:{
                audio:'huangtian',
                shaRelated:true,
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
                    return get.attitude(player,event.target)<=0;
                },
                filter:function(event,player){
                    return event.card.name=='sha'&&get.nature(event.card)=='thunder';
                },
                forced:true,
                logTarget:"target",
                preHidden:true,
                content:function(){
                    "step 0"
                        trigger.getParent().directHit.add(trigger.target);
                },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
                        if(get.attitude(player,arg.target)>0||arg.card.name!='sha'||get.nature(arg.card)!='thunder') return false;
                    },
                },
                mod:{
                    targetInRange:function(card,player,target){
                        if(card.name=='sha'&&get.nature(card)=='thunder') return true;
                    },
                },
                sub:true,
            },
        },
    },
    "ssr_houtu":{
        audio:"yingbing",
        trigger:{
            global:"phaseBegin",
        },
        usable:1,
        priority:108,
        filter:function(event,player){
            return event.player.canAddJudge({name:'huoshan'});
            //return event.player.countCards('j',{name:'huoshan'})<1;
        },
        forced:true,
        preHidden:true,
        content:function(){
            "step 0"
            trigger.player.addJudge(game.createCard('huoshan'));
            "step 1"
            player.gain(game.createCard({name:'sha',nature:'fire',suit:'heart'}));
        },
        ai:{
            threaten:1.1,
        },
        group:'ssr_houtu_sha',
        subSkill:{
            sha:{
                audio:'yingbing',
                shaRelated:true,
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
                    return get.attitude(player,event.target)<=0;
                },
                filter:function(event,player){
                    return event.card.name=='sha'&&get.nature(event.card)=='fire';
                },
                forced:true,
                logTarget:"target",
                preHidden:true,
                content:function(){
                    "step 0"
                        trigger.getParent().directHit.add(trigger.target);
                },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
                        if(get.attitude(player,arg.target)>0||arg.card.name!='sha'||get.nature(arg.card)!='fire') return false;
                    },
                },
                mod:{
                    targetInRange:function(card,player,target){
                        if(card.name=='sha'&&get.nature(card)=='fire') return true;
                    },
                },
                sub:true,
            },
        },
    },
    "ssr_cangsheng":{
        audio:"fangtong",
        trigger:{
            global:"phaseBegin",
        },
        usable:1,
        priority:107,
        filter:function(event,player){
            return event.player.canAddJudge({name:'hongshui'});
            //return event.player.countCards('j',{name:'hongshui'})<1;
        },
        forced:true,
        preHidden:true,
        content:function(){
            "step 0"
            trigger.player.addJudge(game.createCard('hongshui'));
            "step 1"
            player.gain(game.createCard({name:'sha',nature:'ice',suit:'club'}));
        },
        ai:{
            threaten:1.1,
        },
        group:'ssr_cangsheng_sha',
        subSkill:{
            sha:{
                audio:'fangtong',
                shaRelated:true,
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
                    return get.attitude(player,event.target)<=0;
                },
                filter:function(event,player){
                    return event.card.name=='sha'&&get.nature(event.card)=='ice';
                },
                forced:true,
                logTarget:"target",
                preHidden:true,
                content:function(){
                    "step 0"
                        trigger.getParent().directHit.add(trigger.target);
                },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
                        if(get.attitude(player,arg.target)>0||arg.card.name!='sha'||get.nature(arg.card)!='ice') return false;
                    },
                },
                mod:{
                    targetInRange:function(card,player,target){
                        if(card.name=='sha'&&get.nature(card)=='ice') return true;
                    },
                },
                sub:true,
            },
        },
    },
    "ssr_zhuhai":{
        audio:'zhuhai',
        trigger:{
            global:"phaseJieshuBegin",
        },
        direct:true,
        filter:function(event,player){
            return player!=event.player&&event.player.getHistory('sourceDamage').length>0&&event.player.isIn()&&player.countCards('h')>0;
        },
        content:function(){
            'step 0'
            player.chooseCard('h',function(card,player){
                if(!game.checkMod(card,player,'unchanged','cardEnabled2',player)) return false;
                return player.canUse(get.autoViewAs({name:'sha'},'h'),_status.event.getTrigger().player,false);
            },get.prompt2('ssr_zhuhai'),'诛害：选择一张手牌当做【杀】对'+get.translation(trigger.player)+'使用').set('ai',function(card){
                var player=_status.event.player;
                return get.effect(_status.event.getTrigger().player,get.autoViewAs({name:'sha'},'h'),player,player)/Math.max(1,get.value(card));
            });
            'step 1'
            if(result.bool){
                player.useCard({name:'sha'},result.cards,'rezhuhai',trigger.player,false);
            }
        },
    },
    "ssr_yijian":{
        derivation:['ssr_wuyan','ssr_wolong'],
        subSkill:{
            log:{
                limited:true,
                skillAnimation:true,
                animationColor:"green",
                sub:true,
            },
            mark:{
                mark:true,
                marktext:'遗荐',
                intro:{
                    content:'已发动',
                },
            },
        },
        trigger:{
            target:"useCardToTargeted",
        },
        filter:function(event,player){
            if(player.storage.ssr_yijian_limited) return false;
            if(event.targets&&event.targets.length>1) return false;
            if(event.card&&event.player!=player) return (get.type(event.card)=='trick'||get.type(event.card)=='delay');
        },
        init:function(player){
            player.storage.ssr_yijian_limited=false;
        },
        forced:true,
        audio:'jianyan',
        priority:2,
        content:function(){
            'step 0'
            player.addMark('ssr_yijian');
            'step 1'
            if(player.countMark('ssr_yijian')>2) {
                trigger.cancel();
                player.logSkill('ssr_yijian_log');
                player.awakenSkill('ssr_yijian');
                player.loseMaxHp();
                player.addSkill('ssr_wuyan');
                player.addSkill('ssr_yijian_mark');
                player.storage.ssr_yijian_limited=true;
                player.chooseTarget('是否令一名其他角色获得技能〖卧龙〗？',1,function(card,player,target){
                    return player!=target;
                },function(target){
                    return get.attitude(player,target)-1;
                });
            }else {
                event.finish();
            }
            'step 2'
            player.removeMark('ssr_yijian',player.countMark('ssr_yijian'));
            if(result.bool) {
                var target=result.targets[0];
                target.addSkill('ssr_wolong');
            }
        },
        marktext:"言",
        intro:{
            name:"荐言",
            content:"mark",
        },
    },
    "ssr_wuyan":{
        audio:"wuyan",
        trigger:{
            target:"useCardToBefore",
            player:"useCardToBefore",
        },
        forced:true,
        priority:25,
        check:function(event,player){
            return get.effect(event.target,event.card,event.player,player)<0;
        },
        filter:function(event,player){
            if(!event.target) return false;
            if(event.player==player&&event.target==player) return false;
            return (get.type(event.card)=='trick'||get.type(event.card)=='delay');
        },
        content:function(){
            trigger.cancel();
        },
        ai:{
            effect:{
                target:function(card,player,target,current){
                    if((get.type(card)=='trick'||get.type(card)=='delay')&&player!=target) return 'zeroplayertarget';
                },
                player:function(card,player,target,current){
                    if((get.type(card)=='trick'||get.type(card)=='delay')&&player!=target) return 'zeroplayertarget';
                },
            },
        },
    },
    "ssr_wolong":{
        derivation:['huoji','kanpo'],
        mark:true,
        locked:true,
        zhuanhuanji:true,
        marktext:"☯",
        intro:{
            content:function(storage,player,skill){
                if(player.storage.ssr_wolong==true) return '阴·看破：你可以将你的任意一张黑色手牌当做【无懈可击】使用。';
                return '阳·火计：出牌阶段，你可以将你的任意一张红色手牌当作【火攻】使用。';
            },
        },
        priority:56,
        audio:'cangzhuo',
        trigger:{
            player:"phaseZhunbeiBegin",
        },
        forced:true,
        content:function(){
            'step 0'
            if(player.hasSkill('huoji')) player.removeSkill('huoji');
            if(player.hasSkill('kanpo')) player.removeSkill('kanpo');
            player.changeZhuanhuanji('ssr_wolong');
            /*if(player.storage.ssr_wolong!=true){
                player.loseMaxHp();
            }
            else{
                player.loseHp();
            }*/
            'step 1'
            if(player.storage.ssr_wolong!=true){
                player.addSkill('huoji');
            }
            else{
                player.addSkill('kanpo');
            };
        },
        ai:{
            fireAttack:true,
            halfneg:true,
            threaten:1.05,
        },
    },
    // ---------------------------------------标包技能------------------------------------------//
        },
        translate:{
            hpunshow:"战危",
            "hpunshow_info":"",
            thunderunshow:"闪电",
            "thunderunshow_info":"",
            huoshanunshow:"火山",
            "huoshanunshow_info":"",
            hongshuiunshow:"洪水",
            "hongshuiunshow_info":"",
            fuleiunshow:"浮雷",
            "fuleiunshow_info":"",
            norecover:"京城",
            "norecover_info":"",
            jingcheng:"京城",
            "jingcheng_info":"",
            nopha:"京城",
            "nopha_info":"",
            nodraw:"京城",
            "nodraw_info":"",
            nodam:"京城",
            "nodam_info":"",
            protecting:"京城",
            "protecting_info":"",
            shanres:"京城",
            "shanres_info":"",
            qunxiongkill:"霸主",
            "qunxiongkill_info":"",
            bakill:"霸主",
            "bakill_info":"",
            batime:"霸主",
            "batime_info":"",
            guanfu:"官府",
            "guanfu_info":"",
            hellfire:"官府",
            "hellfire_info":"",
            "zuan_guanbing":"官兵",
            "zuan_guanbing_info":"",
            "zuan_panjun":"叛军",
            "zuan_panjun_info":"",
            unre:"官府",
            "unre_info":"",
            firedam:"官府",
            "firedam_info":"",
            "firedam2":"官府",
            "firedam2_info":"",
            turnoverfalse:"京城",
            "turnoverfalse_info":"",
            notarget:"官府",
            "notarget_info":"",
            "guifu_fire":"鬼符",
            "guifu_fire_info":"",
            "guifu_dam":"鬼符",
            "guifu_dam_info":"",
            "guifu_nei":"鬼符",
            "guifu_nei_info":"",
            "renxin_dam":"人心",
            "renxin_dam_info":"",
            "renxin_add":"人心",
            "renxin_add_info":"",
            "renxin_draw":"人心",
            "renxin_draw_info":"",
            maxlevel:"号令",
            "maxlevel_info":"",
            levelcard:"号令",
            "levelcard_info":"",
            canghaizhu:"沧海",
            "canghaizhu_info":"",
            huanhai:"幻海",
            "huanhai_info":"",
            huanhaicls:"幻海",
            "huanhaicls_info":"",
            qiyue:"契约",
            "qiyue_info":"",
            jianghun:"将魂",
            "jianghun_info":"",
            hunskill:"将魂",
            "hunskill_info":"",
            jianghuncold:"将魂",
            "jianghuncold_info":"",
            revivehun:"重生",
            "revivehun_info":"",
            jiwuskill:"极武",
            "jiwuskill_info":"",
            taoluo:"桃铸",
            "taoluo_info":"",
            dis:"京城",
            "dis_info":"",
            nolink:"京城",
            "nolink_info":"",
            plusdistance:"号令",
            "plusdistance_info":"",
            "ansha_nei":"暗杀",
            "ansha_nei_info":"",
            "ansha_zhong":"暗杀",
            "ansha_zhong_info":"",
            qunxiongdraw:"霸主",
            "qunxiongdraw_info":"",
            qunxiongdis:"霸主",
            "qunxiongdis_info":"",
            qunxiongsha:"霸主",
            "qunxiongsha_info":"",
            anyezhu:"暗夜",
            "anyezhu_info":"",
            "zuan_hudun":"元气",
            "zuan_hudun_info":"",
            "yuanqi_landun_detect":"免伤",
            "yuanqi_landun":"蓝盾",
            "yuanqi_landun_info":"你的护盾消失后，你免疫多余的伤害，并且直到下回合开始，你免疫一次伤害。",
            "yuanqi_huodun":"火盾",
            "yuanqi_huodun_info":"当你即将受到火属性的伤害时，你免疫此伤害。",
            "yuanqi_dudun":"毒盾",
            "yuanqi_dudun_info":"当你即将受到【毒】影响或流失体力时，你免疫此【毒】或体力流失。",
            "yuanqi_cidun":"刺盾",
            "yuanqi_cidun_info":"当受到与你距离不大于一的角色除【杀】外造成，或没有来源的伤害时，你防止此伤害。",
            "yuanqi_xuedun":"血盾",
            "yuanqi_xuedun_info":"你获得一点体力上限，并回复一点体力。（当你失去此天赋时，你减少一点体力上限）",
            "yuanqi_hudun":"护盾",
            "yuanqi_hudun_info":"你获得一点护盾上限，并恢复一点护盾。（当你失去此天赋时，你减少一点护盾上限）",
            "yuanqi_suidun":"碎盾",
            "yuanqi_suidun_info":"当你的护盾受到攻击后，伤害来源弃一张牌，本回合内你不能再受到伤害。",
            "yuanqi_zishou":"紫手",
            "yuanqi_zishou_info":"当一名其他角色使用【杀】指定你为目标时，其需弃置一张手牌，否则此【杀】对你无效。",
            "yuanqi_yaoshui":"药水",
            "yuanqi_yaoshui_info":"当你对自己使用【桃】时，你令此【桃】能额外回复一点体力。",
            "yuanqi_xilan":"吸蓝",
            "yuanqi_xilan_info":"你的回合内，当有一名其他角色进入濒死状态时，你摸两张牌。",
            "yuanqi_xixue":"吸血",
            "yuanqi_xixue_info":"每当你造成一点伤害后，你可进行一次判定：若为红色，你回复一点体力。",
            "yuanqi_xuli":"蓄力",
            "yuanqi_xuli_info":"回合结束阶段，若你于本回合的出牌阶段内没有过使用或打出过【杀】，则你摸两张牌。",
            "yuanqi_xiandan":"霰弹",
            "yuanqi_xiandan_info":"当你使用一张【杀】指定一名角色作为目标后，你可为此【杀】额外指定一个目标。",
            "yuanqi_miaozhun":"瞄准",
            "yuanqi_miaozhun_info":"每当你使用【杀】指定目标后，你进行判定：若为黑色，则此【杀】不可被闪避。",
            "yuanqi_jiguang":"激光",
            "yuanqi_jiguang_info":"当你即将对一名角色造成无属性伤害时，你令此伤害变为雷属性，你造成雷属性伤害时令目标弃置一张牌。",
            "yuanqi_fanshe":"折射",
            "yuanqi_fanshe_info":"每回合限一次，当你的【杀】被闪避后，你可为此【杀】指定另一个目标。",
            "yuanqi_yuansu":"元素",
            "yuanqi_yuansu_info":"你造成属性伤害时进行一次判定：若结果为黑色，你令此伤害加一。",
            "yuanqi_chuantou":"穿透",
            "yuanqi_chuantou_info":"你无视场上所有其他角色的防具，所有其他角色的防具对你无法产生效果。",
            "yuanqi_fangyu":"防御",
            "yuanqi_fangyu_info":"你最多只能受到一点伤害，最多只能流失一点体力。",
            "yuanqi_xiudun":"修盾",
            "yuanqi_xiudun_info":"你每回合开始时恢复护盾，不受到恢复的条件限制。",
            "zuan_gaindun":"天赋",
            "zuan_gaindun_info":"",
            "yuanqi_xuanze":"选择",
            "yuanqi_xuanze_info":"当你在选择天赋的过程中，你可额外增加两个可选择的选项。",
            "yuanqi_yiwang":"遗忘",
            "yuanqi_yiwang_info":"你选择遗忘并且删除一个天赋，你的下个回合开始时你可重新选择一次天赋。",
            "yuanqi_shangdian":"商店",
            "yuanqi_shangdian_info":"你的摸牌阶段开始时，你令你摸牌的数量增加一张。",
            "yuanqi_bingdun":"冰盾",
            "yuanqi_bingdun_info":"你的武将牌始终正面向上，你移除你的判定区。（失去此天赋后你恢复判定区）",
            "yuanqi_jinzhan":"近战",
            "yuanqi_jinzhan_info":"当你与其他角色计算距离时，你令你与该角色计算的距离减少一。",
            "yuanqi_lengque":"冷却",
            "yuanqi_lengque_info":"每个角色的回合内，你的限定次数的技能可以多使用一次。",
            "yuanqi_nengliang":"能量",
            "yuanqi_nengliang_info":"你的弃牌阶段开始时，你的手牌上限增加三张。",
            "yuanqi_suji":"速击",
            "yuanqi_suji_info":"你的出牌阶段内，你可使用【杀】的次数上限加一。",
            "yuanqi_leidun":"雷盾",
            "yuanqi_leidun_info":"当你即将受到雷属性的伤害时，你免疫此伤害。",
            "yuanqi_zhenshang":"真伤",
            "yuanqi_zhenshang_info":"你即将造成伤害时，你令你造成的伤害无视伤害目标的护盾。",
            "firedam3":"官府",
            "firedam3_info":"",
            "yuanqi_diaoxiang":"雕像",
            "yuanqi_diaoxiang_info":"你视为拥有当前的主公技，若场上没有主公，则其他同势力角色可在其回合内交给你牌。",
            "yuanqi_diaoxiang2":"雕像",
            "yuanqi_diaoxiang2_info":"你可以将手牌交给拥有〖雕像〗天赋的角色。",
            "yuanqi_taoyi":"逃逸",
            "yuanqi_taoyi_info":"当你与其他角色计算距离时，你令该角色与你计算距离增加一。",
            "yuanqi_fantan":"反弹",
            "yuanqi_fantan_info":"当你使用【闪】闪避了一名角色对你使用的【杀】后，你视为对其使用此【杀】。",
            "yuanqi_xuexiang":"血箱",
            "yuanqi_xuexiang_info":"当你的手牌或装备牌中存在红桃牌时，你可以将其当做【桃】使用。",
            "yuanqi_qianghua":"强化",
            "yuanqi_qianghua_info":"出牌阶段，你可以展示一张未强化过的标准包/军争包/SP包中的防具牌，对其进行强化。",
            "yuanqi_shuangwu":"双武",
            "yuanqi_shuangwu_info":"当你失去装备区的武器牌时，你保留该武器的技能直到你失去下一张武器牌。",
            "yuanqi_chongwu":"宠物",
            "yuanqi_chongwu_info":"当你即将受到伤害时，你区域内的坐骑牌会替你抵挡等量的伤害。",
            "yuanqi_guidun":"归盾",
            "yuanqi_guidun_info":"当你的护盾受到伤害后，你获得等伤害的量的牌。",
            "yuanqi_shixue":"嗜血",
            "yuanqi_shixue_info":"当你受到伤害后，直到你的下回合结束，你的【杀】不可被闪避。",
            "yuanqi_kuangbao":"狂暴",
            "yuanqi_kuangbao_info":"每当你的【杀】造成一点伤害后，你摸一张牌。",
            "yuanqi_zhadan":"炸弹",
            "yuanqi_zhadan_info":"当一名角色死亡时，你可以立即令一名其他角色受到随机一至两点火焰伤害。",
            "yuanqi_jindun":"金盾",
            "yuanqi_jindun_info":"你每有两张手牌时，你的护盾上限增加一。（最多增加三点）",
            "ssr_qianxun":"谦逊",
            "ssr_qianxun_info":"当其他角色对你使用普通锦囊牌或延时锦囊牌时，若你是此牌的唯一目标，你可以将手牌调整至一张。",
            "ssr_jueji":"绝计",
            "ssr_jueji_info":"当你的手牌数量为一的时候，你可以将此牌当做任意一张基本牌或普通锦囊牌使用并摸一张牌。（你的回合内或者回合外，同名的卡牌各只能使用或打出一次）",
            "ssr_zhiheng":"制衡",
            "ssr_zhiheng_info":"出牌阶段，你可以弃置任意张牌，然后令一名角色摸等量的牌。（每名角色限一次）",
            "ssr_jiuyuan":"救援",
            "ssr_jiuyuan_info":"主公技，当你进入濒死状态时，其他吴势力角色可以依次令你摸一张牌。",
            "ssr_longdan":"龙胆",
            "ssr_longdan_info":"锁定技，游戏开始时，你获得两枚“龍”标记；你的回合外，当你使用或打出一张非转换的牌时，你获得一枚“龍”标记；你的“龍”标记可以当【杀】或【闪】使用或打出。",
            "ssr_pozhen":"破阵",
            "ssr_pozhen_info":"当你因〖龙胆〗使用一张牌后，你可弃置此牌指定的目标的一张牌；当你因〖龙胆〗打出一张牌后，你可以弃置当前回合角色的一张牌。",
            "ssr_tianxing_old":"天星",
            "ssr_tianxing_info":"你的回合开始时，你可翻开牌堆顶的七张牌，你选择并获得其中一张，然后将剩下的牌按原来顺序放回牌堆顶。",
            "ssr_tianxing":"天星",
            "ssr_tianxing_info":"你的回合内，当一名角色进行判定、或你的回合外，当你进行判定时：在判定牌生效前，你可以打出一张牌替换该判定牌。",
            "ssr_kongcheng":"空城",
            "ssr_kongcheng_info":"锁定技，当你的手牌中没有一种种类的牌时，你不能成为该种类牌的目标。",
            "ssr_tuxi":"突袭",
            "ssr_tuxi_info":"陨星技，锁定技，游戏开始时，你获得三枚“袭”标记；摸牌阶段，你可以弃置任意枚“袭”标记并获得任意名角色的手牌区和装备区的所有牌。",
            "ssr_mubing":"募兵",
            "ssr_mubing_info":"当你受到伤害后，你可以跳过你的下一个弃牌阶段。",
            "ssr_qixi":"奇袭",
            "ssr_qixi_info":"每当你失去一张黑色的牌时，你可弃置一名角色区域内的一张牌，若你因此弃置了该角色的最后一张手牌，你对该角色造成一点伤害。",
            "ssr_tieji":"铁骑",
            "ssr_tieji_info":"当你使用【杀】指定一名角色为目标后，你可以翻开牌堆顶的一张牌并令该角色的非锁定技失效直到回合结束，若你的武将牌上拥有此花色，则你令此【杀】不可被闪避，否则将此牌置于你的武将牌上。",
            "ssr_zhuiji":"追击",
            "ssr_zhuiji_info":"锁定技，你计算与其他角色的距离时-X，当你对距离一以内的角色造成伤害后，你可以获得该角色的一张牌。（X为你的已失体力值）",
            "ssr_yingzi":"英姿",
            "ssr_yingzi_info":"锁定技，摸牌阶段摸牌时，你额外摸一张牌，你的手牌上限始终为四。",
            "ssr_yeyan":"业炎",
            "ssr_yeyan_info":"当你即将受到火焰伤害时，你可以弃置一张牌并使此伤害减一；当你即将造成火焰伤害时，你可以弃置一张牌并使此伤害加一。",
            "ssr_fanjian":"反间",
            "ssr_fanjian_info":"其他角色的摸牌阶段开始时，若你有手牌，你须选择一张手牌，然后选择一项：隐藏此牌，将此牌移出游戏，下个角色的摸牌阶段开始时你重新获得此牌；发动反间，你将此牌置于牌堆顶，然后你按任意顺序调整牌堆顶的三张牌。若该角色使用你置于牌堆中的牌，你可令此牌无效，你对该角色造成一点火焰伤害并回收此牌，若如此做，直到你的下个回合开始，你不能再选择“发动反间”选项。（你在使用此技能的过程中，其他角色不能看到你的行为）",
            "ssr_rende":"仁德",
            "ssr_rende_info":"出牌阶段，你可以将任意张手牌交给其他角色。每当你以此法给出第三张牌时，你选择视为使用一张【桃园结义】或回复两点体力。你的【桃园结义】可以任意选择目标。",
            "ssr_shichou":"誓仇",
            "ssr_shichou_info":"当你使用【杀】指定一名角色为目标后，你可以进行一次判定：该角色不能使用或打出与判定结果花色相同的牌直到你的回合开始。",
            "ssr_jijiang":"激将",
            "ssr_jijiang_info":"你的回合结束阶段，若你于本回合的出牌阶段内没有过使用过【杀】，则你可以指定一名其他蜀势力的角色：该角色的下个回合内可以额外使用一张【杀】，且视为拥有技能〖誓仇〗。",
            "ssr_qiangxi":"强袭",
            "ssr_qiangxi_info":"锁定技，游戏开始时，你获得两枚“戟”标记；你每受到一点伤害或失去一张武器牌后，你获得一枚“戟”标记。出牌阶段限两次，你可弃置一枚“戟”标记并对一名其他角色造成一点伤害。",
            "ssr_yunchou":"运筹",
            "ssr_yunchou_info":"每轮每种类型的牌限一次，你可以将这种类型的一张牌当作任意一张锦囊牌使用。",
            "ssr_tianyun":"天陨",
            "ssr_tianyun_info":"锁定技，当你的判定牌生效后，你可以获得之；每回合开始时你须进行一次判定，若为黑桃2~9，你受到一点无来源的雷属性伤害。",
            "ssr_yice":"遗策",
            "ssr_yice_info":"每当你受到一点伤害时，在结算完毕前，你可以从牌堆中随机获得三张锦囊牌，然后将其分配给任意角色。",
            "ssr_jianxiong":"奸雄",
            "ssr_jianxiong_info":"当你受到伤害后，你可以获得对你造成伤害的牌，然后你可以弃置一张手牌并移动场上的一张牌。",
            "ssr_hujia":"护驾",
            "ssr_hujia_info":"主公技，场上一名其他魏势力角色进入濒死状态时，其可以令你摸两张牌。",
            "ssr_zhujiu":"煮酒",
            "ssr_zhujiu_info":"每回合限一次，当一名角色需要使用一张【酒】时，其可以向你发出请求：你可以打出一张黑色手牌，视为该角色使用了一张【酒】。",
            "ssr_wushuang":"无双",
            "ssr_wushuang_info":"锁定技，当你使用【杀】或【决斗】指定目标后，你令此牌需要依次使用或打出两张【闪】或【杀】响应。",
            "ssr_zhanshen":"战神",
            "ssr_zhanshen_info":"锁定技，游戏开始时你获得两枚“神”标记，你每造成或受到一点伤害后，你获得一枚“神”标记；觉醒技，出牌阶段，你可以弃置X枚“神”标记，将你的装备区的牌收入手牌并废除你的判定区和装备区，然后获得技能〖神威〗、〖神戟〗、〖破甲〗。（X为当前场上存活角色的数量）",
            "ssr_shenji":"神戟",
            "ssr_shenji_info":"锁定技，你始终视为装备着【方天画戟】；每回合限一次，你可以将一张装备牌当做【酒】使用。",
            "ssr_shenwei":"神威",
            "ssr_shenwei_info":"出牌阶段限一次，你可以将所有手牌置于武将牌上，再从中选择一张作为手牌，若如此做，你获得技能〖完杀〗，回合结束时你可以重新获得武将牌上的牌。",
            "ssr_liegong":"烈弓",
            "ssr_liegong_info":"锁定技，你始终视为装备着【麒麟弓】，你使用【杀】无距离限制；当你使用【杀】指定一名角色时，你可弃置一张牌令此【杀】不可被响应。",
            "ssr_pojia":"破甲",
            "ssr_pojia_info":"锁定技，当你使用【杀】指定一名目标角色后，你令其防具技能无效直到此【杀】被抵消或造成伤害。",
            "ssr_wansha":"完杀",
            "ssr_wansha_info":"锁定技，你的回合内，除你以外，不处于濒死状态的角色不能使用【桃】。",
            "ssr_ganglie":"刚烈",
            "ssr_ganglie_info":"每当你受到一点伤害后，你可以视为对伤害来源使用一张【杀】，若此【杀】没有命中，你弃伤害来源一张牌。",
            "ssr_danjing":"啖睛",
            "ssr_danjing_info":"锁定技，当你受到【万箭齐发】造成的伤害后，你回复一点体力。",
            "ssr_chuli":"除疠",
            "ssr_chuli_info":"出牌阶段，你可以将一名角色的一张手牌置于你的武将牌上，称为“药”，然后令该角色回复一点体力。（当你于回合内第二次获得相同花色的“药”时，本回合内你不能再发动此技能）",
            "ssr_xianfang":"仙方",
            "ssr_xianfang_info":"当有角色进入濒死状态时，你可以弃置四枚花色均不同的“药”并令该角色回复三点体力。",
            "ssr_yizhong":"毅重",
            "ssr_yizhong_info":"锁定技，当你受到不为红色的牌造成的伤害后，你获得等量的“甲”标记，你的“甲”标记可以替你承受等量的伤害。（你每有一枚“甲”，你的手牌上限便加一）",
            "ssr_zhenjun":"镇军",
            "ssr_zhenjun_info":"出牌阶段，你可以弃置一张黑桃牌，然后指定一名其他角色：该角色不能使用或打出黑色的牌直到你的下个回合开始或你死亡后。",
            "ssr_huanhua":"幻化",
            "ssr_huanhua_info":"你的回合开始或结束时，你可以指定场上的一名其他非神势力的角色，你化身成为该角色。（你拥有该角色的所有觉醒技以外的技能，你的名称与该角色相同）",
            "ssr_xinsheng":"新生",
            "ssr_xinsheng_info":"当你处于濒死状态时，若你处于化身状态，你可以放弃化身变为本体并将体力值回复至一点，然后你可以弃置一张红桃牌并获得〖潜行〗直到你的回合开始。",
            "ssr_shiyong":"恃勇",
            "ssr_shiyong_info":"锁定技，当你指定你为目标的【杀】没有命中时，【杀】的来源流失一点体力；当一张红色的【杀】指定你为目标时，你需要打出两张【闪】来响应。",
            "ssr_qingjian":"清俭",
            "ssr_qingjian_info":"摸牌阶段摸牌时，你可以少摸一张牌，然后令至多两名其他角色各摸一张牌。",
            "ssr_yaowu":"耀武",
            "ssr_yaowu_info":"当你使用黑色的【杀】被【闪】抵消时，你可以弃置目标角色一张手牌。",
            "ssr_kurou":"苦肉",
            "ssr_kurou_info":"出牌阶段限两次，你可以失去一点体力，然后观看一名其他角色的手牌，并可以获得其中至多两张牌。",
            "ssr_lihun":"离魂",
            "ssr_lihun_info":"准备阶段，你观看牌堆顶的两张牌，然后你可以跳过自己的回合，将这两张牌交给一名男性角色并控制其进行一个出牌阶段和弃牌阶段。（你控制该角色期间你免疫所有伤害和体力流失）",
            "ssr_biyue":"闭月",
            "ssr_biyue_info":"锁定技，你的手牌区、装备区、判定区每有一个区域没有牌，其他角色与你计算的距离则加一。",
            "ssr_wangzun":"妄尊",
            "ssr_wangzun_info":"主公的摸牌阶段，你可让其少摸一张牌，然后你观看场上一名角色的手牌并将其中一张移动到另一名角色的手牌中，如若此做，主公本回合内可以额外使用一张【杀】。",
            "ssr_yongsi":"庸肆",
            "ssr_yongsi_info":"主公技，锁定技，游戏开始时，你获得并装备【传国玉玺】。当一名角色因弃置而失去其区域内的【传国玉玺】时，【传国玉玺】于回合结束后回到该角色的手牌中。",
            "ssr_yuxi_cardskill":"传国玉玺",
            "ssr_yuxi_cardskill_info":"锁定技：一、与你势力不同的角色始终视为在你的攻击范围内；二、当你成为【杀】的目标时，你可以弃置两张手牌（不足则全弃，无牌则不弃），然后摸两张牌；三、发动二效果后你可以令一名势力与你相同的角色也执行一次二效果。",
            "ssr_tongji":"同疾",
            "ssr_tongji_info":"当你成为【杀】的目标时，你可以为此【杀】额外指定一名你攻击范围内的其他角色为目标。（此目标不能是【杀】的使用者）",
            "ssr_wushen":"武神",
            "ssr_wushen_info":"你可以将一张红色牌当做【杀】使用或打出；你使用红色的【杀】造成的伤害加一；体力值为一的角色不能闪避你的红色【杀】。",
            "ssr_lianzhan":"连斩",
            "ssr_lianzhan_info":"你的回合结束时，若你于本回合内杀死过角色，则你可以进行一个额外的回合。",
            "ssr_baiyi":"白衣",
            "ssr_baiyi_info":"当一名角色使用一张多目标的锦囊牌时，你可以取消任意一个目标。",
            "ssr_gongxin":"攻心",
            "ssr_gongxin_info":"出牌阶段，你可以弃置一张红桃牌，然后指定一名其他角色：该角色不能使用或打出红色的牌直到你的下个回合开始或你死亡后。",
            "ssr_keji":"克己",
            "ssr_keji_info":"锁定技，你的【杀】不计入手牌上限。",
            "ssr_shelie":"涉猎",
            "ssr_shelie_info":"摸牌阶段，你可以改为从牌堆顶亮出四张牌，然后选择获得其中两张牌。",
            "ssr_yicong":"义从",
            "ssr_yicong_info":"锁定技，你装备区的坐骑牌不能被其他角色弃置；当一名角色即将受到锦囊牌造成的伤害时，你可以弃置其一张装备区的坐骑牌并减少一点伤害。",
            "ssr_yucong":"驭骢",
            "ssr_yucong_info":"出牌阶段限两次，你可以弃置一张手牌并指定一名角色：你可选择随机将牌堆中一张攻击马或防御马置于其装备区内，或者弃置其一张坐骑牌。",
            "ssr_tongque":"铜雀",
            "ssr_tongque_info":"游戏开始时，你获得三枚“璃”标记；当你即将受到伤害时，你可以进行一次判定：若为红色，你防止此次伤害，若为黑色，你获得一枚“璃”标记。",
            "ssr_guose":"国色",
            "ssr_guose_info":"出牌阶段，你可以弃置一枚“璃”标记并摸一张牌，然后将一张【乐不思蜀】从一名角色的判定区置入或弃置。",
            "ssr_tianxiang":"天香",
            "ssr_tianxiang_info":"出牌阶段，你可以弃置一枚“璃”标记并指定一名其他角色：该角色流失一点体力，然后你与其各摸一张牌。（每个角色限一次）",
            "ssr_aozhan":"鏖战",
            "ssr_aozhan_info":"当你成为【杀】的目标后，你可以摸一张牌并弃置一张手牌，然后选择对此【杀】的来源使用一张【杀】：若你使用的【杀】造成伤害，则该角色的【杀】对你无效。",
            "ssr_luoyi":"裸衣",
            "ssr_luoyi_info":"锁定技，游戏开始时，你废除你的防具栏；当你使用【杀】或【决斗】指定目标后，你令此牌需要依次使用或打出两张【闪】或【杀】响应。",
            "ssr_paoxiao":"咆哮",
            "ssr_paoxiao_info":"你可以将任意一张手牌当做【杀】打出；当你对一名角色使用【杀】结算后，你可以视为对该角色再次使用同一张【杀】。（每张【杀】限一次，且不计入次数）",
            "ssr_zhenhun":"镇魂",
            "ssr_zhenhun_info":"锁定技，准备阶段，你令所有其他角色的非锁定技失效、不能使用或打出【杀】直到回合结束。",
            "ssr_luoshen":"洛神",
            "ssr_luoshen_info":"当你受到伤害后，你可以弃置所有手牌，然后从牌堆中随机获得四张花色不同的非装备牌。",
            "ssr_qingcheng":"倾城",
            "ssr_qingcheng_info":"出牌阶段限一次，你可以指定所有其他区域内有牌的男性角色为目标：你获得该角色区域内的一张牌，然后交给其一张牌。",
            "ssr_xiaoji":"枭姬",
            "ssr_xiaoji_info":"当你失去一张装备区内的牌后，你可以将此装备牌交给一名角色，令该角色摸一张牌并对该角色造成一点伤害。",
            "ssr_lianyin":"联姻",
            "ssr_lianyin_info":"出牌阶段限一次，你可以指定一名其他男性角色，直到你的下个回合开始，双方中有一方受到伤害时双方各摸一张牌，然后你翻开牌堆顶两张牌：该角色选择一张牌交给你，然后获得另一张牌。",
            "ssr_langgu":"狼顾",
            "ssr_langgu_info":"锁定技，你每受到一点伤害，你获得一枚“忍”标记；你与本轮对你造成过伤害的角色计算距离始终为一。",
            "ssr_fankui":"反馈",
            "ssr_fankui_info":"出牌阶段限三次，你可以弃置一枚“忍”标记并获得距离一以内的一名其他角色一张牌。",
            "ssr_jilue":"极略",
            "ssr_jilue_info":"你的回合内，每当你使用了两种颜色不同的牌后，你可获得一枚“忍”标记；一名角色的判定结果生效前，你可弃置一枚“忍”标记并更改其花色。",
            "ssr_jiyuan":"急援",
            "ssr_jiyuan_info":"当一名角色进入濒死状态时，你可以与其各摸一张牌。",
            "ssr_jijie":"机捷",
            "ssr_jijie_info":"出牌阶段限两次，你可以观看牌堆底的一张牌并展示之，然后将其交给一名角色，该角色可以立即使用此牌。",
            "ssr_qicai":"奇才",
            "ssr_qicai_info":"锁定技，你使用的锦囊牌无距离限制，且不能被【无懈可击】响应；你使用“对所有其他角色使用”的锦囊牌可以任意选择目标。",
            "ssr_jiqiao":"机巧",
            "ssr_jiqiao_info":"游戏开始时，你将牌堆顶的三张牌置于你的武将牌上，称之为“辎”。所有角色的出牌阶段，经过你的同意后，其可观看并用任意数量的手牌等量交换这些“辎”。",
            "ssr_jizhi":"集智",
            "ssr_jizhi_info":"你可以重铸一张锦囊牌，视为发动一次〖火计〗、〖八阵〗或〖看破〗。",
            "ssr_jizhi_huoji":"火计",
            "ssr_jizhi_huoji_info":"出牌阶段，你可以将你的任意一张红色手牌当作【火攻】使用。",
            "ssr_jizhi_kanpo":"看破",
            "ssr_jizhi_kanpo_info":"你可以将你的任意一张黑色手牌当做【无懈可击】使用。",
            "ssr_jizhi_bazhen":"八阵",
            "ssr_jizhi_bazhen_info":"锁定技，若你的防具栏内没有牌且没有被废除，则你视为装备着【八卦阵】。",
            "ssr_weimu":"帷幕",
            "ssr_weimu_info":"锁定技，你不能成为黑色锦囊牌的目标；你使用的黑色锦囊牌没有距离限制且不能被其他牌响应。",
            "ssr_zhenlue":"缜略",
            "ssr_zhenlue_info":"限定技，出牌阶段，你可从牌堆中随机展示四张不同的黑色非延时锦囊牌，然后你获得这些牌。",
            "ssr_juesha":"绝杀",
            "ssr_juesha_info":"限定技，出牌阶段，你可令除你外的所有角色不能使用【酒】或【桃】直到回合结束。",
            "ssr_beiming":"悲鸣",
            "ssr_beiming_info":"出牌阶段限一次，你可以指定所有其他角色为目标，然后选择一项：悲愤，手牌数大于你的角色弃置两张手牌，小于你的角色摸两张牌；胡笳，手牌数大于你的角色摸两张牌，小于你的角色弃置两张手牌。",
            "ssr_duanxian":"断弦",
            "ssr_duanxian_info":"限定技，出牌阶段，你可以指定一名其他角色并选择一种乐曲类型，然后该角色从你选择的类型中随机获得一种曲调效果：<br>〖雅乐〗<li>宫调：弃一张黑牌，可以减少受到伤害；<li>徵调：弃一张黑牌，可以增加回复体力。<br>〖俗乐〗<li>羽调：弃一张红牌，否则增加受到伤害；<li>商调：弃一张红牌，否则减少回复体力。",
            "ssr_juenian":"绝念",
            "ssr_juenian_info":"当你死亡时，你可以令杀死你的角色所有非锁定技全部失效，然后流失一点体力。",
            "ssr_jinnang":"锦囊",
            "ssr_jinnang_info":"出牌阶段，你可以将一张锦囊牌牌置于一名角色的武将牌上，并为其声明一张锦囊牌名，称为“锦囊妙计”，该角色的下个回合开始后，其可以将这张“锦囊妙计”按照你声明的牌名使用。（每名角色武将牌上“锦囊”声明的牌名不能重复）",
            "ssr_jinnang_pack":"妙计",
            "ssr_jinnang_pack_info":"出牌阶段，你可以将一张锦囊牌牌置于一名角色的武将牌上，并为其声明一张锦囊牌名，称为“锦囊妙计”，该角色的下个回合开始后，其可以将这张“锦囊妙计”按照你声明的牌名使用。（每名角色武将牌上“锦囊”声明的牌名不能重复）",
            "ssr_jinnang_wuxie":"妙计",
            "ssr_jinnang_wuxie_info":"出牌阶段，你可以将一张锦囊牌牌置于一名角色的武将牌上，并为其声明一张锦囊牌名，称为“锦囊妙计”，该角色的下个回合开始后，其可以将这张“锦囊妙计”按照你声明的牌名使用。（每名角色武将牌上“锦囊”声明的牌名不能重复）",
            "ssr_newbazhen":"八阵",
            "ssr_newbazhen_info":"当你于回合外需要使用或打出一张基本牌时，你可以从牌堆中随机观看四张花色均不同的牌，若其中有你需要的牌，你可以将其使用或打出。",
            "ssr_xingjiang":"星降",
            "ssr_xingjiang_info":"锁定技，回合开始阶段，你翻开牌堆顶的三张牌，选择一张交给一名角色，然后将剩余的牌置入弃牌堆。",
            "ssr_quanbian":"权变",
            "ssr_quanbian_info":"你的回合内或回合外各限一次，当你失去最后一张手牌时，你可以摸一张牌。",
            "ssr_manjia":"蛮甲",
            "ssr_manjia_info":"锁定技，你的【南蛮入侵】可以任意选择目标，当你的装备区没有牌时，你视为装备着【藤甲】。",
            "ssr_zaiqi":"再起",
            "ssr_zaiqi_info":"陨星技，锁定技，游戏开始时，你获得七枚“蛮”标记；出牌阶段开始时，你可以弃置一枚“蛮”标记并视为使用一张【南蛮入侵】，若如此做，本回合你内你不能使用【杀】。",
            "ssr_lieren":"烈刃",
            "ssr_lieren_info":"锁定技，游戏开始时，你将一张【烈淬刀】加入手牌；出牌阶段，你可以将一张武器牌置于一名其他角色的武将牌上，称为“刃”，你的回合开始时或当你进入濒死状态时，你获得所有角色武将牌上的“刃”并令其打出一张【闪】，否则对其造成一点伤害。（每名角色最多只能置入一枚“刃”）",
            "ssr_weilong":"危龙",
            "ssr_weilong_info":"出牌阶段，你可以额外使用一张【杀】；你可以将花色相同的X张牌按下列规则使用或打出：红桃当【桃】；方块当火【杀】；梅花当【闪】；黑桃当【酒】。当你因此法使用或打出牌后，你摸X张牌。（X为你的体力上限且最少为一）",
            "ssr_fabei":"伐北",
            "ssr_fabei_info":"锁定技，你的【杀】指定一名角色为目标后，你令其非锁定技全部失效直到回合结束，该角色须弃置一张基本牌，否则此【杀】不可被闪避。",
            "ssr_zhengnan":"征南",
            "ssr_zhengnan_info":"锁定技，当你成为【杀】的目标后，你令【杀】的使用者非锁定技全部失效直到回合结束，其须弃置一张基本牌，否则此【杀】对你无效。",
            "ssr_wanlan":"挽澜",
            "ssr_wanlan_info":"锁定技，当你进入濒死状态时，你立即摸两张牌，直到你的下个回合开始，你不能再发动此技能。",
            "ssr_zhiji":"志继",
            "ssr_zhiji_info":"觉醒技，锁定技，当场上有一名角色进入濒死状态时，你立即减少一点体力上限然后选择获得以下一个技能：【征南】、【伐北】、【挽澜】。（每名角色限一次，且当你已获得所有技能后，此技能失效）",
            "ssr_hunzi":"魂姿",
            "ssr_hunzi_info":"终焉技，出牌阶段限一次，你可以对一名其他角色发起决战，该角色选择失去一点体力或响应你的决战。若该角色选择了响应决战，则此技能视为限定技发动，你将场上除你和该角色以外的所有其他角色暂时移出游戏直到你或该角色中有一方死亡。",
            "ssr_jiang":"激昂",
            "ssr_jiang_info":"你的回合内或回合外各限一次，当你使用（指定目标后）或被使用（成为目标后）一张【决斗】或【杀】时，你可以摸一张牌。",
            "ssr_zhiba":"制霸",
            "ssr_zhiba_info":"主公技，准备阶段开始时，若你已受伤，你可令一名吴势力角色执行一项：摸两张牌，然后弃置一张牌；或摸一张牌，然后弃置两张牌。",
            "ssr_hanzhan":"酣战",
            "ssr_hanzhan_info":"锁定技，当你的拼点牌亮出以后，你令此牌的点数加二。（至多为K）",
            "ssr_tianyi":"天义",
            "ssr_tianyi_info":"出牌阶段限两次，你可以和一名其他角色拼点：赢的一方对没赢的一方造成一点伤害。",
            "ssr_buqu":"不屈",
            "ssr_buqu_info":"陨星技，锁定技，游戏开始时，你获得十二枚“创”标记，你的“创”可以替你承受等量的伤害或体力流失；只要你的武将牌有“创”，你使用【杀】时可额外指定一个目标。",
            "ssr_shensu":"神速",
            "ssr_shensu_info":"你可以跳过你的摸牌阶段或出牌阶段，且每当你跳过上述任一阶段或者受到一点伤害后，你获得三枚“速”标记；你可以弃置两枚“速”标记并跳过你的判定阶段或弃牌阶段。",
            "ssr_hubu":"虎步",
            "ssr_hubu_info":"结束阶段，你可以视为对任意一名其他角色使用任意张无视距离的【杀】，并弃置两倍的量的“速”标记。（每次不能超过三张【杀】）",
            "ssr_jushou":"据守",
            "ssr_jushou_info":"锁定技，游戏开始时，你从牌堆中获得四张随机的基本牌或【无懈可击】置于武将牌上，称为“盾”；当你即将受到大于一点的伤害时，你可以选择失去一枚“盾”，然后令该伤害减少至一。",
            "ssr_jiewei":"解围",
            "ssr_jiewei_info":"你可以将一张牌当做你的武将牌上的“盾”同名的牌使用。（每张“盾”限一次，直到你的下个回合开始时重置）",
            "ssr_tuntian":"屯田",
            "ssr_tuntian_info":"出牌阶段限一次，你可以弃置两张花色相同的牌并获得一枚该花色的标记，称为“田”。结束阶段，或每当你受到一点伤害时，你可以翻开牌堆顶的X张牌，然后选择获得其中的一张牌。（X为你拥有“田”标记的数量，你武将牌上的“田”花色不能重复）",
            "ssr_zaoxian":"凿险",
            "ssr_zaoxian_info":"觉醒技，准备阶段，当你拥有不少于四枚“田”标记时，你失去一点体力上限，然后获得技能〖急袭〗。",
            "ssr_jixi":"急袭",
            "ssr_jixi_info":"出牌阶段开始时，你可以获得一名与你距离不大于二的角色的一张牌。",
            "ssr_hengzheng":"横征",
            "ssr_hengzheng_info":"锁定技，摸牌阶段，你改为将牌堆顶，以及所有其他角色手牌中或装备区域中的一张牌移出，然后你从中获得不大于你应摸牌数量的牌。若你因此移走了一名角色的装备牌，该角色获得技能〖讨伐〗。",
            "ssr_taofa":"讨伐",
            "ssr_taofa_info":"锁定技，你对拥有〖横征〗的角色：【杀】造成的伤害加一，距离始终视为一，你的伤害对其产生效果后你失去此技能。",
            "ssr_baonue":"暴虐",
            "ssr_baonue_info":"锁定技，你对其他角色、其他角色对你使用【杀】时，都需连续使用两张【闪】来进行响应。",
            "ssr_jiuchi":"酒池",
            "ssr_jiuchi_info":"主公技，其他群雄角色使用的【酒】结算后，可以将此【酒】对应的实体牌交给你并令你流失一点体力，然后你可以令其摸两张牌。",
            "ssr_mizhou":"秘咒",
            "ssr_mizhou_info":"出牌阶段，你可以将任意张手牌反面朝上置于你的武将牌上，称之为“咒”；当其他角色使用或打出与“咒”同名的牌时，你可展示并弃置该“咒”，使此牌无效，然后使该角色流失一点体力。（你的武将牌上最多只能存在四张“咒”，且你于出牌阶段开始时获得所有的“咒”）",
            "ssr_chanyuan":"缠怨",
            "ssr_chanyuan_info":"锁定技，杀死你的角色进入混乱状态。（进入混乱状态的角色无法自我控制，以对自我不利的形式进行操作）",
            "ssr_luanji":"乱击",
            "ssr_luanji_info":"出牌阶段限两次，你可以将任意两张手牌当做【万箭齐发】使用，你使用的【万箭齐发】无视防具。",
            "ssr_dingsheng":"鼎盛",
            "ssr_dingsheng_info":"锁定技，每回合限一次，当你失去牌时，若你失去牌的数量不少于两张，你摸一张牌；【万箭齐发】对你无效；你的【万箭齐发】不能被【无懈可击】响应。",
            "ssr_xueyi":"血裔",
            "ssr_xueyi_info":"主公技，每名角色限一次：当一名角色进入濒死状态时，若其为忠臣，其可亮出身份牌并将体力回复至一，然后若其势力为群雄，其获得技能〖鼎盛〗。",
            "ssr_juejing":"绝境",
            "ssr_juejing_info":"锁定技，游戏开始时，你废除你的判定区；你的武将牌始终正面向上，且你不能被横置。",
            "ssr_kuangao":"狂傲",
            "ssr_kuangao_info":"出牌阶段限一次，你可以令一名其他角色进行选择：交给你一张【杀】，然后令你本回合内使用【杀】不能被响应，且可以额外使用一张【杀】；或弃置你的一张牌。",
            "ssr_qimou":"奇谋",
            "ssr_qimou_info":"限定技，出牌阶段，你可以将武将牌翻面，然后指定一名其他角色：本回合内你对其造成的所有伤害翻倍，且其不能使用或打出任何牌。",
            "ssr_xuanhuo":"眩惑",
            "ssr_xuanhuo_info":"出牌阶段限一次，你可以交给一名其他角色一张牌，然后直到你的下个回合开始，若其体力值大于零，该角色的所有手牌均视为【杀】。",
            "ssr_fabing":"法兵",
            "ssr_fabing_info":"锁定技，出牌阶段，当你使用第一张【杀】时，你改为视为使用一张任意属性的【杀】或单个目标的非延时锦囊牌。（计入【杀】的使用次数）",
            "ssr_lianhuan":"连环",
            "ssr_lianhuan_info":"出牌阶段限三次，你可以重铸一张梅花牌并指定至多三名角色：这些角色进入或解除连锁状态。（当处于连锁状态的角色成为锦囊牌或【杀】的唯一目标后，其他处于连锁状态的角色视为也被使用同样的牌，然后所有角色解除连锁状态）",
            "ssr_sance":"三策",
            "ssr_sance_info":"陨星技，游戏开始时，你获得三枚“策”标记，你的“策”标记可以当作任意基本牌或锦囊牌使用或打出。",
            "ssr_xiebian":"械变",
            "ssr_xiebian_info":"每回合限一次，你可以选择一项：跳过你的摸牌阶段，然后获得至多两名角色各一张手牌，并获得技能〖梵天〗；跳过你的出牌阶段，然后移动场上的一张牌，并获得技能〖修罗〗；跳过你的弃牌阶段，然后摸一张牌，并获得技能〖释迦〗，你的“械”标记可以替你承受等量的伤害。（你因〖械变〗获得的技能在你的下个回合开始失效，你每有一枚“械”，你的手牌上限便加一）",
            "ssr_xiebian_futu":"浮屠",
            "ssr_xiebian_futu_info":"锁定技，每当你受到一点伤害后，你进行一次判定：若为黑桃，你获得一枚“械”标记，否则你随机获得一张装备牌并可以使用之。",
            "ssr_xiebian_fantian":"梵天",
            "ssr_xiebian_fantian_info":"锁定技，每当你受到一点伤害后，你进行一次判定：若为红桃，你获得一枚“械”标记，否则你随机获得一张延时锦囊牌并可以使用之。",
            "ssr_xiebian_xiuluo":"修罗",
            "ssr_xiebian_xiuluo_info":"锁定技，每当你受到一点伤害后，你进行一次判定：若为梅花，你获得一枚“械”标记，否则你随机获得一张基本牌并可以使用之。",
            "ssr_xiebian_shijia":"释迦",
            "ssr_xiebian_shijia_info":"锁定技，每当你受到一点伤害后，你进行一次判定：若为方块，你获得一枚“械”标记，否则你随机获得一张普通锦囊牌并可以使用之。",
            "ssr_jueqing":"绝情",
            "ssr_jueqing_info":"锁定技，你造成活受到的伤害均视为流失体力。",
            "ssr_shangshi":"伤逝",
            "ssr_shangshi_info":"每回合限四次，当场上有一名角色流失体力后，若其存活，你可以令该角色选择一项：弃X张牌；或令你摸X张牌。（X为该角色流失体力的数值）",
            "ssr_fangzhu":"放逐",
            "ssr_fangzhu_info":"出牌阶段限一次，你可以翻开牌堆顶的三张牌，选择至少一张交给一名其他角色，然后令该角色翻面。",
            "ssr_xingshang":"行殇",
            "ssr_xingshang_info":"当有一名角色受到伤害时，若其没有技能〖酒诗〗，你可以立即令其获得技能〖酒诗〗并摸一张牌直到其回合结束。",
            "ssr_jiushi":"酒诗",
            "ssr_jiushi_info":"当你需要使用【酒】时，你可以翻面并视为使用一张【酒】。当你受到伤害后，若你的武将牌背面朝上，你可以将武将牌翻面并摸一张牌。",
            "ssr_songwei":"颂威",
            "ssr_songwei_info":"主公技，锁定技，游戏开始时，你令所有的反贼展示身份，然后令所有魏势力的角色各摸一张牌。",
            "ssr_jieliang":"截粮",
            "ssr_jieliang_info":"出牌阶段，你可以弃置一张黑色非锦囊牌，然后令一名其他角色获得一枚“截”标记。每当有“截”标记的角色获得牌时，其进行一次判定：若不为梅花，其将获得的所有牌置于武将牌上，称为“粮”，对该角色造成伤害的角色可以从其武将牌上获得相应数量的“粮”，该角色每回合结束时若其有“截”标记，其移除一枚“截”，若其没有“截”标记，其获得武将牌上所有的“粮”。",
            "ssr_zhiyan":"治严",
            "ssr_zhiyan_info":"当你受到伤害后，你可以从牌堆中获得一张黑色非锦囊牌，然后若你的手牌数大于体力上限，你需弃一张牌。",
            "ssr_yinghun":"英魂",
            "ssr_yinghun_info":"准备阶段，你可以投掷两枚骰子并指定一名角色：你令该角色摸一枚骰子点数的牌，然后弃置另一枚骰子点数的牌。",
            "ssr_polu":"破虏",
            "ssr_polu_info":"锁定技，你始终视为装备着【古锭刀】。",
            "ssr_shenfen":"神愤",
            "ssr_shenfen_info":"觉醒技，锁定技，当你的“暴怒”标记首次达到六枚时，你立即获得技能〖神威〗，然后装备【炼狱斩戟】、【修罗重铠】、【梦魇赤兔】和【邪神面具】。",
            "ssr_kuangbao":"狂暴",
            "ssr_kuangbao_info":"锁定技，游戏开始时，你获得两枚“暴怒”标记，每回合限一次，当你造成或受到伤害后，若你的“暴怒”标记少于六枚，你获得一枚“暴怒”标记。",
            "ssr_jiwu":"极武",
            "ssr_jiwu_info":"当你拥有“暴怒”标记时，你可以将三枚“暴怒”标记当做一张【酒】使用。",
            "ssr_newshenwei":"神威",
            "ssr_newshenwei_info":"锁定技，每当你失去【炼狱斩戟】、【修罗重铠】、【梦魇赤兔】和【邪神面具】中的任意一张装备牌时，你须选择移去一枚“暴怒”标记或者流失一点体力，然后进行重铸：你的下个准备阶段，你重新获得并装备这张牌。",
            "ssr_zhanshen_lianyu":"炼狱斩戟",
            "ssr_zhanshen_lianyu_info":"锁定技，你的【杀】时可以为此额外指定两个目标，且你的【杀】无视目标的防具。",
            "ssr_zhanshen_xiuluo":"修罗重铠",
            "ssr_zhanshen_xiuluo_info":"锁定技，你最多只能受到一点伤害，你在回合外受到伤害后立即结束当前角色的出牌阶段。",
            "ssr_zhanshen_mengyan":"梦魇赤兔",
            "ssr_zhanshen_mengyan_info":"锁定技，你视为废除防御坐骑区，你与其他角色计算距离减二，你造成的伤害均视为火属性且防止即将受到的火属性伤害。",
            "ssr_zhanshen_xieshen":"邪神面具",
            "ssr_zhanshen_xieshen_info":"锁定技，你的武将牌始终正面朝上，你不能被横置，且不能成为延时锦囊牌和拼点的目标。",
            "ssr_dimeng":"缔盟",
            "ssr_dimeng_info":"准备阶段，你可以指定两名其他角色：你令手牌数量少的一方获得X枚“盟”标记，然后双方交换手牌。（X为两名角色的手牌数量差，拥有“盟”的角色摸牌阶段可弃置一枚“盟”标记并额外摸一张牌）",
            "ssr_fuhui":"赴会",
            "ssr_fuhui_info":"出牌阶段限一次，你可以与一名角色拼点：若你赢，你令该角色不能使用任何牌直到你的回合开始或你死亡。",
            "ssr_zhijian":"直谏",
            "ssr_zhijian_info":"出牌阶段，你可以将一张牌交给一名角色：直到这张牌离开该角色的手牌区或该角色受到伤害，该角色不能弃置这张牌，不能使用或打出这张牌以外的牌。",
            "ssr_guzheng":"固政",
            "ssr_guzheng_info":"当有一名角色因弃置而失去了至少两张牌时，你可以从弃置的牌中选择一张回到该角色的手牌。",
            "ssr_guidao":"鬼道",
            "ssr_huidao_info":"当你进行判定时，你可以翻开牌堆顶的两张牌，并将其中一张作为判定结果；出牌阶段限一次，你可以将一张牌置于一名没有〖鬼道〗技能的角色的武将牌上，称为“咒”；当有“咒”的角色进行判定时，其将“咒”作为判定牌。",
            "ssr_zhuji":"助祭",
            "ssr_zhuji_info":"主公技，其他群雄角色判定生效后，若结果为黑桃2~9，其可以令你恢复一点体力。",
            "ssr_huangtian":"皇天",
            "ssr_huangtian_info":"锁定技，你使用雷属性的【杀】没有距离限制且不可被闪避；一名角色的回合开始时，若其判定区内没有【闪电】，你将一张【闪电】置入其判定区并获得一张雷【杀】。",
            "ssr_houtu":"后土",
            "ssr_houtu_info":"锁定技，你使用火属性的【杀】没有距离限制且不可被闪避；一名角色的回合开始时，若其判定区内没有【火山】，你将一张【火山】置入其判定区并获得一张火【杀】。",
            "ssr_cangsheng":"苍生",
            "ssr_cangsheng_info":"锁定技，你使用冰属性的【杀】没有距离限制且不可被闪避；一名角色的回合开始时，若其判定区内没有【洪水】，你将一张【洪水】置入其判定区并获得一张冰【杀】。",
            "ssr_zhuhai":"诛害",
            "ssr_zhuhai_info":"其他角色的结束阶段开始时，若其于本回合内造成过伤害，你可以将一张手牌当做【杀】对其使用。",
            "ssr_yijian":"遗荐",
            "ssr_yijian_info":"终焉技，当你成为其他角色锦囊牌的唯一目标时，你获得一枚“言”标记，当你的“言”标记超过两枚时，则此技能视为觉醒技发动，你立即失去一点体力上限，获得技能〖无言〗，然后可以令一名其他角色获得技能〖卧龙〗。",
            "ssr_wuyan":"无言",
            "ssr_wuyan_info":"锁定技，你使用的锦囊牌对其他角色无效；其他角色使用的锦囊牌对你无效。",
            "ssr_wolong":"卧龙",
            "ssr_wolong_info":"转换技，锁定技，准备阶段，阴：你获得技能〖看破〗直到下次转换；阴：你获得技能〖火计〗直到下次转换。",
            //lib.translate._XC7_zhengli = "整理";
        },
    },
    intro:"",
    //author:"<span class=\"helasisytext\" style=\"color:#87CEFA\">Helasisy星云</span>",
    author:"",
    diskURL:"",
    forumURL:"",
    version:"15.5",
},files:{"character":[],"card":[],"skill":[]}}})